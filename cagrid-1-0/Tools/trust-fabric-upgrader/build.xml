<?xml version="1.0"?>
<project name="caGrid 1.0 to caGrid 1.1 Trust Fabric Upgrader" basedir="." default="upgradeTrustFabric">
    <property environment="env" />
    <property name="lib.dir" value="${basedir}/lib" />

    <target name="upgradeTrustFabric" description="Do a complete update including the caGrid distribution, SyncGTS in Tomcat, and SyncGTS in Globus." depends="upgradeDistribution,upgradeTomcatDeployment,upgradeGlobusDeployment">
        <echo message="============================================================" />
        <echo message="              TRUST FABRIC UPGRADE SUCCESSFULL              " />
        <echo message="------------------------------------------------------------" />
        <echo message="To complete the update, please syncronize your trust fabric." />
        <echo message="To do so, run 'ant syncWithTrustFabric' from the caGrid directory [${cagrid.location}]." />
        <echo message="============================================================" />
    </target>

    <target name="upgradeDistribution" description="Only upgrade the caGrid distribution.">
        <input message="Please enter the location of your caGrid distribution:" addproperty="cagrid.location" />

        <property name="sync.description" value="${cagrid.location}/projects/syncgts/etc/sync-description.xml" />
        <property name="certificates.dir" value="${cagrid.location}/projects/syncgts/resources/certificates" />
        <condition property="cagrid.not.found">
            <or>
                <not>
                    <available file="${sync.description}" />
                </not>
                <not>
                    <available file="${certificates.dir}" />
                </not>
            </or>
        </condition>
        <fail message="The caGrid location specified [${cagrid.location}] is not a valid caGrid 1.0 installation!!!" if="cagrid.not.found" />

        <echo message="caGrid Location: ${cagrid.location}" />
        <echo message="Attempting to replace sync description..." />
        <copy file="sync-description.xml" tofile="${sync.description}" failonerror="true" overwrite="true" verbose="true"/>

        <echo message="Removing old certificates..." />
        <delete failonerror="true" verbose="true">
            <fileset dir="${certificates.dir}" includes="**/*" />
        </delete>

        <echo message="Copying new certificates..." />
        <copy todir="${certificates.dir}" overwrite="true" failonerror="true" verbose="true">
            <fileset dir="certificates">
                <include name="**" />
            </fileset>
        </copy>
    </target>

    <target name="upgradeTomcatDeployment" description="Only upgrade the Tomcat deployment of SyncGTS." depends="setTomcat">
        <echo message="Tomcat: ${tomcat.location}" />
        <property name="tomcat.sync.description" value="${tomcat.location}/webapps/wsrf/WEB-INF/etc/cagrid_SyncGTS/sync-description.xml" />
        
        <echo message="Looking for Tomcat sync description: ${tomcat.sync.description}" />
        <condition property="syncgts.tomcat.not.found">
            <not>
                <available file="${tomcat.sync.description}" />
            </not>
        </condition>
        
        <antcall target="ifSyncGTSDeployedToTomcat" inheritall="true" />
        <antcall target="ifNotSyncGTSDeployedToTomcat" inheritall="true" />
    </target>

    <target name="ifSyncGTSDeployedToTomcat" unless="syncgts.tomcat.not.found">
        <echo message="Replacing tomcat-deployed sync description..." />
        <copy file="sync-description.xml" tofile="${tomcat.sync.description}" overwrite="true" failonerror="true" verbose="true"/>
        <antcall target="copyCertificatesToGlobusTrustedCertificatesDirectory" inheritall="true" />
    </target>
    <target name="ifNotSyncGTSDeployedToTomcat" if="syncgts.tomcat.not.found">
        <echo message="SyncGTS not found deployed to Tomcat.  Skipping." />
    </target>

    <target name="upgradeGlobusDeployment" description="Only upgrade the Globus deployment of SyncGTS." depends="setGlobus">
        <echo message="Globus: ${globus.location}" />
        <property name="globus.sync.description" value="${globus.location}/etc/cagrid_SyncGTS/sync-description.xml" />
        
        <echo message="Looking for Globus sync description: ${globus.sync.description}" />
        <condition property="syncgts.globus.not.found">
            <not>
                <available file="${globus.sync.description}" />
            </not>
        </condition>
        
        <antcall target="ifSyncGTSDeployedToGlobus" inheritall="true" />
        <antcall target="ifNotSyncGTSDeployedToGlobus" inheritall="true" />
    </target>

    <target name="ifSyncGTSDeployedToGlobus" unless="syncgts.globus.not.found">
        <echo message="Replacing globus-deployed sync description..." />
        <copy file="sync-description.xml" tofile="${globus.sync.description}" failonerror="true" overwrite="true" verbose="true"/>
        <antcall target="copyCertificatesToGlobusTrustedCertificatesDirectory" inheritall="true" />
    </target>
    <target name="ifNotSyncGTSDeployedToGlobus" if="syncgts.globus.not.found">
        <echo message="SyncGTS not found deployed to Globus.  Skipping." />
    </target>

    <target name="copyCertificatesToGlobusTrustedCertificatesDirectory">
        <property name="trusted.certificates.directory" value="${user.home}/.globus/certificates" />
        <mkdir dir="${trusted.certificates.directory}" />

        <echo message="Copying new certificates to trusted certificates directory [${trusted.certificates.directory}]..." />
        <copy todir="${trusted.certificates.directory}" failonerror="true" overwrite="true" verbose="true">
            <fileset dir="certificates">
                <include name="**" />
            </fileset>
        </copy>
    </target>


    <target name="setGlobus" if="env.GLOBUS_LOCATION">
        <property name="globus.location" value="${env.GLOBUS_LOCATION}" />
    </target>


    <target name="setTomcat" if="env.CATALINA_HOME">
        <property name="tomcat.location" value="${env.CATALINA_HOME}" />
    </target>

</project>
