<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:gp="gme://GenePattern.caBIG/1/gridExtensions" targetNamespace="gme://GenePattern.caBIG/1/gridExtensions">
  <xs:element name="ClassMembership" type="gp:ClassMembership" />
  <xs:complexType name="ClassMembership">
    <xs:annotation>
      <xs:documentation>defines the class membership for samples.  e.g. If you have four samples, two tumour and two normals in that order, this object would have numSamples = 4 sampleNames={"sample1","sample2","sample3","sample4"} classNames = {"tumour", "normal"}sampleClasses = 0, 0, 1, 1</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="classNames" type="xs:string" maxOccurs="unbounded" />
      <xs:element name="numSamples" type="xs:int" />
      <xs:element name="sampleClasses" type="xs:int" maxOccurs="unbounded" />
      <xs:element name="sampleNames" type="xs:string" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ConsensusMatrix" type="gp:ConsensusMatrix" />
  <xs:complexType name="ConsensusMatrix">
    <xs:sequence>
      <xs:element name="ConsensusMatrixRow" type="gp:ConsensusMatrixRow" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ComparativeMarkerSelectionResultCollection" type="gp:ComparativeMarkerSelectionResultCollection" />
  <xs:complexType name="ComparativeMarkerSelectionResultCollection">
    <xs:sequence>
      <xs:element name="MarkerResult" type="gp:MarkerResult" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ComparativeMarkerSelectionService" type="gp:ComparativeMarkerSelectionService" />
  <xs:complexType name="ComparativeMarkerSelectionService">
    <xs:sequence />
  </xs:complexType>
  <xs:element name="ConsensusClusteringParameterSet" type="gp:ConsensusClusteringParameterSet" />
  <xs:complexType name="ConsensusClusteringParameterSet">
    <xs:sequence>
      <xs:element name="algorithm" type="xs:string">
        <xs:annotation>
          <xs:documentation>Type of clustering algorithm hierarchical;SOM; NMF</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="descent.iter" type="xs:int">
        <xs:annotation>
          <xs:documentation>Number of SOM/NMF iterations (ignored whe algo is hierarchical)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="kmax" type="xs:int">
        <xs:annotation>
          <xs:documentation>The maximum number of clusters. Tries K=2,3,...,kmax clusters (must be &gt;1)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="merge.type" type="xs:string">
        <xs:annotation>
          <xs:documentation>Ignored when algo other than hierarchical average; complete; single</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="niter" type="xs:int">
        <xs:annotation>
          <xs:documentation>Number of resampling iterations</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="norm.iter" type="xs:int">
        <xs:annotation>
          <xs:documentation>number of row/column normalization iterations (supercedes normalize.type)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="normalize.type" type="xs:string">
        <xs:annotation>
          <xs:documentation>row-wise, col-wise, both -n1=row-wise; -n2=col-wise; -n3=both; =none</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="resample" type="xs:string">
        <xs:annotation>
          <xs:documentation>resampling scheme ('subsample[ratio]', 'features[nfeat]', 'nosample')</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Cluster" type="gp:Cluster" />
  <xs:complexType name="Cluster">
    <xs:sequence>
      <xs:element name="itemName" type="xs:string" minOccurs="0" maxOccurs="unbounded" />
      <xs:element name="name" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="PreprocessDatasetParameterSet" type="gp:PreprocessDatasetParameterSet" />
  <xs:complexType name="PreprocessDatasetParameterSet">
    <xs:sequence>
      <xs:element name="ceiling" type="xs:float">
        <xs:annotation>
          <xs:documentation>Value for ceiling</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="column.threshold" type="xs:float">
        <xs:annotation>
          <xs:documentation>Threshold for removing rows</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="filter.flag" type="xs:int">
        <xs:annotation>
          <xs:documentation>Variation filter and thresholding flag 0=no filter; 1=filter</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="log.base.two" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Whether to take the log base two after thresholding true=yes; false=no</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="max.sigma.binning" type="xs:int">
        <xs:annotation>
          <xs:documentation>Maximum sigma for binning</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="min.change" type="xs:float">
        <xs:annotation>
          <xs:documentation>Minimum fold change for filter</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="min.delta" type="xs:float">
        <xs:annotation>
          <xs:documentation>Minimum delta for filter</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="num.excl" type="xs:int">
        <xs:annotation>
          <xs:documentation>Number of experiments to exclude before applying variation filter</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="number.of.columns.above.threshold" type="xs:int">
        <xs:annotation>
          <xs:documentation>Remove row if n columns not than given threshold</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="preprocessing.flag" type="xs:string">
        <xs:annotation>
          <xs:documentation>Discretization or normalization flag  1=discretize; 0=no disc or norm; 2=row normalization</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="prob.thres" type="xs:float">
        <xs:annotation>
          <xs:documentation>Value for uniform probability threshold filter: 1 (default)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="threshold" type="xs:float">
        <xs:annotation>
          <xs:documentation>Value for thresholding</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ConsensusClusterResultCollection" type="gp:ConsensusClusterResultCollection" />
  <xs:complexType name="ConsensusClusterResultCollection">
    <xs:sequence>
      <xs:element name="ConsensusMatrix" type="gp:ConsensusMatrix" minOccurs="0" maxOccurs="unbounded" />
      <xs:element name="Cluster" type="gp:Cluster" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="MarkerResult" type="gp:MarkerResult" />
  <xs:complexType name="MarkerResult">
    <xs:sequence>
      <xs:element name="Bonferroni" type="xs:double">
        <xs:annotation>
          <xs:documentation>The value of the Bonferroni correction applied to the feature specific pvalue.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="class0_mean" type="xs:double">
        <xs:annotation>
          <xs:documentation>The class zero mean</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="class0_std" type="xs:double">
        <xs:annotation>
          <xs:documentation>The class zero standard deviation.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="class1_mean" type="xs:double">
        <xs:annotation>
          <xs:documentation />
        </xs:annotation>
      </xs:element>
      <xs:element name="class1_std" type="xs:double">
        <xs:annotation>
          <xs:documentation>The class one standard deviation.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>description of the feature (repeated from input data)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="FDR" type="xs:double">
        <xs:annotation>
          <xs:documentation>An estimate of the false discovery rate by the Benjamini and Hochberg procedure. The FDR is the expected proportion of erroneous rejections among all rejections. (Good, P. (1994) Permutation Tests: A Practical Guide for Testing Hypotheses, NewYork: Springer-Verlag)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="feature" type="xs:string">
        <xs:annotation>
          <xs:documentation>feature name (e.g. affy probe id)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="feature_p_high" type="xs:double">
        <xs:annotation>
          <xs:documentation>-The estimated upper bound for the feature p-value.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="feature_p_low" type="xs:double">
        <xs:annotation>
          <xs:documentation>The estimated lower bound for the feature p-value.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="featureP" type="xs:double">
        <xs:annotation>
          <xs:documentation>The feature-specific p-value based on permutation testing.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="fold_change" type="xs:double">
        <xs:annotation>
          <xs:documentation>The class zero mean divided by the class one mean.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="FWER" type="xs:double">
        <xs:annotation>
          <xs:documentation>FWER (Family Wise Error Rate) - the probability of at least one null hypothesis/feature having a score better than or equal to the observed one. This measure is not featurespecific.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="k" type="xs:double">
        <xs:annotation>
          <xs:documentation>If performing a two-sided test or a one-sided test for markers of class zero, the number of permuted scores greater than or equal to the observed score. If testing for markers of class one, then the number of permuted scores less than or equal to the observed score.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="maxT" type="xs:double">
        <xs:annotation>
          <xs:documentation>The adjusted p-values for the maxT multiple testing procedure described in (5), which provides strong control of the FWER.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Q_Value" type="xs:double">
        <xs:annotation>
          <xs:documentation>An estimate of the FDR using the procedure developed by Storey and Tibshirani  (Storey, J.D. and R. Tibshirani (2003) Statistical significance for genomewide studies. PNAS, 100(16): p. 9440-9445.)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="rank" type="xs:int">
        <xs:annotation>
          <xs:documentation>The rank of the feature within the dataset based on the value of the test statistic. If a two-sided p-value is computed, the rank is with respect to the absolute value of the statistic.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="score" type="xs:double">
        <xs:annotation>
          <xs:documentation>The value of the test statistic.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ConsensusMatrixRow" type="gp:ConsensusMatrixRow" />
  <xs:complexType name="ConsensusMatrixRow">
    <xs:sequence>
      <xs:element name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>description of the feature</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="feature" type="xs:string">
        <xs:annotation>
          <xs:documentation>name of a feature (e.g. affy probe id)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="scores" type="xs:double" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>consensus scores for this feature  (i.e. how many times was this feature used)</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ComparativeMarkerSelectionParameterSet" type="gp:ComparativeMarkerSelectionParameterSet" />
  <xs:complexType name="ComparativeMarkerSelectionParameterSet">
    <xs:sequence>
      <xs:element name="balanced" type="xs:string">
        <xs:annotation>
          <xs:documentation>Whether to perform balanced permutations true=yes; false=no</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="complete" type="xs:string">
        <xs:annotation>
          <xs:documentation>Whether to perform all possible permutations  true=yes; false=no</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="min.std" type="xs:float">
        <xs:annotation>
          <xs:documentation>The minimum standard deviation if test statistic includes min std option</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="number.of.permutations" type="xs:int">
        <xs:annotation>
          <xs:documentation>The number of permutations to perform (use 0 to calculate asymptotic p-values)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="phenotype.test" type="xs:string">
        <xs:annotation>
          <xs:documentation>Tests to perform when cls file has more than two classes (Note: not fully corrected for multiple hypothesis testing) one versus all; all pairs</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="random.seed" type="xs:int">
        <xs:annotation>
          <xs:documentation>The seed of the random number generator used to produce permutations</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="smooth.p.values" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Whether to smooth p-values true=yes; false=no</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="test.direction" type="xs:int">
        <xs:annotation>
          <xs:documentation>The test to perform. 0=Class 0; 1=Class 1; 2=2 Sided</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="test.statistic" type="xs:int">
        <xs:annotation>
          <xs:documentation>The test statistic to use.1=SNR; 0=T-Test; 3=SNR (median); 2=T-Test (median); 4=T-Test (min std); 5=SNR (min std); 6=SNR (median, min std); 7=T-Test (median, min std)</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Describable" type="gp:Describable" />
  <xs:complexType name="Describable" abstract="true">
    <xs:annotation>
      <xs:documentation>Abstract class that allows subclasses to inherit the association to Description, for detailed annotations such as Ontology entries and Database references, the association to Audit, for tracking changes, and the association to Security for indicating permissions.</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="gp:Extendable">
        <xs:sequence />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="Identifiable" type="gp:Identifiable" />
  <xs:complexType name="Identifiable" abstract="true">
    <xs:annotation>
      <xs:documentation>An Identifiable class is one that has an unambiguous reference within the scope.  It also has a potentially ambiguous name.</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="gp:Describable">
        <xs:sequence>
          <xs:element name="name" type="xs:string">
            <xs:annotation>
              <xs:documentation>The potentially ambiguous common identifier.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="identifier" type="xs:string">
            <xs:annotation>
              <xs:documentation>An identifier is an unambiguous string that is unique within the scope (i.e. a document, a set of related documents, or a repository) of its use.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="Extendable" type="gp:Extendable" />
  <xs:complexType name="Extendable" abstract="true">
    <xs:annotation>
      <xs:documentation>Abstract class that specifies for subclasses an association to NameValueTypes.  These can be used, for instance, to specify proprietary properties and in-house processing hints.</xs:documentation>
    </xs:annotation>
    <xs:sequence />
  </xs:complexType>
  <xs:element name="BioAssay" type="gp:BioAssay" />
  <xs:complexType name="BioAssay" abstract="true">
    <xs:annotation>
      <xs:documentation>An abstract class which represents both physical and computational groupings of arrays and biomaterials.</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="gp:Identifiable">
        <xs:sequence />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="DerivedBioAssay" type="gp:DerivedBioAssay" />
  <xs:complexType name="DerivedBioAssay">
    <xs:annotation>
      <xs:documentation>A BioAssay that is created by the Transformation BioEvent from one or more MeasuredBioAssays or DerivedBioAssays.</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="gp:BioAssay">
        <xs:sequence>
          <xs:element name="derivedBioAssayData" type="gp:DerivedBioAssayData" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="PhysicalBioAssay" type="gp:PhysicalBioAssay" />
  <xs:complexType name="PhysicalBioAssay">
    <xs:annotation>
      <xs:documentation>A bioAssay created by the bioAssayCreation event (e.g. in gene expression analysis this event is represented by the hybridization event).</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="gp:BioAssay">
        <xs:sequence />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="MeasuredBioAssay" type="gp:MeasuredBioAssay" />
  <xs:complexType name="MeasuredBioAssay">
    <xs:annotation>
      <xs:documentation>A measured bioAssay is the direct processing of information in a physical bioAssay by the featureExtraction event.  Often uses images which are referenced through the physical bioAssay.</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="gp:BioAssay">
        <xs:sequence>
          <xs:element name="measuredBioAssayData" type="gp:MeasuredBioAssayData" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="BioDataCube" type="gp:BioDataCube" />
  <xs:complexType name="BioDataCube">
    <xs:annotation>
      <xs:documentation>A three-dimensional cube representation of the data.</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="gp:BioDataValues">
        <xs:sequence>
          <xs:element name="cube" type="xs:string">
            <xs:annotation>
              <xs:documentation>Three dimension array, indexed by the three dimensions to provide the data for the BioAssayData.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="order" type="xs:string">
            <xs:annotation>
              <xs:documentation>The order to expect the dimension. The enumeration uses the first letter of the three dimensions to represent the six possible orderings.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="QuantitationTypeDimension" type="gp:QuantitationTypeDimension" />
  <xs:complexType name="QuantitationTypeDimension">
    <xs:annotation>
      <xs:documentation>An ordered list of quantitationTypes.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="name" type="xs:string">
        <xs:annotation>
          <xs:documentation>The potentially ambiguous common identifier.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="identifier" type="xs:string">
        <xs:annotation>
          <xs:documentation>An identifier is an unambiguous string that is unique within the scope (i.e. a document, a set of related documents, or a repository) of its use.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="quantitationTypes" type="gp:QuantitationType" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="BioDataValues" type="gp:BioDataValues" />
  <xs:complexType name="BioDataValues" abstract="true">
    <xs:annotation>
      <xs:documentation>The actual values for the BioAssayCube.</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="gp:Extendable">
        <xs:sequence />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="MeasuredBioAssayData" type="gp:MeasuredBioAssayData" />
  <xs:complexType name="MeasuredBioAssayData">
    <xs:annotation>
      <xs:documentation>The data associated with the MeasuredBioAssay produced by FeatureExtraction.</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="gp:BioAssayData">
        <xs:sequence />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="DerivedBioAssayData" type="gp:DerivedBioAssayData" />
  <xs:complexType name="DerivedBioAssayData">
    <xs:annotation>
      <xs:documentation>The output of a transformation event.</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="gp:BioAssayData">
        <xs:sequence />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="BioAssayData" type="gp:BioAssayData" />
  <xs:complexType name="BioAssayData" abstract="true">
    <xs:annotation>
      <xs:documentation>Represents the dataset created when the BioAssays are created.  BioAssayData is the entry point to the values.  Because the actual values are represented by a different object, BioDataValues, which can be memory intensive, the annotation of the transformation can be gotten separate from the data.</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="gp:Identifiable">
        <xs:sequence>
          <xs:element name="designElementDimension" type="gp:DesignElementDimension" minOccurs="0" />
          <xs:element name="bioAssayDimension" type="gp:BioAssayDimension" minOccurs="0" />
          <xs:element name="bioDataValues" type="gp:BioDataValues" minOccurs="0" />
          <xs:element name="quantitationTypeDimension" type="gp:QuantitationTypeDimension" minOccurs="0" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="BioAssayDimension" type="gp:BioAssayDimension" />
  <xs:complexType name="BioAssayDimension">
    <xs:annotation>
      <xs:documentation>An ordered list of bioAssays.</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="gp:Identifiable">
        <xs:sequence>
          <xs:element name="bioAssays" type="gp:BioAssay" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="ReporterDimension" type="gp:ReporterDimension" />
  <xs:complexType name="ReporterDimension">
    <xs:annotation>
      <xs:documentation>Specialized DesignElementDimension to hold Reporters.</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="gp:DesignElementDimension">
        <xs:sequence>
          <xs:element name="reporters" type="gp:Reporter" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="DesignElementDimension" type="gp:DesignElementDimension" />
  <xs:complexType name="DesignElementDimension" abstract="true">
    <xs:annotation>
      <xs:documentation>An ordered list of designElements. It will be realized as one of its three subclasses.</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="gp:Identifiable">
        <xs:sequence />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="DesignElement" type="gp:DesignElement" />
  <xs:complexType name="DesignElement" abstract="true">
    <xs:annotation>
      <xs:documentation>An element of an array.  This is generally of type feature but can be specified as reporters or compositeSequence for arrays that are abstracted from a physical array.</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="gp:Identifiable">
        <xs:sequence />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="Reporter" type="gp:Reporter" />
  <xs:complexType name="Reporter">
    <xs:annotation>
      <xs:documentation>A Design Element that represents some biological material (clone, oligo, etc.) on an array which will report on some biosequence or biosequences.  The derived data from the measured data of its Features represents the presence or absence of the biosequence or biosequences it is reporting on in the BioAssay.  Reporters are Identifiable and several Features on the same array can be mapped to the same reporter as can Features from a different ArrayDesign.  The granularity of the Reporters independence is dependent on the technology and the intent of the ArrayDesign.  Oligos using mature technologies can in general be assumed to be safely replicated on many features where as with PCR Products there might be the desire for quality assurence to make reporters one to one with features and use the mappings to CompositeSequences for replication purposes.</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="gp:DesignElement">
        <xs:sequence />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="QuantitationType" type="gp:QuantitationType" />
  <xs:complexType name="QuantitationType" abstract="true">
    <xs:annotation>
      <xs:documentation>A method for calculating a single datum of the matrix (e.g. raw intensity, background, error).</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="gp:Identifiable">
        <xs:sequence>
          <xs:element name="isBackground" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates whether the quantitation has been measured from the background or from the feature itself.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="Array" type="gp:Array" />
  <xs:complexType name="Array">
    <xs:annotation>
      <xs:documentation>A non-ragged array of scalar values.  The array must be homogenous in type.  The values must be encoded in base64.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="dimensions" type="xs:string">
        <xs:annotation>
          <xs:documentation>A comma-delimited integer list of the dimensions of the array.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="name" type="xs:string">
        <xs:annotation>
          <xs:documentation>The name of the array</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="type" type="xs:string">
        <xs:annotation>
          <xs:documentation>The type of all the values.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="base64Value" type="xs:string">
        <xs:annotation>
          <xs:documentation>A non-ragged array of scalar values.  The array must be homogenous in type.  The values must be encoded in base64.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Null" type="gp:Null" />
  <xs:complexType name="Null">
    <xs:sequence />
  </xs:complexType>
  <xs:element name="List" type="gp:List" />
  <xs:complexType name="List">
    <xs:annotation>
      <xs:documentation>A list contains any number of lists, arrays, and values</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="name" type="xs:string">
        <xs:annotation>
          <xs:documentation>The name of the list.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="type" type="xs:string">
        <xs:annotation>
          <xs:documentation>If this list is contains all scalars of the same type, that type is repeated here.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="length" type="xs:integer">
        <xs:annotation>
          <xs:documentation>The number of items (elements) in the list.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="scalar" type="gp:Scalar" minOccurs="0" maxOccurs="unbounded" />
      <xs:element name="List" type="gp:List" />
      <xs:element name="aNull" type="gp:Null" minOccurs="0" maxOccurs="unbounded" />
      <xs:element name="array" type="gp:Array" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Data" type="gp:Data" />
  <xs:complexType name="Data">
    <xs:annotation>
      <xs:documentation>The root element contains any number of lists, arrays, and values</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="scalar" type="gp:Scalar" minOccurs="0" maxOccurs="unbounded" />
      <xs:element name="list" type="gp:List" minOccurs="0" maxOccurs="unbounded" />
      <xs:element name="aNull" type="gp:Null" minOccurs="0" maxOccurs="unbounded" />
      <xs:element name="array" type="gp:Array" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Scalar" type="gp:Scalar" />
  <xs:complexType name="Scalar">
    <xs:annotation>
      <xs:documentation>A single value, encoded in the XML</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="name" type="xs:string">
        <xs:annotation>
          <xs:documentation>The name of the scalar value</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="type" type="xs:string">
        <xs:annotation>
          <xs:documentation>The data type of the scalar value</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="value" type="xs:string">
        <xs:annotation>
          <xs:documentation>A single value, encoded in the XML</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>

