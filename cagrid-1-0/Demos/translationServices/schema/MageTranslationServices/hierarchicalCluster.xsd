<?xml version="1.0" encoding="ISO-8859-1"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="gme://cagrid.geworkbench.columbia.edu/1/edu.columbia.geworkbench.cagrid.cluster.hierarchical" xmlns:mobius="gme://cagrid.geworkbench.columbia.edu/1/edu.columbia.geworkbench.cagrid.cluster.hierarchical" targetNamespace="gme://cagrid.geworkbench.columbia.edu/1/edu.columbia.geworkbench.cagrid.cluster.hierarchical" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:element name="HierarchicalClusteringParameter" type="HierarchicalClusteringParameter"/>
	<xs:complexType name="HierarchicalClusteringParameter">
		<xs:annotation>
			<xs:documentation>Tuning parameters for a hierarchical clustering analysis.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="method" type="xs:string">
				<xs:annotation>
					<xs:documentation>The hierarchical clustering method to be used. Permissible values are single, average, or total (complete) linkage.  Single - the distance between any two clusters as the minimum distance between them  Average - takes the mean distance between all possible pairs of entities of the two clusters in question. It is computationally the most expensive.  Total (Complete) - the opposite of single linkage in that it defines the distance between any two clusters as the maximum distance between them.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="dim" type="xs:string">
				<xs:annotation>
					<xs:documentation>Cluster by marker, microarray, or both.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="distance" type="xs:string">
				<xs:annotation>
					<xs:documentation>Distance metric.  Can be euclidean, pearson, or spearman</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="HierarchicalClusterNode" type="HierarchicalClusterNode"/>
	<xs:complexType name="HierarchicalClusterNode">
		<xs:annotation>
			<xs:documentation>A HierarchicalClusterNode represents a node in the "tree".  each node has a one-to-many association with other nodes.  For example, a root node has multiple children.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="height" type="xs:double">
				<xs:annotation>
					<xs:documentation>The height of the node.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="depth" type="xs:int">
				<xs:annotation>
					<xs:documentation>The depth of the node.  This is the number of nodes from the root to the node.  This is useful in rendering dendrograms.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="leafLabel" type="xs:string">
				<xs:annotation>
					<xs:documentation>The label of the node.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="HierarchicalClusterNode" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="HierarchicalCluster" type="HierarchicalCluster"/>
	<xs:complexType name="HierarchicalCluster">
		<xs:annotation>
			<xs:documentation>The hierarchical clustering return type.  This object stores both the marker cluster and the microarray cluster.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="name" type="xs:string">
				<xs:annotation>
					<xs:documentation>A name to identify the hierarchical clustering object.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="HierarchicalClusterNode" minOccurs="0"/>
			<xs:element ref="HierarchicalClusterNode" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
    
    <xs:element name="TreeViewInputElement" type="TreeViewInput"/>

    <xs:complexType name="TreeViewInput">
        <xs:sequence>
            <xs:element name="cdt" type="xs:string"/>
            <xs:element name="atr" type="xs:string"/>
            <xs:element name="gtr" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
        
</xs:schema>
