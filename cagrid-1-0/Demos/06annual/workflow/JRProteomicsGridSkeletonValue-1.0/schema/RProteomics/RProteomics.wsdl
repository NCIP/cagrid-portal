<?xml version="1.0" encoding="UTF-8"?>
<definitions name="RProteomics" targetNamespace="http://www.globus.org/namespaces/cagrid/RProteomics/RProteomics"
    xmlns:tns="http://www.globus.org/namespaces/cagrid/RProteomics/RProteomics"
    xmlns:wsrp="http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ResourceProperties-1.2-draft-01.xsd"
    xmlns:wsrlw="http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ResourceLifetime-1.2-draft-01.wsdl"
    xmlns:wsdlpp="http://www.globus.org/namespaces/2004/10/WSDLPreprocessor"
    xmlns:gtwsdl1="http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ServiceGroup-1.2-draft-01.wsdl"
    xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/03/addressing"
    xmlns:wsntw="http://docs.oasis-open.org/wsn/2004/06/wsn-WS-BaseNotification-1.2-draft-01.wsdl"
    xmlns:wsrbfw="http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-BaseFaults-1.2-draft-01.wsdl"
    xmlns:wsrpw="http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ResourceProperties-1.2-draft-01.wsdl"
    xmlns="http://schemas.xmlsoap.org/wsdl/">
    <import
        namespace="http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ResourceProperties-1.2-draft-01.wsdl"
        location="../wsrf/properties/WS-ResourceProperties.wsdl"/>
    <import namespace="http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-BaseFaults-1.2-draft-01.wsdl"
        location="../wsrf/faults/WS-BaseFaults.wsdl"/>
    <!--============================================================

                      T Y P E S
                      
  ============================================================-->
    <types>
        <schema targetNamespace="http://www.globus.org/namespaces/cagrid/RProteomics/RProteomics"
            xmlns:tns="http://www.globus.org/namespaces/cagrid/RProteomics/RProteomics"
			xmlns:lsid="gme://RProteomics.caBIG/5/edu.duke.cabig.rproteomics.domain.serviceInterface" 
			
			xmlns:scan="rproteomics.cabig.duke.edu/1/scanFeatures" 
			
            xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:wsrbf="http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-BaseFaults-1.2-draft-01.xsd">
			<import namespace="http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-BaseFaults-1.2-draft-01.xsd" schemaLocation="../wsrf/faults/WS-BaseFaults.xsd"/>
		
			<import namespace="gme://RProteomics.caBIG/5/edu.duke.cabig.rproteomics.domain.serviceInterface" schemaLocation="./5_edu.duke.cabig.rproteomics.domain.serviceInterface.xsd"/>
			   
			<import namespace="rproteomics.cabig.duke.edu/1/scanFeatures" schemaLocation="./1_scanFeatures.xsd"/>
			   
      	
      	
				<element name="normalize_log">
					<complexType>
						<sequence>
          		  
							<element name="lsids" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
	      				</sequence>
	      			</complexType>
	      		</element>
  		       
				<element name="normalize_logResponse">
					<complexType>
						<sequence>
          		  
				      		 <element name="response" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
			                   
						</sequence>
					</complexType>
				</element>
				<element name="normalize_log10">
					<complexType>
						<sequence>
          		  
							<element name="lsids" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
	      				</sequence>
	      			</complexType>
	      		</element>
  		       
				<element name="normalize_log10Response">
					<complexType>
						<sequence>
          		  
				      		 <element name="response" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
			                   
						</sequence>
					</complexType>
				</element>
				<element name="normalize_log2">
					<complexType>
						<sequence>
          		  
							<element name="lsids" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
	      				</sequence>
	      			</complexType>
	      		</element>
  		       
				<element name="normalize_log2Response">
					<complexType>
						<sequence>
          		  
				      		 <element name="response" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
			                   
						</sequence>
					</complexType>
				</element>
				<element name="normalize_sqrt">
					<complexType>
						<sequence>
          		  
							<element name="lsids" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
	      				</sequence>
	      			</complexType>
	      		</element>
  		       
				<element name="normalize_sqrtResponse">
					<complexType>
						<sequence>
          		  
				      		 <element name="response" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
			                   
						</sequence>
					</complexType>
				</element>
				<element name="normalize_square">
					<complexType>
						<sequence>
          		  
							<element name="lsids" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
	      				</sequence>
	      			</complexType>
	      		</element>
  		       
				<element name="normalize_squareResponse">
					<complexType>
						<sequence>
          		  
				      		 <element name="response" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
			                   
						</sequence>
					</complexType>
				</element>
				<element name="normalize_cubeRoot">
					<complexType>
						<sequence>
          		  
							<element name="lsids" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
	      				</sequence>
	      			</complexType>
	      		</element>
  		       
				<element name="normalize_cubeRootResponse">
					<complexType>
						<sequence>
          		  
				      		 <element name="response" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
			                   
						</sequence>
					</complexType>
				</element>
				<element name="normalize_power">
					<complexType>
						<sequence>
          		  
							<element name="lsids" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
                  			<element name="exponent" type="lsid:ExponentType" minOccurs="1" maxOccurs="1" />
	      				</sequence>
	      			</complexType>
	      		</element>
  		       
				<element name="normalize_powerResponse">
					<complexType>
						<sequence>
          		  
				      		 <element name="response" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
			                   
						</sequence>
					</complexType>
				</element>
				<element name="normalize_byMax">
					<complexType>
						<sequence>
          		  
							<element name="lsids" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
	      				</sequence>
	      			</complexType>
	      		</element>
  		       
				<element name="normalize_byMaxResponse">
					<complexType>
						<sequence>
          		  
				      		 <element name="response" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
			                   
						</sequence>
					</complexType>
				</element>
				<element name="normalize_usingMinAndMax">
					<complexType>
						<sequence>
          		  
							<element name="lsids" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
	      				</sequence>
	      			</complexType>
	      		</element>
  		       
				<element name="normalize_usingMinAndMaxResponse">
					<complexType>
						<sequence>
          		  
				      		 <element name="response" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
			                   
						</sequence>
					</complexType>
				</element>
				<element name="normalize_IOC">
					<complexType>
						<sequence>
          		  
							<element name="lsids" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
	      				</sequence>
	      			</complexType>
	      		</element>
  		       
				<element name="normalize_IOCResponse">
					<complexType>
						<sequence>
          		  
				      		 <element name="response" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
			                   
						</sequence>
					</complexType>
				</element>
				<element name="normalize_quantile">
					<complexType>
						<sequence>
          		  
							<element name="lsids" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
                  			<element name="startQuantile" type="lsid:QuantileType" minOccurs="1" maxOccurs="1" />
	      				</sequence>
	      			</complexType>
	      		</element>
  		       
				<element name="normalize_quantileResponse">
					<complexType>
						<sequence>
          		  
				      		 <element name="response" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
			                   
						</sequence>
					</complexType>
				</element>
				<element name="normalize_quantileByValue">
					<complexType>
						<sequence>
          		  
							<element name="scanFeaturesXml" type="scan:scanFeaturesType" minOccurs="1" maxOccurs="unbounded" />
                  			<element name="startQuantile" type="lsid:QuantileType" minOccurs="1" maxOccurs="1" />
	      				</sequence>
	      			</complexType>
	      		</element>
  		       
				<element name="normalize_quantileByValueResponse">
					<complexType>
						<sequence>
          		  
				      		 <element name="response" type="scan:scanFeaturesType" minOccurs="1" maxOccurs="unbounded" />
			                   
						</sequence>
					</complexType>
				</element>
				<element name="denoise_MAD">
					<complexType>
						<sequence>
          		  
							<element name="lsids" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
                  			<element name="windowSize" type="lsid:WindowType" minOccurs="1" maxOccurs="1" />
                  			<element name="percentile" type="lsid:PercentileType" minOccurs="1" maxOccurs="1" />
                  			<element name="valuesNearCutoff" type="lsid:ValuesNearToCutoffType" minOccurs="1" maxOccurs="1" />
                  			<element name="lambda" type="lsid:LambdaType" minOccurs="1" maxOccurs="1" />
	      				</sequence>
	      			</complexType>
	      		</element>
  		       
				<element name="denoise_MADResponse">
					<complexType>
						<sequence>
          		  
				      		 <element name="response" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
			                   
						</sequence>
					</complexType>
				</element>
				<element name="denoise_MADNormalize">
					<complexType>
						<sequence>
          		  
							<element name="lsids" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
                  			<element name="windowSize" type="lsid:WindowType" minOccurs="1" maxOccurs="1" />
                  			<element name="percentile" type="lsid:PercentileType" minOccurs="1" maxOccurs="1" />
                  			<element name="valuesNearCutoff" type="lsid:ValuesNearToCutoffType" minOccurs="1" maxOccurs="1" />
                  			<element name="lambda" type="lsid:LambdaType" minOccurs="1" maxOccurs="1" />
                  			<element name="minNoise" type="lsid:NoiseType" minOccurs="1" maxOccurs="1" />
	      				</sequence>
	      			</complexType>
	      		</element>
  		       
				<element name="denoise_MADNormalizeResponse">
					<complexType>
						<sequence>
          		  
				      		 <element name="response" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
			                   
						</sequence>
					</complexType>
				</element>
				<element name="denoise_waveletUDWT">
					<complexType>
						<sequence>
          		  
							<element name="lsids" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
                  			<element name="windowSize" type="lsid:WindowType" minOccurs="1" maxOccurs="1" />
                  			<element name="thresholdMultiplier" type="lsid:ThresholdType" minOccurs="1" maxOccurs="1" />
	      				</sequence>
	      			</complexType>
	      		</element>
  		       
				<element name="denoise_waveletUDWTResponse">
					<complexType>
						<sequence>
          		  
				      		 <element name="response" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
			                   
						</sequence>
					</complexType>
				</element>
				<element name="denoise_waveletUDWTW">
					<complexType>
						<sequence>
          		  
							<element name="lsids" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
                  			<element name="windowSize" type="lsid:WindowType" minOccurs="1" maxOccurs="1" />
                  			<element name="thresholdMultiplier" type="lsid:ThresholdType" minOccurs="1" maxOccurs="1" />
	      				</sequence>
	      			</complexType>
	      		</element>
  		       
				<element name="denoise_waveletUDWTWResponse">
					<complexType>
						<sequence>
          		  
				      		 <element name="response" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
			                   
						</sequence>
					</complexType>
				</element>
				<element name="denoise_waveletUDWTWByValue">
					<complexType>
						<sequence>
          		  
							<element name="scanFeaturesXml" type="scan:scanFeaturesType" minOccurs="1" maxOccurs="unbounded" />
                  			<element name="windowSize" type="lsid:WindowType" minOccurs="1" maxOccurs="1" />
                  			<element name="thresholdMultiplier" type="lsid:ThresholdType" minOccurs="1" maxOccurs="1" />
	      				</sequence>
	      			</complexType>
	      		</element>
  		       
				<element name="denoise_waveletUDWTWByValueResponse">
					<complexType>
						<sequence>
          		  
				      		 <element name="response" type="scan:scanFeaturesType" minOccurs="1" maxOccurs="unbounded" />
			                   
						</sequence>
					</complexType>
				</element>
				<element name="denoise_highPass">
					<complexType>
						<sequence>
          		  
							<element name="lsids" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
                  			<element name="windowSize" type="lsid:WindowType" minOccurs="1" maxOccurs="1" />
                  			<element name="numCoeffsToDrop" type="lsid:CoefficientsType" minOccurs="1" maxOccurs="1" />
	      				</sequence>
	      			</complexType>
	      		</element>
  		       
				<element name="denoise_highPassResponse">
					<complexType>
						<sequence>
          		  
				      		 <element name="response" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
			                   
						</sequence>
					</complexType>
				</element>
				<element name="denoise_highPassW">
					<complexType>
						<sequence>
          		  
							<element name="lsids" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
                  			<element name="windowSize" type="lsid:WindowType" minOccurs="1" maxOccurs="1" />
                  			<element name="numCoeffsToDrop" type="lsid:CoefficientsType" minOccurs="1" maxOccurs="1" />
	      				</sequence>
	      			</complexType>
	      		</element>
  		       
				<element name="denoise_highPassWResponse">
					<complexType>
						<sequence>
          		  
				      		 <element name="response" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
			                   
						</sequence>
					</complexType>
				</element>
				<element name="denoise_PCAFilter">
					<complexType>
						<sequence>
          		  
							<element name="lsids" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
                  			<element name="windowSize" type="lsid:WindowType" minOccurs="1" maxOccurs="1" />
                  			<element name="numCoeffsToDrop" type="lsid:CoefficientsType" minOccurs="1" maxOccurs="1" />
	      				</sequence>
	      			</complexType>
	      		</element>
  		       
				<element name="denoise_PCAFilterResponse">
					<complexType>
						<sequence>
          		  
				      		 <element name="response" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
			                   
						</sequence>
					</complexType>
				</element>
				<element name="denoise_q5_PCAFilter">
					<complexType>
						<sequence>
          		  
							<element name="lsids" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
                  			<element name="windowSize" type="lsid:WindowType" minOccurs="1" maxOccurs="1" />
                  			<element name="numCoeffsToDrop" type="lsid:CoefficientsType" minOccurs="1" maxOccurs="1" />
	      				</sequence>
	      			</complexType>
	      		</element>
  		       
				<element name="denoise_q5_PCAFilterResponse">
					<complexType>
						<sequence>
          		  
				      		 <element name="response" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
			                   
						</sequence>
					</complexType>
				</element>
				<element name="denoise_loess">
					<complexType>
						<sequence>
          		  
							<element name="lsids" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
                  			<element name="windowSize" type="lsid:WindowType" minOccurs="1" maxOccurs="1" />
                  			<element name="span" type="lsid:SpanType" minOccurs="1" maxOccurs="1" />
                  			<element name="degree" type="lsid:PolynomialDegreeType" minOccurs="1" maxOccurs="1" />
	      				</sequence>
	      			</complexType>
	      		</element>
  		       
				<element name="denoise_loessResponse">
					<complexType>
						<sequence>
          		  
				      		 <element name="response" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
			                   
						</sequence>
					</complexType>
				</element>
				<element name="removeBackground_runningQuantile">
					<complexType>
						<sequence>
          		  
							<element name="lsids" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
                  			<element name="windowSize" type="lsid:WindowType" minOccurs="1" maxOccurs="1" />
                  			<element name="percentile" type="lsid:PercentileType" minOccurs="1" maxOccurs="1" />
	      				</sequence>
	      			</complexType>
	      		</element>
  		       
				<element name="removeBackground_runningQuantileResponse">
					<complexType>
						<sequence>
          		  
				      		 <element name="response" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
			                   
						</sequence>
					</complexType>
				</element>
				<element name="removeBackground_runningQuantileByValue">
					<complexType>
						<sequence>
          		  
							<element name="scanFeaturesXml" type="scan:scanFeaturesType" minOccurs="1" maxOccurs="unbounded" />
                  			<element name="windowSize" type="lsid:WindowType" minOccurs="1" maxOccurs="1" />
                  			<element name="percentile" type="lsid:PercentileType" minOccurs="1" maxOccurs="1" />
	      				</sequence>
	      			</complexType>
	      		</element>
  		       
				<element name="removeBackground_runningQuantileByValueResponse">
					<complexType>
						<sequence>
          		  
				      		 <element name="response" type="scan:scanFeaturesType" minOccurs="1" maxOccurs="unbounded" />
			                   
						</sequence>
					</complexType>
				</element>
				<element name="removeBackground_loess">
					<complexType>
						<sequence>
          		  
							<element name="lsids" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
                  			<element name="windowSize" type="lsid:WindowType" minOccurs="1" maxOccurs="1" />
                  			<element name="span" type="lsid:SpanType" minOccurs="1" maxOccurs="1" />
	      				</sequence>
	      			</complexType>
	      		</element>
  		       
				<element name="removeBackground_loessResponse">
					<complexType>
						<sequence>
          		  
				      		 <element name="response" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
			                   
						</sequence>
					</complexType>
				</element>
				<element name="removeBackground_linearFit">
					<complexType>
						<sequence>
          		  
							<element name="lsids" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
                  			<element name="windowSize" type="lsid:WindowType" minOccurs="1" maxOccurs="1" />
	      				</sequence>
	      			</complexType>
	      		</element>
  		       
				<element name="removeBackground_linearFitResponse">
					<complexType>
						<sequence>
          		  
				      		 <element name="response" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
			                   
						</sequence>
					</complexType>
				</element>
				<element name="removeBackground_exponentialFit">
					<complexType>
						<sequence>
          		  
							<element name="lsids" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
                  			<element name="windowSize" type="lsid:WindowType" minOccurs="1" maxOccurs="1" />
	      				</sequence>
	      			</complexType>
	      		</element>
  		       
				<element name="removeBackground_exponentialFitResponse">
					<complexType>
						<sequence>
          		  
				      		 <element name="response" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
			                   
						</sequence>
					</complexType>
				</element>
				<element name="removeBackground_logistic">
					<complexType>
						<sequence>
          		  
							<element name="lsids" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
                  			<element name="windowSize" type="lsid:WindowType" minOccurs="1" maxOccurs="1" />
	      				</sequence>
	      			</complexType>
	      		</element>
  		       
				<element name="removeBackground_logisticResponse">
					<complexType>
						<sequence>
          		  
				      		 <element name="response" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
			                   
						</sequence>
					</complexType>
				</element>
				<element name="removeBackground_quadraticFit">
					<complexType>
						<sequence>
          		  
							<element name="lsids" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
                  			<element name="windowSize" type="lsid:WindowType" minOccurs="1" maxOccurs="1" />
	      				</sequence>
	      			</complexType>
	      		</element>
  		       
				<element name="removeBackground_quadraticFitResponse">
					<complexType>
						<sequence>
          		  
				      		 <element name="response" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
			                   
						</sequence>
					</complexType>
				</element>
				<element name="removeBackground_minus">
					<complexType>
						<sequence>
          		  
							<element name="lsids1" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
							<element name="lsids2" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
	      				</sequence>
	      			</complexType>
	      		</element>
  		       
				<element name="removeBackground_minusResponse">
					<complexType>
						<sequence>
          		  
				      		 <element name="response" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
			                   
						</sequence>
					</complexType>
				</element>
				<element name="removeBackground_minusByValue">
					<complexType>
						<sequence>
          		  
							<element name="scanFeaturesXml1" type="scan:scanFeaturesType" minOccurs="1" maxOccurs="unbounded" />
							<element name="scanFeaturesXml2" type="scan:scanFeaturesType" minOccurs="1" maxOccurs="unbounded" />
	      				</sequence>
	      			</complexType>
	      		</element>
  		       
				<element name="removeBackground_minusByValueResponse">
					<complexType>
						<sequence>
          		  
				      		 <element name="response" type="scan:scanFeaturesType" minOccurs="1" maxOccurs="unbounded" />
			                   
						</sequence>
					</complexType>
				</element>
				<element name="plot_2DStacked">
					<complexType>
						<sequence>
          		  
							<element name="lsidsTop" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
							<element name="lsidsBottom" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
	      				</sequence>
	      			</complexType>
	      		</element>
  		       
				<element name="plot_2DStackedResponse">
					<complexType>
						<sequence>
          		  
			                  <element name="response" type="lsid:JpegImageType" minOccurs="1" maxOccurs="1" />
			                  
						</sequence>
					</complexType>
				</element>
				<element name="plot_2DStackedByValue">
					<complexType>
						<sequence>
          		  
							<element name="scanFeaturesXmlTop" type="scan:scanFeaturesType" minOccurs="1" maxOccurs="unbounded" />
							<element name="scanFeaturesXmlBottom" type="scan:scanFeaturesType" minOccurs="1" maxOccurs="unbounded" />
	      				</sequence>
	      			</complexType>
	      		</element>
  		       
				<element name="plot_2DStackedByValueResponse">
					<complexType>
						<sequence>
          		  
			                  <element name="response" type="lsid:JpegImageType" minOccurs="1" maxOccurs="1" />
			                  
						</sequence>
					</complexType>
				</element>
				<element name="plot_2D">
					<complexType>
						<sequence>
          		  
							<element name="lsids" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
	      				</sequence>
	      			</complexType>
	      		</element>
  		       
				<element name="plot_2DResponse">
					<complexType>
						<sequence>
          		  
			                  <element name="response" type="lsid:JpegImageType" minOccurs="1" maxOccurs="1" />
			                  
						</sequence>
					</complexType>
				</element>
				<element name="plot_2DByValue">
					<complexType>
						<sequence>
          		  
							<element name="scanFeaturesXml" type="scan:scanFeaturesType" minOccurs="1" maxOccurs="unbounded" />
	      				</sequence>
	      			</complexType>
	      		</element>
  		       
				<element name="plot_2DByValueResponse">
					<complexType>
						<sequence>
          		  
			                  <element name="response" type="lsid:JpegImageType" minOccurs="1" maxOccurs="1" />
			                  
						</sequence>
					</complexType>
				</element>
				<element name="general_interpolate">
					<complexType>
						<sequence>
          		  
							<element name="lsids" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
	      				</sequence>
	      			</complexType>
	      		</element>
  		       
				<element name="general_interpolateResponse">
					<complexType>
						<sequence>
          		  
				      		 <element name="response" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
			                   
						</sequence>
					</complexType>
				</element>
				<element name="general_interpolateByValue">
					<complexType>
						<sequence>
          		  
							<element name="scanFeaturesXml" type="scan:scanFeaturesType" minOccurs="1" maxOccurs="unbounded" />
	      				</sequence>
	      			</complexType>
	      		</element>
  		       
				<element name="general_interpolateByValueResponse">
					<complexType>
						<sequence>
          		  
				      		 <element name="response" type="scan:scanFeaturesType" minOccurs="1" maxOccurs="unbounded" />
			                   
						</sequence>
					</complexType>
				</element>
				<element name="align_alignx">
					<complexType>
						<sequence>
          		  
							<element name="lsids" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
	      				</sequence>
	      			</complexType>
	      		</element>
  		       
				<element name="align_alignxResponse">
					<complexType>
						<sequence>
          		  
				      		 <element name="response" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
			                   
						</sequence>
					</complexType>
				</element>
				<element name="align_alignxByValue">
					<complexType>
						<sequence>
          		  
							<element name="scanFeaturesXml" type="scan:scanFeaturesType" minOccurs="1" maxOccurs="unbounded" />
	      				</sequence>
	      			</complexType>
	      		</element>
  		       
				<element name="align_alignxByValueResponse">
					<complexType>
						<sequence>
          		  
				      		 <element name="response" type="scan:scanFeaturesType" minOccurs="1" maxOccurs="unbounded" />
			                   
						</sequence>
					</complexType>
				</element>
				<element name="echo">
					<complexType>
						<sequence>
          		  
							<element name="lsids" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
	      				</sequence>
	      			</complexType>
	      		</element>
  		       
				<element name="echoResponse">
					<complexType>
						<sequence>
          		  
				      		 <element name="response" type="lsid:LsidType" minOccurs="1" maxOccurs="unbounded" />
			                   
						</sequence>
					</complexType>
				</element>
				<element name="echoByValue">
					<complexType>
						<sequence>
          		  
							<element name="scanFeaturesXml" type="scan:scanFeaturesType" minOccurs="1" maxOccurs="unbounded" />
	      				</sequence>
	      			</complexType>
	      		</element>
  		       
				<element name="echoByValueResponse">
					<complexType>
						<sequence>
          		  
				      		 <element name="response" type="scan:scanFeaturesType" minOccurs="1" maxOccurs="unbounded" />
			                   
						</sequence>
					</complexType>
				</element>
				<element name="throwException">
					<complexType>
						<sequence>
          		  
	      				</sequence>
	      			</complexType>
	      		</element>
  		       
				<element name="throwExceptionResponse">
					<complexType>
						<sequence>
          		  
						</sequence>
					</complexType>
				</element>
            <element name="RProteomicsResourceProperties">
                <complexType>
                    <sequence></sequence>
                </complexType>
            </element>
        </schema>
    </types>
    
    
<!--  place service messages here -->
	<message name="normalize_logInputMessage">
		<part name="parameters" element="tns:normalize_log"/>
	</message>
	
	<message name="normalize_logOutputMessage">
		<part name="parameters" element="tns:normalize_logResponse"/>
	</message>
	<message name="normalize_log10InputMessage">
		<part name="parameters" element="tns:normalize_log10"/>
	</message>
	
	<message name="normalize_log10OutputMessage">
		<part name="parameters" element="tns:normalize_log10Response"/>
	</message>
	<message name="normalize_log2InputMessage">
		<part name="parameters" element="tns:normalize_log2"/>
	</message>
	
	<message name="normalize_log2OutputMessage">
		<part name="parameters" element="tns:normalize_log2Response"/>
	</message>
	<message name="normalize_sqrtInputMessage">
		<part name="parameters" element="tns:normalize_sqrt"/>
	</message>
	
	<message name="normalize_sqrtOutputMessage">
		<part name="parameters" element="tns:normalize_sqrtResponse"/>
	</message>
	<message name="normalize_squareInputMessage">
		<part name="parameters" element="tns:normalize_square"/>
	</message>
	
	<message name="normalize_squareOutputMessage">
		<part name="parameters" element="tns:normalize_squareResponse"/>
	</message>
	<message name="normalize_cubeRootInputMessage">
		<part name="parameters" element="tns:normalize_cubeRoot"/>
	</message>
	
	<message name="normalize_cubeRootOutputMessage">
		<part name="parameters" element="tns:normalize_cubeRootResponse"/>
	</message>
	<message name="normalize_powerInputMessage">
		<part name="parameters" element="tns:normalize_power"/>
	</message>
	
	<message name="normalize_powerOutputMessage">
		<part name="parameters" element="tns:normalize_powerResponse"/>
	</message>
	<message name="normalize_byMaxInputMessage">
		<part name="parameters" element="tns:normalize_byMax"/>
	</message>
	
	<message name="normalize_byMaxOutputMessage">
		<part name="parameters" element="tns:normalize_byMaxResponse"/>
	</message>
	<message name="normalize_usingMinAndMaxInputMessage">
		<part name="parameters" element="tns:normalize_usingMinAndMax"/>
	</message>
	
	<message name="normalize_usingMinAndMaxOutputMessage">
		<part name="parameters" element="tns:normalize_usingMinAndMaxResponse"/>
	</message>
	<message name="normalize_IOCInputMessage">
		<part name="parameters" element="tns:normalize_IOC"/>
	</message>
	
	<message name="normalize_IOCOutputMessage">
		<part name="parameters" element="tns:normalize_IOCResponse"/>
	</message>
	<message name="normalize_quantileInputMessage">
		<part name="parameters" element="tns:normalize_quantile"/>
	</message>
	
	<message name="normalize_quantileOutputMessage">
		<part name="parameters" element="tns:normalize_quantileResponse"/>
	</message>
	<message name="normalize_quantileByValueInputMessage">
		<part name="parameters" element="tns:normalize_quantileByValue"/>
	</message>
	
	<message name="normalize_quantileByValueOutputMessage">
		<part name="parameters" element="tns:normalize_quantileByValueResponse"/>
	</message>
	<message name="denoise_MADInputMessage">
		<part name="parameters" element="tns:denoise_MAD"/>
	</message>
	
	<message name="denoise_MADOutputMessage">
		<part name="parameters" element="tns:denoise_MADResponse"/>
	</message>
	<message name="denoise_MADNormalizeInputMessage">
		<part name="parameters" element="tns:denoise_MADNormalize"/>
	</message>
	
	<message name="denoise_MADNormalizeOutputMessage">
		<part name="parameters" element="tns:denoise_MADNormalizeResponse"/>
	</message>
	<message name="denoise_waveletUDWTInputMessage">
		<part name="parameters" element="tns:denoise_waveletUDWT"/>
	</message>
	
	<message name="denoise_waveletUDWTOutputMessage">
		<part name="parameters" element="tns:denoise_waveletUDWTResponse"/>
	</message>
	<message name="denoise_waveletUDWTWInputMessage">
		<part name="parameters" element="tns:denoise_waveletUDWTW"/>
	</message>
	
	<message name="denoise_waveletUDWTWOutputMessage">
		<part name="parameters" element="tns:denoise_waveletUDWTWResponse"/>
	</message>
	<message name="denoise_waveletUDWTWByValueInputMessage">
		<part name="parameters" element="tns:denoise_waveletUDWTWByValue"/>
	</message>
	
	<message name="denoise_waveletUDWTWByValueOutputMessage">
		<part name="parameters" element="tns:denoise_waveletUDWTWByValueResponse"/>
	</message>
	<message name="denoise_highPassInputMessage">
		<part name="parameters" element="tns:denoise_highPass"/>
	</message>
	
	<message name="denoise_highPassOutputMessage">
		<part name="parameters" element="tns:denoise_highPassResponse"/>
	</message>
	<message name="denoise_highPassWInputMessage">
		<part name="parameters" element="tns:denoise_highPassW"/>
	</message>
	
	<message name="denoise_highPassWOutputMessage">
		<part name="parameters" element="tns:denoise_highPassWResponse"/>
	</message>
	<message name="denoise_PCAFilterInputMessage">
		<part name="parameters" element="tns:denoise_PCAFilter"/>
	</message>
	
	<message name="denoise_PCAFilterOutputMessage">
		<part name="parameters" element="tns:denoise_PCAFilterResponse"/>
	</message>
	<message name="denoise_q5_PCAFilterInputMessage">
		<part name="parameters" element="tns:denoise_q5_PCAFilter"/>
	</message>
	
	<message name="denoise_q5_PCAFilterOutputMessage">
		<part name="parameters" element="tns:denoise_q5_PCAFilterResponse"/>
	</message>
	<message name="denoise_loessInputMessage">
		<part name="parameters" element="tns:denoise_loess"/>
	</message>
	
	<message name="denoise_loessOutputMessage">
		<part name="parameters" element="tns:denoise_loessResponse"/>
	</message>
	<message name="removeBackground_runningQuantileInputMessage">
		<part name="parameters" element="tns:removeBackground_runningQuantile"/>
	</message>
	
	<message name="removeBackground_runningQuantileOutputMessage">
		<part name="parameters" element="tns:removeBackground_runningQuantileResponse"/>
	</message>
	<message name="removeBackground_runningQuantileByValueInputMessage">
		<part name="parameters" element="tns:removeBackground_runningQuantileByValue"/>
	</message>
	
	<message name="removeBackground_runningQuantileByValueOutputMessage">
		<part name="parameters" element="tns:removeBackground_runningQuantileByValueResponse"/>
	</message>
	<message name="removeBackground_loessInputMessage">
		<part name="parameters" element="tns:removeBackground_loess"/>
	</message>
	
	<message name="removeBackground_loessOutputMessage">
		<part name="parameters" element="tns:removeBackground_loessResponse"/>
	</message>
	<message name="removeBackground_linearFitInputMessage">
		<part name="parameters" element="tns:removeBackground_linearFit"/>
	</message>
	
	<message name="removeBackground_linearFitOutputMessage">
		<part name="parameters" element="tns:removeBackground_linearFitResponse"/>
	</message>
	<message name="removeBackground_exponentialFitInputMessage">
		<part name="parameters" element="tns:removeBackground_exponentialFit"/>
	</message>
	
	<message name="removeBackground_exponentialFitOutputMessage">
		<part name="parameters" element="tns:removeBackground_exponentialFitResponse"/>
	</message>
	<message name="removeBackground_logisticInputMessage">
		<part name="parameters" element="tns:removeBackground_logistic"/>
	</message>
	
	<message name="removeBackground_logisticOutputMessage">
		<part name="parameters" element="tns:removeBackground_logisticResponse"/>
	</message>
	<message name="removeBackground_quadraticFitInputMessage">
		<part name="parameters" element="tns:removeBackground_quadraticFit"/>
	</message>
	
	<message name="removeBackground_quadraticFitOutputMessage">
		<part name="parameters" element="tns:removeBackground_quadraticFitResponse"/>
	</message>
	<message name="removeBackground_minusInputMessage">
		<part name="parameters" element="tns:removeBackground_minus"/>
	</message>
	
	<message name="removeBackground_minusOutputMessage">
		<part name="parameters" element="tns:removeBackground_minusResponse"/>
	</message>
	<message name="removeBackground_minusByValueInputMessage">
		<part name="parameters" element="tns:removeBackground_minusByValue"/>
	</message>
	
	<message name="removeBackground_minusByValueOutputMessage">
		<part name="parameters" element="tns:removeBackground_minusByValueResponse"/>
	</message>
	<message name="plot_2DStackedInputMessage">
		<part name="parameters" element="tns:plot_2DStacked"/>
	</message>
	
	<message name="plot_2DStackedOutputMessage">
		<part name="parameters" element="tns:plot_2DStackedResponse"/>
	</message>
	<message name="plot_2DStackedByValueInputMessage">
		<part name="parameters" element="tns:plot_2DStackedByValue"/>
	</message>
	
	<message name="plot_2DStackedByValueOutputMessage">
		<part name="parameters" element="tns:plot_2DStackedByValueResponse"/>
	</message>
	<message name="plot_2DInputMessage">
		<part name="parameters" element="tns:plot_2D"/>
	</message>
	
	<message name="plot_2DOutputMessage">
		<part name="parameters" element="tns:plot_2DResponse"/>
	</message>
	<message name="plot_2DByValueInputMessage">
		<part name="parameters" element="tns:plot_2DByValue"/>
	</message>
	
	<message name="plot_2DByValueOutputMessage">
		<part name="parameters" element="tns:plot_2DByValueResponse"/>
	</message>
	<message name="general_interpolateInputMessage">
		<part name="parameters" element="tns:general_interpolate"/>
	</message>
	
	<message name="general_interpolateOutputMessage">
		<part name="parameters" element="tns:general_interpolateResponse"/>
	</message>
	<message name="general_interpolateByValueInputMessage">
		<part name="parameters" element="tns:general_interpolateByValue"/>
	</message>
	
	<message name="general_interpolateByValueOutputMessage">
		<part name="parameters" element="tns:general_interpolateByValueResponse"/>
	</message>
	<message name="align_alignxInputMessage">
		<part name="parameters" element="tns:align_alignx"/>
	</message>
	
	<message name="align_alignxOutputMessage">
		<part name="parameters" element="tns:align_alignxResponse"/>
	</message>
	<message name="align_alignxByValueInputMessage">
		<part name="parameters" element="tns:align_alignxByValue"/>
	</message>
	
	<message name="align_alignxByValueOutputMessage">
		<part name="parameters" element="tns:align_alignxByValueResponse"/>
	</message>
	<message name="echoInputMessage">
		<part name="parameters" element="tns:echo"/>
	</message>
	
	<message name="echoOutputMessage">
		<part name="parameters" element="tns:echoResponse"/>
	</message>
	<message name="echoByValueInputMessage">
		<part name="parameters" element="tns:echoByValue"/>
	</message>
	
	<message name="echoByValueOutputMessage">
		<part name="parameters" element="tns:echoByValueResponse"/>
	</message>
	<message name="throwExceptionInputMessage">
		<part name="parameters" element="tns:throwException"/>
	</message>
	
	<message name="throwExceptionOutputMessage">
		<part name="parameters" element="tns:throwExceptionResponse"/>
	</message>
    
<!--============================================================

                       P O R T T Y P E
                      
  ============================================================-->
    <portType name="RProteomicsPortType" wsrp:ResourceProperties="tns:RProteomicsResourceProperties">

		<operation name="normalize_log">
            <input message="tns:normalize_logInputMessage"/>
            <output message="tns:normalize_logOutputMessage"/>
        </operation>
		<operation name="normalize_log10">
            <input message="tns:normalize_log10InputMessage"/>
            <output message="tns:normalize_log10OutputMessage"/>
        </operation>
		<operation name="normalize_log2">
            <input message="tns:normalize_log2InputMessage"/>
            <output message="tns:normalize_log2OutputMessage"/>
        </operation>
		<operation name="normalize_sqrt">
            <input message="tns:normalize_sqrtInputMessage"/>
            <output message="tns:normalize_sqrtOutputMessage"/>
        </operation>
		<operation name="normalize_square">
            <input message="tns:normalize_squareInputMessage"/>
            <output message="tns:normalize_squareOutputMessage"/>
        </operation>
		<operation name="normalize_cubeRoot">
            <input message="tns:normalize_cubeRootInputMessage"/>
            <output message="tns:normalize_cubeRootOutputMessage"/>
        </operation>
		<operation name="normalize_power">
            <input message="tns:normalize_powerInputMessage"/>
            <output message="tns:normalize_powerOutputMessage"/>
        </operation>
		<operation name="normalize_byMax">
            <input message="tns:normalize_byMaxInputMessage"/>
            <output message="tns:normalize_byMaxOutputMessage"/>
        </operation>
		<operation name="normalize_usingMinAndMax">
            <input message="tns:normalize_usingMinAndMaxInputMessage"/>
            <output message="tns:normalize_usingMinAndMaxOutputMessage"/>
        </operation>
		<operation name="normalize_IOC">
            <input message="tns:normalize_IOCInputMessage"/>
            <output message="tns:normalize_IOCOutputMessage"/>
        </operation>
		<operation name="normalize_quantile">
            <input message="tns:normalize_quantileInputMessage"/>
            <output message="tns:normalize_quantileOutputMessage"/>
        </operation>
		<operation name="normalize_quantileByValue">
            <input message="tns:normalize_quantileByValueInputMessage"/>
            <output message="tns:normalize_quantileByValueOutputMessage"/>
        </operation>
		<operation name="denoise_MAD">
            <input message="tns:denoise_MADInputMessage"/>
            <output message="tns:denoise_MADOutputMessage"/>
        </operation>
		<operation name="denoise_MADNormalize">
            <input message="tns:denoise_MADNormalizeInputMessage"/>
            <output message="tns:denoise_MADNormalizeOutputMessage"/>
        </operation>
		<operation name="denoise_waveletUDWT">
            <input message="tns:denoise_waveletUDWTInputMessage"/>
            <output message="tns:denoise_waveletUDWTOutputMessage"/>
        </operation>
		<operation name="denoise_waveletUDWTW">
            <input message="tns:denoise_waveletUDWTWInputMessage"/>
            <output message="tns:denoise_waveletUDWTWOutputMessage"/>
        </operation>
		<operation name="denoise_waveletUDWTWByValue">
            <input message="tns:denoise_waveletUDWTWByValueInputMessage"/>
            <output message="tns:denoise_waveletUDWTWByValueOutputMessage"/>
        </operation>
		<operation name="denoise_highPass">
            <input message="tns:denoise_highPassInputMessage"/>
            <output message="tns:denoise_highPassOutputMessage"/>
        </operation>
		<operation name="denoise_highPassW">
            <input message="tns:denoise_highPassWInputMessage"/>
            <output message="tns:denoise_highPassWOutputMessage"/>
        </operation>
		<operation name="denoise_PCAFilter">
            <input message="tns:denoise_PCAFilterInputMessage"/>
            <output message="tns:denoise_PCAFilterOutputMessage"/>
        </operation>
		<operation name="denoise_q5_PCAFilter">
            <input message="tns:denoise_q5_PCAFilterInputMessage"/>
            <output message="tns:denoise_q5_PCAFilterOutputMessage"/>
        </operation>
		<operation name="denoise_loess">
            <input message="tns:denoise_loessInputMessage"/>
            <output message="tns:denoise_loessOutputMessage"/>
        </operation>
		<operation name="removeBackground_runningQuantile">
            <input message="tns:removeBackground_runningQuantileInputMessage"/>
            <output message="tns:removeBackground_runningQuantileOutputMessage"/>
        </operation>
		<operation name="removeBackground_runningQuantileByValue">
            <input message="tns:removeBackground_runningQuantileByValueInputMessage"/>
            <output message="tns:removeBackground_runningQuantileByValueOutputMessage"/>
        </operation>
		<operation name="removeBackground_loess">
            <input message="tns:removeBackground_loessInputMessage"/>
            <output message="tns:removeBackground_loessOutputMessage"/>
        </operation>
		<operation name="removeBackground_linearFit">
            <input message="tns:removeBackground_linearFitInputMessage"/>
            <output message="tns:removeBackground_linearFitOutputMessage"/>
        </operation>
		<operation name="removeBackground_exponentialFit">
            <input message="tns:removeBackground_exponentialFitInputMessage"/>
            <output message="tns:removeBackground_exponentialFitOutputMessage"/>
        </operation>
		<operation name="removeBackground_logistic">
            <input message="tns:removeBackground_logisticInputMessage"/>
            <output message="tns:removeBackground_logisticOutputMessage"/>
        </operation>
		<operation name="removeBackground_quadraticFit">
            <input message="tns:removeBackground_quadraticFitInputMessage"/>
            <output message="tns:removeBackground_quadraticFitOutputMessage"/>
        </operation>
		<operation name="removeBackground_minus">
            <input message="tns:removeBackground_minusInputMessage"/>
            <output message="tns:removeBackground_minusOutputMessage"/>
        </operation>
		<operation name="removeBackground_minusByValue">
            <input message="tns:removeBackground_minusByValueInputMessage"/>
            <output message="tns:removeBackground_minusByValueOutputMessage"/>
        </operation>
		<operation name="plot_2DStacked">
            <input message="tns:plot_2DStackedInputMessage"/>
            <output message="tns:plot_2DStackedOutputMessage"/>
        </operation>
		<operation name="plot_2DStackedByValue">
            <input message="tns:plot_2DStackedByValueInputMessage"/>
            <output message="tns:plot_2DStackedByValueOutputMessage"/>
        </operation>
		<operation name="plot_2D">
            <input message="tns:plot_2DInputMessage"/>
            <output message="tns:plot_2DOutputMessage"/>
        </operation>
		<operation name="plot_2DByValue">
            <input message="tns:plot_2DByValueInputMessage"/>
            <output message="tns:plot_2DByValueOutputMessage"/>
        </operation>
		<operation name="general_interpolate">
            <input message="tns:general_interpolateInputMessage"/>
            <output message="tns:general_interpolateOutputMessage"/>
        </operation>
		<operation name="general_interpolateByValue">
            <input message="tns:general_interpolateByValueInputMessage"/>
            <output message="tns:general_interpolateByValueOutputMessage"/>
        </operation>
		<operation name="align_alignx">
            <input message="tns:align_alignxInputMessage"/>
            <output message="tns:align_alignxOutputMessage"/>
        </operation>
		<operation name="align_alignxByValue">
            <input message="tns:align_alignxByValueInputMessage"/>
            <output message="tns:align_alignxByValueOutputMessage"/>
        </operation>
		<operation name="echo">
            <input message="tns:echoInputMessage"/>
            <output message="tns:echoOutputMessage"/>
        </operation>
		<operation name="echoByValue">
            <input message="tns:echoByValueInputMessage"/>
            <output message="tns:echoByValueOutputMessage"/>
        </operation>
		<operation name="throwException">
            <input message="tns:throwExceptionInputMessage"/>
            <output message="tns:throwExceptionOutputMessage"/>
        </operation>
        <operation name="GetResourceProperty">
            <input name="GetResourcePropertyRequest" message="wsrpw:GetResourcePropertyRequest"
                wsa:Action="http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ResourceProperties/GetResourceProperty"/>
            <output name="GetResourcePropertyResponse" message="wsrpw:GetResourcePropertyResponse"
                wsa:Action="http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ResourceProperties/GetResourcePropertyResponse"/>
            <fault name="InvalidResourcePropertyQNameFault"
                message="wsrpw:InvalidResourcePropertyQNameFault"/>
            <fault name="ResourceUnknownFault" message="wsrpw:ResourceUnknownFault"/>
        </operation>
        <operation name="GetMultipleResourceProperties">
            <input name="GetMultipleResourcePropertiesRequest"
                message="wsrpw:GetMultipleResourcePropertiesRequest"
                wsa:Action="http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ResourceProperties/GetMultipleResourceProperties"/>
            <output name="GetMultipleResourcePropertiesResponse"
                message="wsrpw:GetMultipleResourcePropertiesResponse"
                wsa:Action="http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ResourceProperties/GetMultipleResourceProperties"/>
            <fault name="InvalidResourcePropertyQNameFault"
                message="wsrpw:InvalidResourcePropertyQNameFault"/>
            <fault name="ResourceUnknownFault" message="wsrpw:ResourceUnknownFault"/>
        </operation>
        <operation name="QueryResourceProperties">
            <input name="QueryResourcePropertiesRequest"
                message="wsrpw:QueryResourcePropertiesRequest"
                wsa:Action="http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ResourceProperties/QueryResourceProperties"/>
            <output name="QueryResourcePropertiesResponse"
                message="wsrpw:QueryResourcePropertiesResponse"
                wsa:Action="http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ResourceProperties/QueryResourcePropertiesResponse"/>
            <fault name="ResourceUnknownFault" message="wsrpw:ResourceUnknownFault"/>
            <fault name="InvalidResourcePropertyQNameFault"
                message="wsrpw:InvalidResourcePropertyQNameFault"/>
            <fault name="UnknownQueryExpressionDialectFault"
                message="wsrpw:UnknownQueryExpressionDialectFault"/>
            <fault name="InvalidQueryExpressionFault" message="wsrpw:InvalidQueryExpressionFault"/>
            <fault name="QueryEvaluationErrorFault" message="wsrpw:QueryEvaluationErrorFault"/>
        </operation>
    </portType>
</definitions>
