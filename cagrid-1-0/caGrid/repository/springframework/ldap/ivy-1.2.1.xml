<?xml version="1.0"?>

<ivy-module version="2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="http://incubator.apache.org/ivy/schemas/ivy.xsd">

	<info organisation="springframework" module="ldap" revision="1.2.1">
		<license name="Apache" url="http://www.apache.org/licenses/LICENSE-2.0.txt"/>
		<description homepage="http://www.springframework.org/ldap">Spring LDAP is a Java library
			for simplifying LDAP operations, based on the pattern of Spring's JdbcTemplate. The
			framework relieves the user of common chores, such as looking up and closing contexts,
			looping through results, encoding/decoding values and filters, and more. The
			LdapTemplate class encapsulates all the plumbing work involved in traditional LDAP
			programming, such as creating a DirContext, looping through NamingEnumerations, handling
			exceptions and cleaning up resources. This leaves the programmer to handle the important
			stuff - where to find data (DNs and Filters) and what do do with it (map to and from
			domain objects, bind, modify, unbind, etc.), in the same way that JdbcTemplate relieves
			the programmer of all but the actual SQL and how the data maps to the domain model. In
			addition to this, Spring LDAP provides transaction support, a pooling library, exception
			translation from NamingExceptions to a mirrored unchecked Exception hierarchy, as well
			as several utilities for working with filters, LDAP paths and Attributes. Spring-LDAP
			requires J2SE 1.4 and works with Spring Framework 1.2.x as well as 2.0.x. J2SE 1.4 and
			JavaCC 4.0 is required for building the release binaries from sources. J2EE 1.4 (Servlet
			2.3, JSP 1.2) is required for running the example.</description>
	</info>
	<publications>
		<artifact name="spring-ldap"/>
	</publications>

</ivy-module>
