<!-- ======================================================================= -->
<!-- caGrid Utilities build file                                             -->
<!-- ======================================================================= -->
<project name="caGrid-introduce_tests_harness" basedir=".">
	<property name="junit.results.dir" value="${test.log.dir}/junit" />

	<property name="instrumented.classes.dir" value="${build.dir}/instrumented-classes" />
	<property name="cobertura.report.dir" value="${build.dir}/coverage" />
	<!-- <property name="cobertura.data.file" location="${instrumented.classes.dir}/${project.name}-cobertura.ser" /> -->
	<!-- had to use default, as sysproperty isn't passed along to introduce forked jvms; this allows it to still work -->
	<property name="cobertura.data.file" location="cobertura.ser" />

	<target name="instrument">
		<taskdef resource="tasks.properties">
			<classpath>
				<path refid="Introduce.test.classpath" />
				<path refid="Portal.test.classpath" />
			</classpath>
		</taskdef>
		<delete file="${cobertura.data.file}" />
		<mkdir dir="${instrumented.classes.dir}" />
		<cobertura-instrument todir="${instrumented.classes.dir}" datafile="${cobertura.data.file}">
			<fileset dir="${introduce.classes.dir}">
				<include name="**/*.class" />
			</fileset>
		</cobertura-instrument>
	</target>

	<!-- call the test target for each project and aggregates the log resutls  -->
	<target name="test" depends="checkGlobus, instrument">
		<echo message="Test results dir: ${junit.results.dir}" />
		<mkdir dir="${junit.results.dir}" />
		<junit dir="${basedir}" printsummary="yes" errorproperty="test.failed" failureproperty="test.failed" showoutput="true" fork="yes" forkmode="once">
			<sysproperty key="net.sourceforge.cobertura.datafile" file="${cobertura.data.file}" />
			<sysproperty key="basedir" value="${basedir}" />
			<sysproperty key="build.dir" value="${classes.dir}" />
			<sysproperty key="GLOBUS_LOCATION" value="${ext.globus.location}"/>
			<jvmarg value="-Dbuild.dir=${classes.dir}" />
			<jvmarg value="-DGLOBUS_LOCATION=${ext.globus.dir}" />
			<classpath location="${instrumented.classes.dir}" />
			<classpath refid="Introduce.test.classpath" />
			<classpath refid="UpdateManager.test.classpath" />
			<formatter type="xml" />
			<test if="testcase" name="${testcase}" fork="no" todir="${junit.results.dir}" />
			<batchtest unless="testcase" fork="yes" todir="${junit.results.dir}">
				<fileset dir="${test.src.dir}/Introduce">
					<include name="**/test/unit/**/*Test.java" />
					<include name="**/test/unit/**/*TestCase.java" />
				</fileset>
				<fileset dir="${test.src.dir}/UpdateManager">
					<include name="**/test/unit/**/*Test.java" />
					<include name="**/test/unit/**/*TestCase.java" />
				</fileset>
			</batchtest>
		</junit>
		<fail message="Tests failed! Check test reports." if="test.failed" />
	</target>

	<!-- call the test target for each project and aggregates the log resutls  -->
	<target name="systemTest" depends="checkGlobus, instrument">
		<echo message="Test results dir: ${junit.results.dir}" />
		<mkdir dir="${junit.results.dir}" />
		<junit dir="${basedir}" printsummary="yes" errorproperty="test.failed" failureproperty="test.failed" showoutput="true" fork="yes">
			<sysproperty key="net.sourceforge.cobertura.datafile" file="${cobertura.data.file}" />
			<sysproperty key="basedir" value="${basedir}" />
			<sysproperty key="build.dir" value="${classes.dir}" />
			<sysproperty key="GLOBUS_LOCATION" value="${ext.globus.location}"/>
			<jvmarg value="-Dbuild.dir=${classes.dir}" />
			<jvmarg value="-DGLOBUS_LOCATION=${ext.globus.dir}" />
			<classpath location="${instrumented.classes.dir}" />
			<classpath refid="Introduce.test.classpath" />
			<classpath refid="UpdateManager.test.classpath" />
			<formatter type="xml" />
			<test if="testcase" name="${testcase}" fork="no" todir="${junit.results.dir}" />
			<batchtest unless="testcase" fork="yes" todir="${junit.results.dir}">
				<fileset dir="${test.src.dir}/Introduce">
					<include name="**/test/system/**/*Test.java" />
					<include name="**/test/system/**/*TestCase.java" />
				</fileset>
				<fileset dir="${test.src.dir}/UpdateManager">
					<include name="**/test/system/**/*Test.java" />
					<include name="**/test/system/**/*TestCase.java" />
				</fileset>
			</batchtest>
		</junit>
		<fail message="System Tests failed! Check test reports." if="test.failed" />
	</target>

	<!-- setting the ant var introduce.test.gui will make the gui tests run, else they will not -->
	<target name="testGUI" depends="checkGlobus" if="introduce.test.gui">

		<!-- add hte add filters line here -->
		<filter token="TestDir" value="${basedir}" />
		<filter token="Timeout" value="100000" />
		<!-- then copy each of those scripts.template to scripts -->
		<copy todir="${basedir}/test/resources/abbot" filtering="true" overwrite="true">
			<fileset dir="${basedir}/test/resources/scripts" />
		</copy>

		<junit dir="${basedir}" printsummary="yes" errorproperty="gui.test.failed" failureproperty="gui.test.failed" showoutput="true">
			<sysproperty key="basedir" value="${basedir}" />
			<jvmarg value="-Dbasedir=${basedir}" />
			<!--<sysproperty key="awt.toolkit" value="sun.awt.windows.WToolkit"/>
			<jvmarg value="-Dawt.toolkit=sun.awt.windows.WToolkit"/>-->
			<!--<sysproperty key="java.awt.headless" value="true"/>
			<jvmarg value="-Djava.awt.headless=true"/>-->
			<classpath refid="Portal.run.test.classpath" />
			<formatter type="xml" />
			<batchtest fork="yes" todir="${junit.results.dir}">
				<fileset dir="${test.src.dir}/Portal">
					<include name="**/*Test.java" />
				</fileset>
			</batchtest>
		</junit>
		<fail message="Tests failed! Check test reports." if="gui.test.failed" />
	</target>

	<target name="coverageReport" depends="test" description="Runs the tests and generates a test
		coverage report.">
		<cobertura-report format="html" datafile="${cobertura.data.file}" destdir="${cobertura.report.dir}">
			<fileset dir="${src.dir}/Introduce">
				<include name="**/*.java" />
			</fileset>
			<fileset dir="${src.dir}/Portal">
				<include name="**/*.java" />
			</fileset>
			<fileset dir="${test.src.dir}/Introduce">
				<include name="**/*.java" />
			</fileset>
			<fileset dir="${test.src.dir}/Portal">
				<include name="**/*.java" />
			</fileset>
		</cobertura-report>
	</target>
</project>