<%@ jet package="gov.nih.nci.cagrid.introduce.templates" class="ServerConfigTemplate" imports="gov.nih.nci.cagrid.introduce.* gov.nih.nci.cagrid.introduce.beans.service.* gov.nih.nci.cagrid.introduce.info.* gov.nih.nci.cagrid.introduce.codegen.utils.* gov.nih.nci.cagrid.introduce.codegen.* gov.nih.nci.cagrid.introduce.beans.namespace.* java.util.* gov.nih.nci.cagrid.introduce.beans.resource.* gov.nih.nci.cagrid.introduce.beans.property.*"%>
<% gov.nih.nci.cagrid.introduce.info.ServiceInformation info = (gov.nih.nci.cagrid.introduce.info.ServiceInformation) argument; 
   String namespaceDomain = info.getIntroduceServiceProperties().getProperty("introduce.skeleton.namespace.domain");
%>
<?xml version="1.0" encoding="UTF-8"?>
<deployment name="defaultServerConfig" 
    xmlns="http://xml.apache.org/axis/wsdd/"
    xmlns:aggr="http://mds.globus.org/aggregator/types"
    xmlns:java="http://xml.apache.org/axis/wsdd/providers/java" 
    xmlns:xsd="http://www.w3.org/2001/XMLSchema">

<%
if (info.getServices() != null && info.getServices().getService() != null) {
	for (int serviceI = 0; serviceI < info.getServices().getService().length; serviceI++) {
		ServiceType service = info.getServices().getService(serviceI);
		String serviceName = service.getName();
   		if(serviceName.endsWith("Service")){
   			serviceName = serviceName.substring(0,serviceName.length()-7);
   		}
%>
    <service name="SERVICE-INSTANCE-PREFIX/<%=serviceName %>" provider="Handler" use="literal" style="document">
        <parameter name="className" value="<%=service.getPackageName()%>.<%=serviceName.toLowerCase()%>.service.globus.<%=serviceName%>ProviderImpl"/>
        <wsdlFile>share/schema/SERVICE-INSTANCE-PATH/<%=service.getName()%>_service.wsdl</wsdlFile>
        <parameter name="securityDescriptor" value="ETC-PATH/<%=service.getName()%>-security-desc.xml"/>
        <parameter name="allowedMethods" value="*"/>
        <parameter name="handlerClass" value="org.globus.axis.providers.RPCProvider"/>
        <parameter name="scope" value="Application"/>
        <parameter name="providers" value="GetRPProvider GetMRPProvider QueryRPProvider"/>
        <parameter name="loadOnStartup" value="true"/>
    </service>
<%
	}
}
%>    
    
    <typeMapping 
        name="AggregatorContent" 
        qname="aggr:AggregatorContent" 
        type="java:org.globus.mds.aggregator.types.AggregatorContent"
        serializer="org.apache.axis.encoding.ser.BeanSerializerFactory"
        deserializer="org.apache.axis.encoding.ser.BeanDeserializerFactory"
        encodingStyle="" />
</deployment>