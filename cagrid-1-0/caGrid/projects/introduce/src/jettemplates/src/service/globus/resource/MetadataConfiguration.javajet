<%@ jet package="gov.nih.nci.cagrid.introduce.templates.service.globus.resource" class="MetadataConfigurationTemplate" imports="gov.nih.nci.cagrid.introduce.codegen.* gov.nih.nci.cagrid.introduce.beans.namespace.* java.util.* gov.nih.nci.cagrid.introduce.beans.metadata.*"
%>
<%  gov.nih.nci.cagrid.introduce.ServiceInformation arguments = (gov.nih.nci.cagrid.introduce.ServiceInformation) argument; 
  	Properties properties = arguments.getServiceProperties();
	MetadataListType metadataList = arguments.getMetadata();

   String packageName = properties.getProperty("introduce.skeleton.package");
   String serviceName = properties.getProperty(gov.nih.nci.cagrid.introduce.IntroduceConstants.INTRODUCE_SKELETON_SERVICE_NAME);
   String modifiedServiceName = serviceName;
   if(serviceName.endsWith("Service")){
   	modifiedServiceName = serviceName.substring(0,serviceName.length()-7);
   }
%>
package <%=packageName%>.service.globus.resource;

public class MetadataConfiguration {
	private String registrationTemplateFile;
	private boolean performRegistration;

<%	if(metadataList!=null && metadataList.getMetadata()!=null){
			for (int i = 0; i < metadataList.getMetadata().length; i++) {
				MetadataType metadata = metadataList.getMetadata()[i];
				if(metadata.isPopulateFromFile()){
					String name=TemplateUtils.getResourcePropertyVariableName(metadataList, i);
					stringBuffer.append("\tprivate String "+name+"File;\n");
				}
			}
		}
	%>


	public boolean shouldPerformRegistration() {
		return performRegistration;
	}


	public void setPerformRegistration(boolean performRegistration) {
		this.performRegistration = performRegistration;
	}


	public String getRegistrationTemplateFile() {
		return registrationTemplateFile;
	}


	public void setRegistrationTemplateFile(String registrationTemplateFile) {
		this.registrationTemplateFile = registrationTemplateFile;
	}
	<%	if(metadataList!=null && metadataList.getMetadata()!=null){
			for (int i = 0; i < metadataList.getMetadata().length; i++) {
				MetadataType metadata = metadataList.getMetadata()[i];
				if(metadata.isPopulateFromFile()){
					String name=TemplateUtils.getResourcePropertyVariableName(metadataList, i);
					SchemaInformation schemaInformation = arguments.getSchemaInformation(metadata.getQName());
					String className=schemaInformation.getNamespace().getPackageName() + "." + schemaInformation.getType().getClassName();
		%>
	
	
	public String get<%=TemplateUtils.upperCaseFirstCharacter(name)%>File() {
		return <%=name%>File;
	}
	
	
	public void set<%=TemplateUtils.upperCaseFirstCharacter(name)%>File(String <%=name%>File) {
		this.<%=name%>File = <%=name%>File;
	}
	<%			}
			}
		}%>	
}
