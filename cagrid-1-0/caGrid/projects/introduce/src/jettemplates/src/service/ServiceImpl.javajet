<%@ jet package="gov.nih.nci.cagrid.introduce.templates.service" class="ServiceImplTemplate" %>
<% gov.nih.nci.cagrid.introduce.info.SpecificServiceInformation info = (gov.nih.nci.cagrid.introduce.info.SpecificServiceInformation) argument; 
   String packageName = info.getIntroduceServiceProperties().getProperty("introduce.skeleton.package");
   String serviceName = info.getService().getName();
   String namespaceDomain = info.getIntroduceServiceProperties().getProperty(gov.nih.nci.cagrid.introduce.IntroduceConstants.INTRODUCE_SKELETON_NAMESPACE_DOMAIN);
   String modifiedServiceName = serviceName;
   if(serviceName.endsWith("Service")){
   	modifiedServiceName = serviceName.substring(0,serviceName.length()-7);
   }
%>
package <%=packageName%>.<%=info.getService().getName().toLowerCase()%>.service;

import <%=packageName%>.<%=info.getService().getName().toLowerCase()%>.common.<%=info.getService().getName()%>I;
import <%=packageName%>.<%=info.getService().getName().toLowerCase()%>.service.globus.ServiceConfiguration;

import java.rmi.RemoteException;

import javax.naming.InitialContext;

import org.apache.axis.MessageContext;
import org.globus.wsrf.Constants;

/** 
 *  <%=packageName%>I
 *  TODO:DOCUMENT ME
 * 
 * @created by Introduce Toolkit version 1.0
 * 
 */
public class <%=info.getService().getName()%>Impl implements <%=info.getService().getName()%>I{
    private ServiceConfiguration configuration;
	
	public <%=info.getService().getName()%>Impl() throws RemoteException {
	
	}
	
	public ServiceConfiguration getConfiguration() throws Exception {
		if (this.configuration != null) {
			return this.configuration;
		}
		MessageContext ctx = MessageContext.getCurrentContext();

		String servicePath = ctx.getTargetService();

		String jndiName = Constants.JNDI_SERVICES_BASE_NAME + servicePath + "/serviceconfiguration";
		try {
			javax.naming.Context initialContext = new InitialContext();
			this.configuration = (ServiceConfiguration) initialContext.lookup(jndiName);
		} catch (Exception e) {
			throw new Exception("Unable to instantiate service configuration.", e);
		}

		return this.configuration;
	}


}

