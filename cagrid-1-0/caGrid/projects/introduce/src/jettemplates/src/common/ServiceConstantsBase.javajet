<%@ jet package="gov.nih.nci.cagrid.introduce.templates.common" class="ServiceConstantsBaseTemplate" imports="gov.nih.nci.cagrid.introduce.common.* gov.nih.nci.cagrid.introduce.codegen.utils.* gov.nih.nci.cagrid.introduce.codegen.* gov.nih.nci.cagrid.introduce.common.* java.util.* gov.nih.nci.cagrid.introduce.beans.resource.*" %>
<%  gov.nih.nci.cagrid.introduce.common.SpecificServiceInformation arguments = (gov.nih.nci.cagrid.introduce.common.SpecificServiceInformation) argument; 
  	Properties properties = arguments.getIntroduceServiceProperties();
	ResourcePropertiesListType metadataList = arguments.getService().getResourcePropertiesList();
    String serviceName = arguments.getService().getName();
    String namespaceDomain = arguments.getService().getNamespace();
    String modifiedServiceName = serviceName;
    if(serviceName.endsWith("Service")){
   		modifiedServiceName = serviceName.substring(0,serviceName.length()-7);
	}
%>
package <%=arguments.getService().getPackageName()%>.common;

import javax.xml.namespace.QName;


/**
 * This class is autogenerated, DO NOT EDIT
 *
 * @created by Introduce Toolkit version <%=IntroducePropertiesManager.getIntroduceVersion()%>
 */
public interface <%=arguments.getService().getName()%>ConstantsBase {
	public static final String SERVICE_NS = "<%=namespaceDomain%>";
	public static final QName RESOURCE_KEY = new QName(SERVICE_NS, "<%=serviceName%>Key");
	public static final QName RESOURCE_PROPERTY_SET = new QName(SERVICE_NS, "<%=serviceName%>ResourceProperties");

<%	
	if(metadataList!=null && metadataList.getResourceProperty()!=null){
	//Service level metadata (exposed as resouce properties)
		for (int i = 0; i < metadataList.getResourceProperty().length; i++) {
			ResourcePropertyType metadata = metadataList.getResourceProperty()[i];
			
			stringBuffer.append("\tpublic static final QName ");
			stringBuffer.append(CommonTools.getResourcePropertyVariableName(metadataList, i).toUpperCase());
			stringBuffer.append(" = new QName(\"");
			stringBuffer.append(metadata.getQName().getNamespaceURI()+"\", \"" + metadata.getQName().getLocalPart()+"\");\n");
		}
	}
%>	
}
