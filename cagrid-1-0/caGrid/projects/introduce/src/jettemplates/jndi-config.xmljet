<%@ jet package="gov.nih.nci.cagrid.introduce.templates" class="JNDIConfigTemplate" 
imports="gov.nih.nci.cagrid.introduce.* gov.nih.nci.cagrid.introduce.beans.service.* gov.nih.nci.cagrid.introduce.common.* gov.nih.nci.cagrid.introduce.info.* gov.nih.nci.cagrid.introduce.codegen.utils.* gov.nih.nci.cagrid.introduce.codegen.* gov.nih.nci.cagrid.introduce.beans.namespace.* java.util.* gov.nih.nci.cagrid.introduce.beans.resource.* gov.nih.nci.cagrid.introduce.beans.property.*" %>
<% gov.nih.nci.cagrid.introduce.info.ServiceInformation info = (gov.nih.nci.cagrid.introduce.info.ServiceInformation) argument;
   ServiceProperties properties = info.getServiceProperties();
   String namespaceDomain = info.getIntroduceServiceProperties().getProperty("introduce.skeleton.namespace.domain");
  
%><?xml version="1.0" encoding="UTF-8"?>
<jndiConfig xmlns="http://wsrf.globus.org/jndi/config">
<%
if (info.getServices() != null && info.getServices().getService() != null) {
	for (int serviceI = 0; serviceI < info.getServices().getService().length; serviceI++) {
		ServiceType service = info.getServices().getService(serviceI);
		String serviceName = service.getName();
		String modifiedServiceName = serviceName;
   		if(serviceName.endsWith("Service")){
   			modifiedServiceName = serviceName.substring(0,serviceName.length()-7);
   		}
%>
	<service name="SERVICE-INSTANCE-PREFIX/<%=modifiedServiceName%>">
		<resource name="home" type="<%=service.getPackageName()%>.service.globus.resource.BaseResourceHome">
			<resourceParams>
				<parameter>
					<name>factory</name>
					<value>org.globus.wsrf.jndi.BeanFactory</value>
				</parameter>
			</resourceParams>
		</resource>
		<%
		if(service.getResourceFrameworkType().equals(IntroduceConstants.INTRODUCE_MAIN_RESOURCE)){
		%>
		<resource name="configuration" type="<%=service.getPackageName()%>.service.globus.resource.ResourceConfiguration">
			<resourceParams>
				<parameter>
					<name>factory</name>
					<value>org.globus.wsrf.jndi.BeanFactory</value>
				</parameter>
				<parameter>
					<name>performRegistration</name>
					<!-- Set this to false to skip ServiceGroup registration -->
					<value>true</value>
				</parameter>
				<parameter>
					<name>registrationTemplateFile</name>
					<!-- Set this to the relative path (from the container root, e.g GLOBUS_LOCATION for globus container) of the registration parameters template file (ignored if performRegistration is false) -->
					<value>ETC-PATH/registration.xml</value>
				</parameter>
<%	if(info.getServices() !=null && info.getServices().getService() !=null){
		ResourcePropertiesListType metadataList = service.getResourcePropertiesList();
		if(metadataList!=null && metadataList.getResourceProperty()!=null){
			for (int i = 0; i < metadataList.getResourceProperty().length; i++) {
				ResourcePropertyType metadata = metadataList.getResourceProperty(i);
				if(metadata.isPopulateFromFile()){
					String name=CommonTools.getResourcePropertyVariableName(metadataList, i);
					SchemaInformation schemaInformation = CommonTools.getSchemaInformation(info.getNamespaces(),metadata.getQName());
					String className=schemaInformation.getNamespace().getPackageName() + "." + schemaInformation.getType().getClassName();%>
				<parameter>
					<name><%=name%>File</name>
					<!-- Set this to the relative path (from the container root, e.g GLOBUS_LOCATION for globus container) of the <%=name%> extract -->
					<value>ETC-PATH/<%=name%>.xml</value>
				</parameter><%
				}
			}
		}
	}%>				
			</resourceParams>
		</resource>
		<%
		}
		%>
		<resource name="serviceconfiguration" type="<%=service.getPackageName()%>.<%=modifiedServiceName.toLowerCase()%>.service.globus.ServiceConfiguration">
			<resourceParams>
				<parameter>
					<name>factory</name>
					<value>org.globus.wsrf.jndi.BeanFactory</value>
				</parameter>
				<%if(properties!=null && properties.getProperty()!=null){
			for (int i = 0; i < properties.getProperty().length; i++) {
				ServicePropertiesProperty prop = properties.getProperty(i);%>
					<parameter>
				<name><%=prop.getKey()%></name>
					<value>@<%=prop.getKey()%>@</value>
				</parameter><%
			}
	}%>		
			</resourceParams>
		</resource>
	</service>
	
<%
}
}
%>
</jndiConfig>
