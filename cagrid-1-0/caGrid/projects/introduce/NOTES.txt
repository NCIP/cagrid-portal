To Do:
(DONE) Make sure that skeleton names entered in the GUI are acceptable.
	i.e. No Service in the name (fixed 12/7/05)
		 No non-acceptable characters for java class names

(DONE) Enable service to back up old service skeleton before altering and then provide rollback capabilities.
	i.e. Enable "undo" in the gui.

(DONE) Map the ext/NStoPkg.mappings with those in the skeleton (right now they are copied into the skeleton's file)
	
Security configuration

Metadata and registration configuration

Make notes on how to add a new template.

Need to programatically be able to 
	-create service from a pre-defined service template
	-add/remove new metadata to the service
	-add/remove state variables

(DONE) Because we are now using axis to generate the class names we will not be able to use synctool to always find out which methods are different.  We will need a better method.
		-- we do not need to know them upfront because we dont need to analyze the signatures, only look at the method names.

Need to be able to not only use Axis for the classnames but also use the users classnames if they provide there own beans or api.

(DONE) moved the sync tools over to use beans instead of using DOM.  Much cleaner an easier to maintain.
	

Metadata xmlfile:
=====
schematype AttGroup
populateFromFile (boolean)
register (boolean)
Qname of RP
(derive instance filename from QName?)
what to template:
=====
type goes into serviceRPs in wsdl
qname goes into registration.xml if registerType is true
if loadFromFile is true derived instance path goes into jndi config
if loadFromFile is true add getter/setter to MDconfig.java
