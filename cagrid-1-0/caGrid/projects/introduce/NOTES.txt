To Do:

I was adding faults to a method, and when I hit done, an error dialog poped up with method "java.util.Vector" and removed my faults

on save etc i have seen unable to delete namespace2package.mappings.

metadata code doesn't compile if you select an element that is xsd:type an XML schema type (e.g. string)

Introduce Portal (or something it uses) is leaving file handles open
  - when i create a service, then close the mod viewer, and try to create it again, it can't delete the creation dir

add support for having fault types in the types browser....

assumption is made that when a method is imported from a wsdl that all the messages for that method are of that wsdl's namespace....

jaxmejs is leaving file handles laying around somewhere. (update.. System.gc call is owrking for now, might have to patch jaxmejs)

solve timing problems in the addComplexTypeTest.....

add tests to system tests for (coverage report shows no coverage):
- (DONE) SystemProperties
-CustomBeans and Serialization
-Security
- (DONE) simple types (boolean, string, etc) as input and output
- (DONE) extensions
-deployment
- (DONE) multiple faults on a method
- (DONE) methods returning arrays
- (DONE) servicename ending in Service

(steve)
Open a service with no security. Go to service security, click custom, check all the options for secure communication.  Go to authz tab, select grid map.
Now click back on the Operations tab, and click modify to modify a method.
It gives an appropriate error “No Grid Map File Specified!!!” and dumps this exception, but the problem is there is no context as to where to fix the problem.  It should at least set the security tab as the active tab, and go to the authorization tab.

since you cant edit anything on any security tabs unless you have checked custom, all tabs should be disabled
when you check custom, it should only enable the secure communication tab (as you cant edit any tabs until you check a form of secure com)
when you check some for of secure comm, the other tabs should be enabled.


secure message privacy does not work (STEVE)

support for open saml callouts and everything that globus supports (STEVE)

============================ D O N E ================================================================
type browser issues:
-(DONE)Try to create a new service on the desktop and throws an error
-(DONE)you can and shouldn't be able to remove the XML schema schema
- (DONE)it shouldn't let you remove schema types that are being used by inputs,outputs,or metadata
-(DONE)it lets you set the package name for XML schema schema, and shouldn't
-(DONE)it lets you set the location for XML schema schema, and shouldn't
-(DONE)it lets you set the class name for XML schema types; does that work?
-(DONE)does it really support editing the location of a schema? if it does, it needs to move the file that was pulled down from the gme (otherwise it wont exist)

- Fix Package conflict problem.



From BMI Tutorial:
6) Adding a resource property to a service context, doesn't refresh the JTree

(DONT LIKE THIS) should generated two different interfaces in common..  (what is the use.  The server only implements non "provided" methods.  Has nothing to do with "importing")
  - one, for all the non-imported operations that the service implements
  - one, that extends that interface, that adds the imported methods, that only the client implements 


metadata tab should have a "create value" (or something) button for each metadata value that is populateFromFile
  - should launch a specialized graphical editor (based on QName), or a generic XSD-based editor if no custom renderer is present 
  - introduce needs a new extension type (metadata populator) to register QName->Classname (of panel editor)

Modification viewer: any tabs with the namespaces tree need to use a JSplitPane.

(added validation) if add a new service with same namespace i get funny gui error.

fix the CommonTools ant calls to uniformly handle things like path issues

(DONE) when modifying a service, conneciton to GME needs to happen in the background, and fail gracefully

security operationprovider needs to be hooked into build properly...
 - have copies of schema and jars... needs to get from artifacts
 
(DONE i am leaving this for now) eclipse launch files dont need to be in the top directory to work... move them somewhere else so they don't clutter the services root dir

Modification Viewer's Methods table needs to manage the backend model, not create new Method objects 

introduce created clients should not call getPortType() for each method invocation (its very inefficient), getPortType should be called once in the contructor, and each method should just use it
  - this has security ramifciations as currently security is configured assuming a fresh port type... it needs to set all the options appropriately for each method call

create preferences window to support extension configuration etc.....

duce gui needs to rember last selection for deploy (GT or tomcat)

(TESTED WOKRING FINE) IMPORTANT: introduce needs to handle globus schemas being in the GME
  (they can't just be imported from the Globus browser, as anyone wanting to make
   XSDs that import Globus schemas need them there so they can upload theres)   
   
(DONE it is required to have both) Service properties with a key but no value causes NPE on ServicePropertiesTable when rendering.


I had to move a gui base componenet for preferences to extensions.  need to look into moving this back to portal.

Need to make Configuration Menu work... should be able to set appropriate services URLs, etc

add scroll pain in deployer for service properties

need to make introduce-portal-config.xml.example and generate the real one from the example

refactor to not be creating hte service.wsdd everytime.....

From BMI Tutorial
1) (DONE) Add Fault needs to check the fault name is is valid java identifier
  - if you put spaces or something in it, it completely screws up the service (because sync source can't read the created file)
2) (DONE this is fine) Generated fault doesn't appear to take a message
3) (DONE) We should genterate a client launcher
5) (DONE) Service Contexts.. create Service Context needs defaults for the values (namespace, package, etc..)
4) (DONE) Service Property key needs to make sure its a valid java identifier
7) (DONE) Right-clicking the modify service context, removed the service and through a NPE
8) (DONE) when we write the .classpath, we should "hard code" globus location instead of using the classpath variable
  - core cagrid services using introduce can search and replace the hard code with the variable before commiting to CVS

add automatic client handle generation if a method is returning an EPR

(make sure that there is a passive fail for globus discovery tool

NO YOU SHOULD NOT) you should be able to open up an empty introduce.xml document (with no elements), currently null pointers happen in methods and types

need to set the correct location to globus imported schemas .....

need to make sure to add ALL the globus used namespaces to the IntroduceConstants

the generated service's ServiceConfiguration needs to be moved to the service package instead of the service.globus package
  - it currently creates cyclic packages
  
sync should create a properties file for service properties and ant deploy should use it as default

clean up and add icons to the service contexts tree

generated client needs to be able to take an EPR in its constructor 
 
make sure to remove dependecies to metadata project...

portal lets you add the same method name several times

gme://common.example.com/version/2.5 namespace style is causing problems....

adding an inner service with a "-" in the name causes a sync error (HelloWorld-Instance)
line 11:28: unexpected token: -
gov.nih.nci.cagrid.introduce.codegen.common.SynchronizationException
	at gov.nih.nci.cagrid.introduce.codegen.services.SyncServices.sync(SyncServices.java:83)
	...
Caused by: java.util.NoSuchElementException
	at java.util.HashMap$HashIterator.nextEntry(HashMap.java:790)
	at java.util.HashMap$ValueIterator.next(HashMap.java:817)
	at gov.nih.nci.cagrid.introduce.codegen.methods.SyncMethods.lookForUpdates(SyncMethods.java:84)
	at gov.nih.nci.cagrid.introduce.codegen.methods.SyncMethods.sync(SyncMethods.java:50)
	...
	
(Not a big deal as only used as "default" in GUI) Need to fix commontools to read some preference to set the rule to use for namespace mapping, right now its hardcoded as below:
	//TODO: where should this mapperClassname preference be set
	String mapperClassname = "gov.nih.nci.cagrid.common.CaBIGNames2paceToPackageMapper";

(DONE) make sure that every panel that uses a namespaces jtree has a on focus to restore from the model
(DONE) Type browser tools are all messed up... filesystem is showing GME stuff
(DONE) introduce created an invalid client when you make a method that returns a boolean.
(DONE) introduce created an invalid impl when you make a method that takes in a boolean.
 
(DONE) we could support definition of "service properties" in introduce
-serviceimpl would have gettters for them (pull them out of service context for them)
-we would could write them into the wsdd

(DONE this is checked when you click done...) parameter names and not being made unique when you add them... double click "string" twice as an input param 

(DONE) theres no way to change a method to void once you've set a return type

(DONE you can set properties through the interface now) need to make jndi edited, not replaced everytime.

(DONE) introduce build needs to make more granular jars (for linking), how about:
	-caGrid-introduce-core-1.0.jar  		(everything in src/java/Introduce) 
	-caGrid-introduce-core-tests-1.0.jar  	(everything in test/src/java/Introduce)
	-caGrid-introduce-portal-1.0.jar  		(everything in src/java/Portal)
	-caGrid-introduce-portal-tests-1.0.jar 	(everything in test/src/java/Portal)

(DONE) introduce lets you select an XSD simpletype as metadata... that doesnt work.

(DONE only needed for params)need "Up" and "Down" buttons for the order of the tables (operations, method params, etc)

(DONE) need a way to generate XSD and beanmappers for existing object models that want to use default de/serialization

(DONE - still need to add tests.. and GUI - Scott) sync serializer/deserializer

	SchemaElement needs to have location and type always and have a choice between:
	complex type with nothing
	and one with className serializer and deserializer
	
	
	can be used to build:
	<typeMapping qname="(from Namespace namespace, and SchemaElement type)"
	languageSpecificType="java:(from Namespace packageName+.+SchemaElement className)"
	serializer="(from SchemaElement serializer)"
	deserializer="(from SchemaElement deserializer)" encodingStyle=""/>
	
	editors will look for:
	<!-- START INTRODUCE TYPEMAPPINGS -->
	if it exists, it dump the type mappings from its start, replacing evertying in the file until finding:
	<!-- END INTRODUCE TYPEMAPPINGS -->
	
	if the tag isn't found, the tags (and type mappings) will be added to the end of the file (in appropriate location for server and client)
	
==========

(DONE) added all xsd types to skeleton

(DONE) Shannon, did your refactor break the functionality of synchronizeMetadataFramework in the MetadataListType?

(DONE) BaseResource bug that Mike and Steve found.  Make new service with secure conv. and keep the initial
settings.  Use a proxy created from Dorian in the credentials section.  Stand up globus without security.
--seems the AuthenticationService intercepts the intial call, then rewrites the resourcecontext targetService to be itself... this causes the resourcehome to break
  --need to see why it does this, and if there is a work around
  
(DONE) need to put a validator on the param name, it must be java valid......

Need to make better use of org.apache.axis.utils.JavaUtils
 -(DONE) checking for primatives
 -(DONE) checking for reserved keywords for things like method and param names

(DONE)probably need to separate out the namespacetopackage mapping definitions from each output/input/metadata as it is now, as its really a service level thing
	-we need a separate tab to define the mappings; this will probably be needed for custom serialization too

(DONE - its fine, as we need to write to it for type mappings) is client-config.wsdd really needed in the root dir?  can't you just add GLOBUS_LOCATION to your classpath

(DONE) Method modification window needs an overhaul....

(DONE) The GME Browser screen does not scroll correctly.

(DONE) when using a non-bean response object, the wsdl writter is broken.  It assumes the element name is "response".  It should assume it is the className

(DONE) if introduce.jar and the like is removed from the service and expected to be run from elsewhere, introduce will need to check that it supports the version of 
introduce.xml that the service uses.  We need to either have a "version" attribute in the document, or use the xmlns to decide the version.
(probably should add a version attribute as the behavior could change without the dcoument structure changing).

(DONE) Need to be able to roll back "created" version 0.

(DONE) When creating a new service be sure to remove all the old zips from teh resource directory....

(DONE) If it could not delete the dir prior to creation then warn and exit.

(DONE I think this was an overall issue) Code generation is broken for custom class definition when isArray is true (doesn't add array def in all places)

(DONE- fixed with streamgobbler) Make a method, save, add code to client and impl, modify name of input parameter, save, build error when trying to remove method and then unable to delete directory.

(DONE) When introduce adds new methods it shouldn't add a "return null;" it should add the following (even if its a void method):
	throw new RemoteException("Not yet implemented");

(DONE) How about changing this "@created by caGrid toolkit version 0.5"

(DONE) MUST FIX THE WHITESPACE SENSTIVE CODE FINDER!!!

(DONE ++++   NEEDS TESTED  ++++++++) when you download a schema that has dependencies, the dependant schemas are not added to the namespace to package mappings... you need to parse every schema (and imported schema), looking for imports, and make sure each imported schema has a mapping
- the namespaceExclude code needs to be updated when this is supported too.
- there no "good" way to do it, but the process should be to exclude any namespace that is imported from a schema that is excluded
  - basically just exclude any namespace that is included from a schema for a namespace that is being excluded (recursively)

(DONE) Last Saved in service properties should display as a normal looking Date/Time

(DONE) Operations list should display as a standard looking method: e.g.  void foo(A a, B b)
 

(DONE) need to NOT generate stubs for schemas that the user specifies the class to use... this is important as it will/could generate classes with exact same name and cause the service to break
-- still need to handle imported schemas, but so do the rest of the code (package mappings, etc)

(DONE) Click Modifiy Service, Click Save, Click Cancel or No, Save Progress comes up.

(DONE) Create service needs to check that the directory they select is empty.  If not, should prompt and ask if it is ok to delete the dir and recreate it.

(DONE)Click Modify Service Click Cancel, Null pointer.

(DONE) Make sure that skeleton names entered in the GUI are acceptable.
	i.e. No Service in the name (fixed 12/7/05)
		 No non-acceptable characters for java class names

(DONE) Enable service to back up old service skeleton before altering and then provide rollback capabilities.
	i.e. Enable "undo" in the gui.

(DONE) Map the ext/NStoPkg.mappings with those in the skeleton (right now they are copied into the skeleton's file)

(DONE) namespace to package mappings should be jettemplated at sync time

(DONE) Metadata and registration configuration


================================================================================
Need to verify we can achieve literal mapping between caDSR definition, XML serialization, and generated bean model
(we need to create a simple one of these, and add it to the specification document)

Example Model:
org.foo.A
  -org.foo.B b;
  -org.foo.C c;

XML (with appropriate namespaces of course):
<A>
  <B/>
  <C/>
<A>

Java Model:
org.foo
  -A {B b; C c;}
  -B
  -C
================================================================================




(*STARTED*  need to add more)Add gui testing (requires a HEAD to run)

Make notes on how to add a new template.

Need to validate the model before we begin to do code gen
	-- will reduce bugs and bug checking
	-- validate that the package names and classnames are being set correctly
	--VALIDATION:
		-unique method names
		-unique metadata qnames
		-run schema validation?
		-others?
	
(DONE)Need to support "MODIFIED" methods.
	-- support for changing of 
		-- output type
		-- number and type of parameters
		-- number and types of faults
	
	
(DONE) GMEMetadataConfigurationComponent needs to set proper view on viewing an existing one from "modify"

(DONE) add packageName as a seperate parameter so that we can handle the funny mappings that we will use for caDSR->GME schemas.....

(DONE) Because we are now using axis to generate the class names we will not be able to use synctool to always find out which methods are different.  We will need a better method.
		-- we do not need to know them upfront because we dont need to analyze the signatures, only look at the method names.

(DONE using sync tools to populate empty classnames) Need to be able to not only use Axis for the classnames but also use the users classnames if they provide there own beans or api.

(DONE Need to fix the browse screen so that it can work with paths that have spaces in them.

(DONE) Need to make sure that the id's used to created archives are good from date through time.

(DONE) Need to pull the namespace to mappings code out of the gui and into the template.

(DONE) moved the sync tools over to use beans instead of using DOM.  Much cleaner an easier to maintain.

FUTURE WORK PROPOSED:
	-Graphically and programatically add state variables to RP (3 weeks)
	-Create templates for services who wish to use GRAM (1 week)
	-Graphically and programatically wrap an existing java API(interface) into a service(4 weeks)
	-Look into multi-language binding support etc (1 week)
	-Add grid test cases to test created service deployment nightly (2 days)
	-Add Robot test cases to test the GUI nightly(4 days)
	-integrate with caDSR for interface design (2 weeks)




=======================================================
 SECURITY STUFF
=======================================================


1) Client Side Authorization

	A) Add Support for Identity Authorization
	B) Add Support for Custom Authorization
	C) Add Input for host and Identity Authorization

2) Server Side Authorization, Add Support for the following authorization mechanisms

	A) None
	B) Self
	C) GridMap
	D) Identity Authorization
	E) Host Authorization
	F) SAML Callout Authorization
		
3) Add Client side support for delegation

4) Add Service Credential Support

5) Add Service Run As Support

6) Add Service Side Support for Rejecting Limited Proxies.


icons from here: http://www.famfamfam.com/lab/icons/
and http://tango-project.org/Tango_Icon_Gallery