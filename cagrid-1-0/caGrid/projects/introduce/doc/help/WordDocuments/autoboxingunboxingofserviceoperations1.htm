<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><TITLE>Auto-Boxing/Unboxing of Service Operations</TITLE>
<META http-equiv=Content-Type content="text/html; charset=utf-8"><LINK 
href="../Theme/nav.css" type=text/css rel=stylesheet><LINK 
href="../LinksExt/C1H_HTML.css" type=text/css rel=stylesheet>
<META content="MSHTML 6.00.6000.16609" name=GENERATOR></HEAD>
<BODY 
style="PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-TOP: 0px; BACKGROUND-COLOR: transparent" 
relPart="../">
<DIV id=nsbanner 
style="PADDING-RIGHT: 0px; PADDING-LEFT: 0px; LEFT: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px">
<DIV id=TitleRow 
style="PADDING-RIGHT: 10px; PADDING-LEFT: 22px; PADDING-BOTTOM: 4px; WIDTH: 100%; PADDING-TOP: 4px">
<DIV id=ienav>
<P class=linknav align=left><A class=d2hpreviousenabled id=D2HPrevious 
href="otherfeaturesoftheintroduceengine1.htm"><IMG alt=Previous 
src="../Images/Theme/ButtonsAndIcons/nav_prev.gif" align=absMiddle border=0></A> 
&nbsp; <A class=d2hnextenabled id=D2HNext href="resourceframework1.htm"><IMG 
alt=Next src="../Images/Theme/ButtonsAndIcons/nav_next.gif" align=absMiddle 
border=0></A> </P></DIV></DIV></DIV>
<DIV class=d2h_main_nstext id=nstext 
style="PADDING-RIGHT: 10px; PADDING-LEFT: 22px; PADDING-BOTTOM: 10px; PADDING-TOP: 5px" 
valign="bottom">
<DIV class=d2h_breadcrumbs id=d2h_breadcrumbs><A class=d2h_breadcrumbsnormal 
href="introduce12design.htm">Introduce 1.2 Design</A><FONT 
class=d2h_breadcrumbslinkseparator> &gt; </FONT><A class=d2h_breadcrumbsnormal 
href="otherfeaturesoftheintroduceengine1.htm">Other Features of the Introduce 
Engine</A><FONT class=d2h_breadcrumbslinkseparator> &gt; </FONT><FONT 
class=d2h_breadcrumbsselected>Auto-Boxing/Unboxing of Service 
Operations</FONT></DIV>
<H3><A name=_Toc192911898></A><A name=_Toc192301209></A><A 
name=Auto-Boxing.2FUnboxing_of_Service_Operat></A>Auto-Boxing/Unboxing of 
Service Operations</H3>
<P class=msonormal><A title='"Introduce Generated Client Layers" ' 
href="http://www.cagrid.org/wiki/Image:Introduce-Client-layers.jpg"><FONT 
style="TEXT-DECORATION: none; text-underline: none"><IMG height=534 
alt="Introduce Generated Client Layers" src="../ImagesExt/image9_20.jpg" 
width=397 border=0 v:shapes="Picture_x0020_10"></FONT></A></P>
<P class=msonormal>Introduce Generated Client Layers</P>
<P class=msonormal>Grid service code generation and synchronization is one of 
the most complicated code generation operations in the toolkit. This component 
has to re-write the basic source code of the service so that the client and the 
server both agree on the newly modified interface as designed by the service 
creator. It also has to deal with associating the server side implementation of 
the service designer’s interface to the actual port type generated by Globus via 
Axis. The overall process is complicated due to fact that GT/Axis use document 
literal bindings to create the services portType and bindings to SOAP. For 
example, if a user describes a new method as shown below: <I>int foo(int bar1, 
int bar2);</I> </P>
<P class=msonormal>The port type method that will be created for the 
corresponding Java interface call will look like the one below: <I>FooReturn 
foo(FooParameters params);</I> </P>
<P class=msonormal>This style is known as document literal binding. This boxing 
or wrapping of the parameters and the return type of the service method can be 
confusing to the service user and service developer to deal with, especially 
since this document literal style is exposed directly through the client API or 
the service implementation API. Every client using the service will have to box 
up the parameters to call the operations of the service and un-box the results. 
Not only will this task be cumbersome for service users, but the document 
literal interface is not the interface that the service designer intended to be 
provided to its users. The Introduce toolkit will hide the boxing and un-boxing 
of methods by providing an interface to the service, which looks exactly as 
described by the service developer and not as interpreted by Globus via Axis. 
</P>
<P class=msonormal>In order to do this, the toolkit creates a wrapping layer in 
the client and service which both implement the clean interface (non document 
literal). These wrapper layers auto-box and un-box and map the calls from the 
clean client to the document literal port type client generated by Globus/Axis 
and visa versa for the service. It is worth noting that the move to document 
literal binding was made in the GT for interoperability reasons, as the more 
developer-friendly APIs provided by Introduce, and previously provided by GT, 
are not standardized and that Introduce created services can still be accessed 
via the standard document literal interfaces. </P></DIV></BODY></HTML>
