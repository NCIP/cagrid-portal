<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><TITLE>Using Custom or Pre-Existing Java Beans</TITLE>
<META http-equiv=Content-Type content="text/html; charset=utf-8"><LINK 
href="../Theme/lf.css" type=text/css rel=stylesheet><LINK 
href="../LinksExt/C1H_HTML.css" type=text/css rel=stylesheet><LINK 
href="../LinksExt/Introduce.css" type=text/css rel=stylesheet>
<META content="MSHTML 6.00.6000.16609" name=GENERATOR></HEAD>
<BODY 
style="PADDING-RIGHT: 0px; PADDING-LEFT: 10px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; BACKGROUND-COLOR: transparent" 
relPart="../">
<DIV class=d2h_secondary_topic 
style="PADDING-RIGHT: 0pt; PADDING-LEFT: 0pt; PADDING-BOTTOM: 10pt; MARGIN: 0pt; PADDING-TOP: 0pt">
<H5><A name=Using_Custom_or_Pre-Existing_Java_Beans></A>Using Custom or 
Pre-Existing Java Beans<FONT style="FONT-WEIGHT: normal"></FONT></H5>
<P class=msonormal>Once a namespace and corresponding data types have been 
imported into the service each data type can be further customized. For a 
particular data type one can chose to use a Custom Java Bean that already exists 
instead of having Introduce create the java beans for the service. This can be 
accomplished by selecting the <B><I>Configure Types</I></B> tab in the Types tab 
and then the <B><I>+</I></B> button beside the <I>Customize Bean</I> label. This 
will drop down the customization panel for that particular data type. In this 
panel, to support using a custom bean for the selected data type definition, the 
developer must fill out the three fields: the classname of the bean to be used 
(make sure the package name above matches the package name being entered for the 
custom beans classname), the deserializer factory class, and the serializer 
factory class. For more information on using custom serialization or what it 
means to be a custom bean please refer to the most recent Globus documentation 
on <I>type mapping</I>. </P></DIV></BODY></HTML>
