<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><TITLE>Importing Data Types</TITLE>
<META http-equiv=Content-Type content="text/html; charset=utf-8"><LINK 
href="../Theme/lf.css" type=text/css rel=stylesheet><LINK 
href="../LinksExt/C1H_HTML.css" type=text/css rel=stylesheet><LINK 
href="../LinksExt/Introduce.css" type=text/css rel=stylesheet>
<META content="MSHTML 6.00.6000.16609" name=GENERATOR></HEAD>
<BODY 
style="PADDING-RIGHT: 0px; PADDING-LEFT: 10px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; BACKGROUND-COLOR: transparent" 
relPart="../">
<DIV class=d2h_secondary_topic 
style="PADDING-RIGHT: 0pt; PADDING-LEFT: 0pt; PADDING-BOTTOM: 10pt; MARGIN: 0pt; PADDING-TOP: 0pt">
<H4><A name=Importing_Data_Types></A>Importing Data Types</H4>
<P class=msonormal>Using the GDE, developers can obtain the data types that they 
want to use for operation input parameters and return types from any data type 
discovery plug-in. Utilizing common and standard data types, which are defined 
outside of any application-specific service, enables the creation of strongly 
typed grid service interfaces. This increases service-to-service 
interoperability. Once a data type is chosen through the GDE, the data type 
definition is retrieved, written into the <I>schema/&lt;service_name&gt;</I> 
location of the service, and imported for use in the service WSDL description so 
that Java beans can be generated and the data types can be programmatically 
used. </P>
<P class=msonormal>The Introduce toolkit comes with a set of pre-installed 
discovery plug-ins, such as the Mobius GME and a basic file system browser, 
which can be used to locate and import schemas. The GME plug-in enables 
developers to browse, upload, and download schemas published in a GME. These 
schemas represent the valid data types which can be used during service 
creation. Using the GME plug-in, a developer can take a schema, create an 
editable view of the schema, and then submit the schema to the GME. If the 
namespace of the schema is not managed by the GME, to which the schema is 
submitted, the plug-in will attempt to add the namespace to the GME before 
submitting the schema. Once the schema has been uploaded, it can be used by 
anyone in the Grid through the Introduce toolkit. The GME plug-in browser window 
enables browsing through all the GME published types by namespace and schema 
name. It presents the user a quick view of the schema and the option to download 
the schema bundle. The schema bundle contains the schema and all other schemas 
which are referenced by that schema. </P>
<P class=msonormal>When importing a data types there are several options in 
where to acquire the data type definitions. Introduce is build in with the 
following data type definition tools, however, this is a pluggable piece of 
Introduce. Once a data type is imported using an import tool that data type can 
be customized for the generation of Java Beans. If you select data type on the 
left you will see in the lower left panel that the namespace and package name 
have been listing. This is called the namespace to package map. This will 
determine the package name of the Java Beans that get created for the data type. 
Feel free to alter the package name if the Introduce suggested package name does 
not work well. </P>
<P class=msonormal 
style="MARGIN-LEFT: 36pt; TEXT-INDENT: -18pt; tab-stops: 36.0pt">•&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<I>File System Data Type Importing</I> </P>
<P class=msonormal style="MARGIN-LEFT: 36pt">The File System tab of the Import 
Data Types Panel enables the developer to load in schemata which contain data 
types they wish to use the service from the local filesystem. The developer can 
browse to choose the schema they wish to import, and the click the add button. 
Once the add button is clicked the schema and any locally included or imported 
schemata will be copied to the services schema location in the 
<I>schema/&lt;service name&gt;</I> directory. </P>
<P class=msonormal 
style="MARGIN-LEFT: 36pt; TEXT-INDENT: -18pt; tab-stops: 36.0pt">•&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<I>Global Model Exchange Data Type Importing</I> </P>
<P class=msonormal style="MARGIN-LEFT: 36pt">The Global Model Exchange Data Type 
extension enables browsing for schemata from a remote grid service which is 
responsible for storing them. Introduce can connect to a GME and load in all the 
available namespaces the GME is storing schemata for. Once the developer selects 
a namespace the name drop down will be populated with all the available schema 
names for that schema. Once a namespace and name have been selected then user 
can select the add button and the schema and any imported schemata will be 
downloaded and imported into the service. The main <I>Configuration</I> menu at 
at the top for the GDE will contain the ability for changing the location of the 
GME to use. </P>
<P class=msonormal 
style="MARGIN-LEFT: 36pt; TEXT-INDENT: -18pt; tab-stops: 36.0pt">•&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
<I>Globus Data Types Importing</I> </P>
<P class=msonormal style="MARGIN-LEFT: 36pt">The Globus Data Types extension 
enable the developer to import schema from the Globus toolkit into their 
service. There is a drop down containing a list of the available schemata from 
the current installation of the Globus Tooolkit. Once a namespace has been 
selected and the add button has been selected then the schema will be added to 
the service's available data types list. </P>
<P class=relatedhead>More:</P>
<P class=msonormal>
<OBJECT classid=java:com.sun.java.help.impl.JHSecondaryViewer><PARAM NAME="content" VALUE="reimportingamodifieddatatype.htm"><PARAM NAME="viewerActivator" VALUE="javax.help.LinkLabel"><PARAM NAME="viewerStyle" VALUE="javax.help.Secondary"><PARAM NAME="viewerSize" VALUE="315,500"><PARAM NAME="viewerLocation" VALUE="680,10"><PARAM NAME="textFontWeight" VALUE="plain"><PARAM NAME="textFontStyle" VALUE="plain"><PARAM NAME="text" VALUE="Re-Importing a Modified Data Type"><PARAM NAME="iconByName" VALUE="../button.gif"></OBJECT></P>
<P class=msonormal>
<OBJECT classid=java:com.sun.java.help.impl.JHSecondaryViewer><PARAM NAME="content" VALUE="usingcustomorpreexistingjavabeans.htm"><PARAM NAME="viewerActivator" VALUE="javax.help.LinkLabel"><PARAM NAME="viewerStyle" VALUE="javax.help.Secondary"><PARAM NAME="viewerSize" VALUE="315,500"><PARAM NAME="viewerLocation" VALUE="680,10"><PARAM NAME="textFontWeight" VALUE="plain"><PARAM NAME="textFontStyle" VALUE="plain"><PARAM NAME="text" VALUE="Using Custom or Pre-Existing Java Beans"><PARAM NAME="iconByName" VALUE="../button.gif"></OBJECT></P></DIV></BODY></HTML>
