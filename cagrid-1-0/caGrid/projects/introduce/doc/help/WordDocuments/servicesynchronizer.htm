<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><TITLE>Service Synchronizer</TITLE>
<META http-equiv=Content-Type content="text/html; charset=utf-8"><LINK 
href="../Theme/nav.css" type=text/css rel=stylesheet><LINK 
href="../LinksExt/C1H_HTML.css" type=text/css rel=stylesheet><LINK 
href="../LinksExt/Introduce.css" type=text/css rel=stylesheet>
<META content="MSHTML 6.00.6000.16609" name=GENERATOR></HEAD>
<BODY 
style="PADDING-RIGHT: 0px; PADDING-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-TOP: 0px; BACKGROUND-COLOR: transparent" 
relPart="../">
<DIV id=nsbanner 
style="PADDING-RIGHT: 0px; PADDING-LEFT: 0px; LEFT: 0px; PADDING-BOTTOM: 0px; PADDING-TOP: 0px">
<DIV id=TitleRow 
style="PADDING-RIGHT: 10px; PADDING-LEFT: 22px; PADDING-BOTTOM: 4px; WIDTH: 100%; PADDING-TOP: 4px">
<DIV id=ienav>
<P class=linknav align=left><A class=d2hpreviousenabled id=D2HPrevious 
href="servicecreator.htm"><IMG alt=Previous 
src="../Images/Theme/ButtonsAndIcons/nav_prev.gif" align=absMiddle border=0></A> 
&nbsp; <A class=d2hnextenabled id=D2HNext href="servicedeployer.htm"><IMG 
alt=Next src="../Images/Theme/ButtonsAndIcons/nav_next.gif" align=absMiddle 
border=0></A> </P></DIV></DIV></DIV>
<DIV class=d2h_main_nstext id=nstext 
style="PADDING-RIGHT: 10px; PADDING-LEFT: 22px; PADDING-BOTTOM: 10px; PADDING-TOP: 5px" 
valign="bottom">
<DIV class=d2h_breadcrumbs id=d2h_breadcrumbs><FONT 
class=d2h_breadcrumbsselected>Service Synchronizer</FONT></DIV>
<H1><A name=_Toc192911895></A><A name=_Toc192301206></A><A 
name=Service_Synchronizer></A>Service Synchronizer</H1>
<P class=msonormal><A title='"Introduce Synchronization Framework" ' 
href="http://www.cagrid.org/wiki/Image:Introduce-SyncToolsDetailed.jpg"><FONT 
style="TEXT-DECORATION: none; text-underline: none"><IMG height=573 
alt="Introduce Synchronization Framework" src="../ImagesExt/image9_15.jpg" 
width=600 border=0 v:shapes="Picture_x0020_2"></FONT></A></P>
<P class=msonormal><A title='"Enlarge" ' 
href="http://www.cagrid.org/wiki/Image:Introduce-SyncToolsDetailed.jpg"><FONT 
style="TEXT-DECORATION: none; text-underline: none"><IMG height=11 alt=Enlarge 
src="../ImagesExt/image9_2.png" width=15 border=0 
v:shapes="Picture_x0020_3"></FONT></A></P>
<P class=msonormal>Introduce Synchronization Framework</P>
<P class=msonormal>Service resynchronization is the process by which the source 
code and configuration generation tools of the Introduce toolkit will analyze 
the service’s current implementation with that of the desired service 
description. This process will add, remove, and modify any service methods, 
resource properties, and service settings which have been added, removed, or 
modified from the service description. The descriptions and configurations for 
methods, metadata, and security are those that are generated from the GDE, 
programmatically or by hand, and that can be validated by the Introduce service 
schema<A 
title=http://www.cagrid.org/mwiki/index.php?title=Introduce:Documentation_Version_1.1_TechnicalGuide#Introduce_Model 
href="http://www.cagrid.org/mwiki/index.php?title=Introduce:Documentation_Version_1.1_TechnicalGuide#Introduce_Model">[1]</A>. 
The service description is the basis by which the code generation tools add, 
remove and modify operations, metadata, and change the security configuration of 
the service by editing the source code, configuration files, and metadata files. 
This is similar to the way that Axis will use the WSDL to generate the grid 
stubs of the service. The overall high level process of service 
resynchronization is illustrated below. </P>
<P class=msonormal>In this process, modified documents created by the GDE are 
processed using JET templates to create the modified service skeleton. The 
service synchronizer component manages the service WSDL description. If a 
service or method has been added or removed, the respective WSDL files must be 
updated to reflect the changes. Updating the files requires many auto generated 
code segments. External XML schemas, which describe published data types, must 
be imported into the respective WSDL files so that the data types can be located 
and used to generate the required Java beans and SOAP bindings. The WSDL 
description is basically the Grid layer representation of the Java based service 
interface. Both the message types, which represent the data types of the input 
parameters and the return type of a service method, and the complete operation, 
which reflects the Java based signature of the method being exposed, have to be 
described in the WSDL file. The synchronization operation automatically keeps 
this file in sync during the development of services so that the service 
implementation and the Grid service description represented by the WSDL match 
up. This ensures that the methods implemented in the Grid service can actually 
be invoked. </P>
<P class=msonormal><A title='"Introduce Generated Skeleton" ' 
href="http://www.cagrid.org/wiki/Image:Introduce-SkeletonLayoutHighLevel.jpg"><FONT 
style="TEXT-DECORATION: none; text-underline: none"><IMG height=329 
alt="Introduce Generated Skeleton" src="../ImagesExt/image9_16.jpg" width=600 
border=0 v:shapes="Picture_x0020_4"></FONT></A></P>
<P class=msonormal><A title='"Enlarge" ' 
href="http://www.cagrid.org/wiki/Image:Introduce-SkeletonLayoutHighLevel.jpg"><FONT 
style="TEXT-DECORATION: none; text-underline: none"><IMG height=11 alt=Enlarge 
src="../ImagesExt/image9_2.png" width=15 border=0 
v:shapes="Picture_x0020_5"></FONT></A></P>
<P class=msonormal>Introduce Generated Skeleton</P>
<P class=msonormal>The figure above shows a basic service layout as created by 
the Introduce Service Creator component. It shows which pieces of this example 
service are generated by the code generation tools, which pieces are built by 
the underlying Globus/Axis tools, and which pieces are to be implemented by the 
service developer. </P>
<P class=msonormal><A title='"Introduce Generated Grid Service Source Code" ' 
href="http://www.cagrid.org/wiki/Image:Introduce-SkeletonLayoutSouceCode.jpg"><FONT 
style="TEXT-DECORATION: none; text-underline: none"><IMG height=335 
alt="Introduce Generated Grid Service Source Code" 
src="../ImagesExt/image9_17.jpg" width=600 border=0 
v:shapes="Picture_x0020_6"></FONT></A></P>
<P class=msonormal><A title='"Enlarge" ' 
href="http://www.cagrid.org/wiki/Image:Introduce-SkeletonLayoutSouceCode.jpg"><FONT 
style="TEXT-DECORATION: none; text-underline: none"><IMG height=11 alt=Enlarge 
src="../ImagesExt/image9_2.png" width=15 border=0 
v:shapes="Picture_x0020_7"></FONT></A></P>
<P class=msonormal>Introduce Generated Grid Service Source Code</P>
<P class=msonormal>The figure above describes what some particularly critical 
source files are generated for in an example service created by the Introduce 
engine. When a WSDL file is parsed by the Axis engine a PortType interface is 
created which is the Java representation of the API of the grid service. The 
Axis generated PortType interface must then be implemented on the service to 
provide the services implementation. In order to enable the service developer to 
implement a cleaner, non-documument literal interface, Introduce will 
automatically create the implementation of this PortType interface 
(HelloWorldProviderImpl). The Introduced generated implementation of this 
interface will unbox the document literal calls ot the service and pass them on 
to the unboxed/clean interface (HelloWorldI) which the user defined. Introduce 
will generate a stubbed implementation of this interface (HelloWorldImpl) which 
the user will be responsible for implementing. This class will maintain the 
services implementation of the methods. This enables the service designer to be 
shielded from the details of the Axis document literal grid service interface 
and enable them to implement an interface which is as then originally described. 
The figure also illustrates the example service’s resource and resource home, 
which are generated to manage the service resource and the service resource 
properties, respectively. </P>
<P class=msonormal>&nbsp;</P>
<P class=msonormal><A title='"Introduce Generated Configuration File" ' 
href="http://www.cagrid.org/wiki/Image:Introduce-SkeletonLayoutConfigFiles.jpg"><FONT 
style="TEXT-DECORATION: none; text-underline: none"><IMG height=345 
alt="Introduce Generated Configuration File" src="../ImagesExt/image9_18.jpg" 
width=600 border=0 v:shapes="Picture_x0020_8"></FONT></A></P>
<P class=msonormal><A title='"Enlarge" ' 
href="http://www.cagrid.org/wiki/Image:Introduce-SkeletonLayoutConfigFiles.jpg"><FONT 
style="TEXT-DECORATION: none; text-underline: none"><IMG height=11 alt=Enlarge 
src="../ImagesExt/image9_2.png" width=15 border=0 
v:shapes="Picture_x0020_9"></FONT></A></P>
<P class=msonormal>Introduce Generated Configuration File</P>
<P class=msonormal>The figure above shows the use of the different common files 
of an example Introduce created service. It shows the files used for configuring 
registration and security for the grid service, as well as those used by 
Introduce for synchronization, and those used for build and deployment. This 
example service created by Introduce also contains Eclipse project files so that 
the service can easily be edited using the Eclipse platform (www.eclipse.org). 
The service can have an inheritance model by adding methods from another 
service; possibly along with the implementations of those methods (see Section 
0). If a method were imported from another Grid service, the service 
synchronizer component would also pull in the WSDL description of the method and 
copy it into the portType of the new service. This enables the service to have a 
completely protocol compatible implementation of the method. 
</P></DIV></BODY></HTML>
