<HTML>
<HEAD>
 <TITLE>Auto-Boxing/Unboxing of Service Operations</TITLE>
 <META NAME="generator" CONTENT="Adobe RoboHelp - www.adobe.com">
</HEAD>
<BODY style="font-family:'Arial'; font-size:12pt;  background-color:white;">
 <div id='NavBar' STYLE='text-align:right;' align='right'><nobr><font size=1 color='#c0c0c0' style='font-size:9pt;' ><a href='other_features_of_the_introduce_engine.htm'><img src='../bsscnav4.gif' width=27 height=19 border=no></a><a href='resource_framework.htm'><img src='../bsscnav5.gif' width=27 height=19 border=no></a></font>&nbsp;&nbsp;&nbsp;</nobr>
 </div>
 <H1 align="left"  style="font-size:12pt;margin-left:5.75pt;margin-right:6.50pt;margin-top:6.00pt;margin-bottom:2.00pt;text-align:left;" ><B><FONT size=3  style="font-family:'Arial'; font-size:12pt; font-weight:bold; " >Auto-Boxing/Unboxing of Service Operations</FONT></B></H1>
 <P align="left"  style="margin-left:5.75pt;margin-right:6.50pt;margin-top:4.00pt;margin-bottom:0.00pt;text-align:left;" >&nbsp;</P>
 <P align="left"  style="margin-left:5.75pt;margin-right:6.50pt;margin-top:4.00pt;margin-bottom:0.00pt;text-align:left;" >&nbsp;</P>
 <P  style="margin-top:0.00pt;margin-bottom:0.00pt;" ><IMG src="../image/ebx_511689046.jpg" border=0 height=534 width=397 alt="image\ebx_511689046.jpg"></P>
 <P  style="margin-top:0.00pt;margin-bottom:0.00pt;" ><FONT size=3  style="font-family:'Arial'; font-size:12pt; " >Introduce Generated Client Layers</FONT></P>
 <P  style="margin-top:0.00pt;margin-bottom:0.00pt;" >&nbsp;</P>
 <P align="left"  style="margin-top:5.00pt;margin-bottom:5.00pt;text-align:left;" ><FONT size=3  style="font-size:12pt; " >Grid service code generation and synchronization is one of the most complicated code generation operations in the toolkit. This component has to re-write the basic source code of the service so that the client and the server both agree on the newly modified interface as designed by the service creator. It also has to deal with associating the server side implementation of the service designer's interface to the actual port type generated by Globus via Axis. The overall process is complicated due to fact that GT/Axis use document literal bindings to create the services portType and bindings to SOAP. For example, if a user describes a new method as shown below: </FONT><I><FONT size=3  style="font-size:12pt; font-style:italic; " >int foo(int bar1, int bar2);</FONT></I><FONT size=3  style="font-size:12pt; " > </FONT></P>
 <P align="left"  style="margin-top:5.00pt;margin-bottom:5.00pt;text-align:left;" ><FONT size=3  style="font-size:12pt; " >The port type method that will be created for the corresponding Java interface call will look like the one below: </FONT><I><FONT size=3  style="font-size:12pt; font-style:italic; " >FooReturn foo(FooParameters params);</FONT></I><FONT size=3  style="font-size:12pt; " > </FONT></P>
 <P align="left"  style="margin-top:5.00pt;margin-bottom:5.00pt;text-align:left;" ><FONT size=3  style="font-size:12pt; " >This style is known as document literal binding. This boxing or wrapping of the parameters and the return type of the service method can be confusing to the service user and service developer to deal with, especially since this document literal style is exposed directly through the client API or the service implementation API. Every client using the service will have to box up the parameters to call the operations of the service and un-box the results. Not only will this task be cumbersome for service users, but the document literal interface is not the interface that the service designer intended to be provided to its users. The Introduce toolkit will hide the boxing and un-boxing of methods by providing an interface to the service, which looks exactly as described by the service developer and not as interpreted by Globus via Axis. </FONT></P>
 <P align="left"  style="margin-top:5.00pt;margin-bottom:5.00pt;text-align:left;" ><FONT size=3  style="font-size:12pt; " >In order to do this, the toolkit creates a wrapping layer in the client and service which both implement the clean interface (non document literal). These wrapper layers auto-box and un-box and map the calls from the clean client to the document literal port type client generated by Globus/Axis and visa versa for the service. It is worth noting that the move to document literal binding was made in the GT for interoperability reasons, as the more developer-friendly APIs provided by Introduce, and previously provided by GT, are not standardized and that Introduce created services can still be accessed via the standard document literal interfaces. </FONT></P>
</BODY>
</HTML>