<HTML>
<HEAD>
 <TITLE>Service Properties</TITLE>
 <META NAME="generator" CONTENT="Adobe RoboHelp - www.adobe.com">
</HEAD>
<BODY style="font-family:'Arial'; font-size:12pt;  background-color:white;">
 <div id='NavBar' STYLE='text-align:right;' align='right'><nobr><font size=1 color='#c0c0c0' style='font-size:9pt;' ><a href='resource_properties.htm'><img src='../bsscnav4.gif' width=27 height=19 border=no></a><a href='security.htm'><img src='../bsscnav5.gif' width=27 height=19 border=no></a></font>&nbsp;&nbsp;&nbsp;</nobr>
 </div>
 <H1 align="left"  style="font-size:12pt;margin-left:5.75pt;margin-right:6.50pt;margin-top:6.00pt;margin-bottom:2.00pt;text-align:left;" ><B><FONT size=3  style="font-family:'Arial'; font-size:12pt; font-weight:bold; " >Service Properties</FONT></B></H1>
 <P align="left"  style="margin-top:5.00pt;margin-bottom:5.00pt;text-align:left;" ><FONT size=3  style="font-size:12pt; " >Service properties are key value pairs which can be set at deployment time and are available to the server side implementation of the service at run time. This enables passing in configuration variables to the server side of the service at deployment. These key value pair properties can be declared in &quot;Service Properties&quot; tab of the GDE Service Modification interface. Once the &quot;Service Properties&quot; tab is clicked the main panel will show a table of the service properties. The bottom panel has an entry for which can be used to create a new service property. The properties will be confirmed and/or can be changed from there default values at service deployment time. The variables can then be accessed inside the user's implementation of the operations through the services </FONT><I><FONT size=3  style="font-size:12pt; font-style:italic; " >ServiceConfiguration</FONT></I><FONT size=3  style="font-size:12pt; " > class. For example, if you add a property called </FONT><I><FONT size=3  style="font-size:12pt; font-style:italic; " >foo</FONT></I><FONT size=3  style="font-size:12pt; " > under the service properties tab, and then save the service. Then go look at the source code for the &lt;service package&gt;.service.ServiceConfiguration.java class you will seee that it now has available methods for </FONT><I><FONT size=3  style="font-size:12pt; font-style:italic; " >string getFoo()</FONT></I><FONT size=3  style="font-size:12pt; " > and </FONT><I><FONT size=3  style="font-size:12pt; font-style:italic; " >void setFoo(string foo)</FONT></I><FONT size=3  style="font-size:12pt; " >. These operations are now available to your service and can be used to pass properties into your service at deployment time as well as other users for configuring and sharing properties in your service. The &lt;service package&gt;.service.ServiceConfiguration.java contains a static method for obtaining an instance of itself called </FONT><I><FONT size=3  style="font-size:12pt; font-style:italic; " >getConfiguration()</FONT></I><FONT size=3  style="font-size:12pt; " >. Any call to that from anywhere in the service will return the handle to the </FONT><I><FONT size=3  style="font-size:12pt; font-style:italic; " >ServiceConfiguration</FONT></I><FONT size=3  style="font-size:12pt; " > instance and hence access to the service properties. </FONT></P>
</BODY>
</HTML>