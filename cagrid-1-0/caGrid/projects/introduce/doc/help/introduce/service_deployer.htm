<HTML>
<HEAD>
 <TITLE>Service Deployer</TITLE>
 <META NAME="generator" CONTENT="Adobe RoboHelp - www.adobe.com">
</HEAD>
<BODY style="font-family:'Arial'; font-size:12pt;  background-color:white;">
 <div id='NavBar' STYLE='text-align:right;' align='right'><nobr><font size=1 color='#c0c0c0' style='font-size:9pt;' ><a href='service_synchronizer.htm'><img src='../bsscnav4.gif' width=27 height=19 border=no></a><a href='other_features_of_the_introduce_engine.htm'><img src='../bsscnav5.gif' width=27 height=19 border=no></a></font>&nbsp;&nbsp;&nbsp;</nobr>
 </div>
 <H1 align="left"  style="font-size:12pt;margin-left:5.75pt;margin-right:6.50pt;margin-top:6.00pt;margin-bottom:2.00pt;text-align:left;" ><B><FONT size=3  style="font-family:'Arial'; font-size:12pt; font-weight:bold; " >Service Deployer</FONT></B></H1>
 <P align="left"  style="margin-top:5.00pt;margin-bottom:5.00pt;text-align:left;" ><FONT size=3  style="font-size:12pt; " >The service deployment features of Introduce currently support deploying Grid services to a Globus or Tomcat container. The deployment framework can easily be extended to provide deployment capability to other Web Service containers. It utilizes the layout of the Grid Archive (GAR) structure to organize and package a deployable service. Once the GAR for a service is generated by the deployment framework, the GAR can be utilized to deploy the service to the appropriate container. The deployment framework also allows for deployment time service properties to be acquired from the application developer or the user deploying the service. These custom service properties allow a service creator to define configurable options that make sense for a particular deployment of the service to have control over. When the service is deployed, the deployer prompts for the desired values, presenting service developer provided defaults. The supplied values are then made available to the service at runtime. For example, if a service implementation accesses a local database, the username and password of the database can be specified as service properties. This allows a very convenient way for those deploying the service to configure it appropriately for their environment, without requiring knowledge of how the grid service implements these configuration points. The deployment process first populates files required in deployment (e.g., the WSDD and JNDI of the service) to specify such values as service deployment path or security configuration file locations. It then gathers the library files required for the service as well as those library files which contain the actual runtime code of the service. All configuration files and service resources are also collected. Finally, a GAR file is generated for this service. Once the GAR file has been generated, it can be handed off to the particular deployment handler for the required container to be used for this deployment. </FONT></P>
</BODY>
</HTML>