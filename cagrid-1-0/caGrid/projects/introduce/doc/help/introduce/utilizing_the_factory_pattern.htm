<HTML>
<HEAD>
 <TITLE>Utilizing the Factory Pattern</TITLE>
 <META NAME="generator" CONTENT="Adobe RoboHelp - www.adobe.com">
</HEAD>
<BODY style="font-family:'Arial'; font-size:12pt;  background-color:white;">
 <div id='NavBar' STYLE='text-align:right;' align='right'><nobr><font size=1 color='#c0c0c0' style='font-size:9pt;' ><a href='service_contexts.htm'><img src='../bsscnav4.gif' width=27 height=19 border=no></a><a href='implementing_the_service.htm'><img src='../bsscnav5.gif' width=27 height=19 border=no></a></font>&nbsp;&nbsp;&nbsp;</nobr>
 </div>
 <H1 align="left"  style="font-size:12pt;margin-left:5.75pt;margin-right:6.50pt;margin-top:6.00pt;margin-bottom:2.00pt;text-align:left;" ><B><FONT size=3  style="font-family:'Arial'; font-size:12pt; font-weight:bold; " >Utilizing the Factory Pattern</FONT></B></H1>
 <P  style="margin-top:0.00pt;margin-bottom:0.00pt;" ><FONT size=3  style="font-size:12pt; " >Link to the entire example service source code described below</FONT><FONT size=3  style="font-size:12pt; " > </FONT><FONT size=3  style="font-size:12pt; " > (</FONT><U><FONT size=3 color=blue  style="font-size:12pt; color:blue; text-decoration:underline;" >https://project.bmi.ohio-state.edu/gf/download/frsrelease/106/278/CounterServiceExample.zip</FONT></U><FONT size=3  style="font-size:12pt; " >)</FONT></P>
 <P  style="margin-top:0.00pt;margin-bottom:0.00pt;" ><IMG src="../image/ebx_-2093395466.jpg" border=0 height=501 width=666 alt="image\ebx_-2093395466.jpg"></P>
 <P align="left"  style="margin-left:5.75pt;margin-right:6.50pt;margin-top:4.00pt;margin-bottom:0.00pt;text-align:left;" ><FONT size=3  style="font-family:'Arial'; font-size:12pt; " >Utilizing Grid Service Factory Pattern</FONT></P>
 <P align="left"  style="margin-top:5.00pt;margin-bottom:5.00pt;text-align:left;" ><FONT size=3  style="font-size:12pt; " >In order to create instances of a resource something must tell the resource home of the service to create them. This is typically done using the factory pattern. A service or method is responsible for telling the resource to create a new instance of a resource type for the service. An example of the factory pattern in action is show it the image above. A factory service, the Counter Grid Service, contains a create operation which is exposed as a grid service method. When the client invokes this method the Counter Grid Service will locate the resource home of the Counter Context Grid Service and ask it to create a new resource instance. Once this resource </FONT><FONT size=3  style="font-size:12pt; " >instance</FONT><FONT size=3  style="font-size:12pt; " > is created the resource home will return a pointer or address to this resource instance called an EndPointReference (EPR). This EPR is then returned from the create method back to the client so that it has a pointer to these new resource that it can act on. </FONT></P>
 <P align="left"  style="margin-top:5.00pt;margin-bottom:5.00pt;text-align:left;" ><FONT size=3  style="font-size:12pt; " >In order to act on this resource it will need to construct a client which can talk to the grid service which represents this resource type. The Counter Context Client will be constructed using the EPR to address the specific resource context for the service. Next the user would like to call the </FONT><I><FONT size=3  style="font-size:12pt; font-style:italic; " >incrementCounter()</FONT></I><FONT size=3  style="font-size:12pt; " > operation on the Counter Context Grid Service. The client will make the call to the grid service and the service will then look at the EPR sent over by the client. The service will then take the EPR and give it to the resource home and ask for the resource instance back which is represented by the particular EPR. The service will run </FONT><FONT size=3  style="font-size:12pt; " >its</FONT><FONT size=3  style="font-size:12pt; " > logic to increment the counter, which in this case is represented as a resource property of the resource. </FONT></P>
 <P  style="margin-top:0.00pt;margin-bottom:0.00pt;" ><IMG src="../image/ebx_794874518.jpg" border=0 height=390 width=666 alt="image\ebx_794874518.jpg"></P>
 <P align="left"  style="margin-left:5.75pt;margin-right:6.50pt;margin-top:4.00pt;margin-bottom:0.00pt;text-align:left;" ><FONT size=3  style="font-family:'Arial'; font-size:12pt; " >Invoking a Statefull Grid Services</FONT></P>
 <P align="left"  style="margin-top:5.00pt;margin-bottom:5.00pt;text-align:left;" ><FONT size=3  style="font-size:12pt; " >Below shows an example of the code that would be required to implement the </FONT><I><FONT size=3  style="font-size:12pt; font-style:italic; " >incrementCounter()</FONT></I><FONT size=3  style="font-size:12pt; " > method in the CounterContextServiceImpl.java. </FONT></P>
 <P align="left"  style="margin-top:0.00pt;margin-bottom:0.00pt;text-align:left;" >&nbsp;</P>
 <P align="left"  style="margin-top:0.00pt;margin-bottom:0.00pt;text-align:left;" ><FONT size=3  style="font-family:'Courier New'; font-size:12pt; " >package example.counter.context.service;</FONT></P>
 <P align="left"  style="margin-top:0.00pt;margin-bottom:0.00pt;text-align:left;" >&nbsp;</P>
 <P align="left"  style="margin-top:0.00pt;margin-bottom:0.00pt;text-align:left;" ><FONT size=3  style="font-family:'Courier New'; font-size:12pt; " >import java.rmi.RemoteException;</FONT></P>
 <P align="left"  style="margin-top:0.00pt;margin-bottom:0.00pt;text-align:left;" >&nbsp;</P>
 <P align="left"  style="margin-top:0.00pt;margin-bottom:0.00pt;text-align:left;" >&nbsp;</P>
 <P align="left"  style="margin-top:0.00pt;margin-bottom:0.00pt;text-align:left;" ><FONT size=3  style="font-family:'Courier New'; font-size:12pt; " >/**</FONT></P>
 <P align="left"  style="margin-top:0.00pt;margin-bottom:0.00pt;text-align:left;" ><FONT size=3  style="font-family:'Courier New'; font-size:12pt; " > * TODO:I am the service side implementation class. IMPLEMENT AND DOCUMENT ME</FONT></P>
 <P align="left"  style="margin-top:0.00pt;margin-bottom:0.00pt;text-align:left;" ><FONT size=3  style="font-family:'Courier New'; font-size:12pt; " > * </FONT></P>
 <P align="left"  style="margin-top:0.00pt;margin-bottom:0.00pt;text-align:left;" ><FONT size=3  style="font-family:'Courier New'; font-size:12pt; " > * @created by Introduce Toolkit version 1.1</FONT></P>
 <P align="left"  style="margin-top:0.00pt;margin-bottom:0.00pt;text-align:left;" ><FONT size=3  style="font-family:'Courier New'; font-size:12pt; " > */</FONT></P>
 <P align="left"  style="margin-top:0.00pt;margin-bottom:0.00pt;text-align:left;" ><FONT size=3  style="font-family:'Courier New'; font-size:12pt; " >public class CounterContextImpl extends CounterContextImplBase {</FONT></P>
 <P align="left"  style="margin-top:0.00pt;margin-bottom:0.00pt;text-align:left;" >&nbsp;</P>
 <P align="left"  style="margin-top:0.00pt;margin-bottom:0.00pt;text-align:left;" ><FONT size=3  style="font-family:'Courier New'; font-size:12pt; " >    public CounterContextImpl() throws RemoteException {</FONT></P>
 <P align="left"  style="margin-top:0.00pt;margin-bottom:0.00pt;text-align:left;" ><FONT size=3  style="font-family:'Courier New'; font-size:12pt; " >        super();</FONT></P>
 <P align="left"  style="margin-top:0.00pt;margin-bottom:0.00pt;text-align:left;" ><FONT size=3  style="font-family:'Courier New'; font-size:12pt; " >    }</FONT></P>
 <P align="left"  style="margin-top:0.00pt;margin-bottom:0.00pt;text-align:left;" >&nbsp;</P>
 <P align="left"  style="margin-top:0.00pt;margin-bottom:0.00pt;text-align:left;" >&nbsp;</P>
 <P align="left"  style="margin-top:0.00pt;margin-bottom:0.00pt;text-align:left;" ><FONT size=3  style="font-family:'Courier New'; font-size:12pt; " >    public void incrementCounter() throws RemoteException {</FONT></P>
 <P align="left"  style="margin-top:0.00pt;margin-bottom:0.00pt;text-align:left;" ><FONT size=3  style="font-family:'Courier New'; font-size:12pt; " >        int currentCounter;</FONT></P>
 <P align="left"  style="margin-top:0.00pt;margin-bottom:0.00pt;text-align:left;" ><FONT size=3  style="font-family:'Courier New'; font-size:12pt; " >        try {</FONT></P>
 <P align="left"  style="margin-top:0.00pt;margin-bottom:0.00pt;text-align:left;" ><FONT size=3  style="font-family:'Courier New'; font-size:12pt; " >            currentCounter = getResourceHome().getAddressedResource().getIntValue();</FONT></P>
 <P align="left"  style="margin-top:0.00pt;margin-bottom:0.00pt;text-align:left;" >&nbsp;</P>
 <P align="left"  style="margin-top:0.00pt;margin-bottom:0.00pt;text-align:left;" ><FONT size=3  style="font-family:'Courier New'; font-size:12pt; " >            currentCounter++;</FONT></P>
 <P align="left"  style="margin-top:0.00pt;margin-bottom:0.00pt;text-align:left;" ><FONT size=3  style="font-family:'Courier New'; font-size:12pt; " >            getResourceHome().getAddressedResource().setIntValue(currentCounter);</FONT></P>
 <P align="left"  style="margin-top:0.00pt;margin-bottom:0.00pt;text-align:left;" ><FONT size=3  style="font-family:'Courier New'; font-size:12pt; " >        } catch (Exception e) {</FONT></P>
 <P align="left"  style="margin-top:0.00pt;margin-bottom:0.00pt;text-align:left;" ><FONT size=3  style="font-family:'Courier New'; font-size:12pt; " >            e.printStackTrace();</FONT></P>
 <P align="left"  style="margin-top:0.00pt;margin-bottom:0.00pt;text-align:left;" ><FONT size=3  style="font-family:'Courier New'; font-size:12pt; " >        }</FONT></P>
 <P align="left"  style="margin-top:0.00pt;margin-bottom:0.00pt;text-align:left;" ><FONT size=3  style="font-family:'Courier New'; font-size:12pt; " >    }</FONT></P>
 <P align="left"  style="margin-top:0.00pt;margin-bottom:0.00pt;text-align:left;" >&nbsp;</P>
 <P align="left"  style="margin-top:0.00pt;margin-bottom:0.00pt;text-align:left;" ><FONT size=3  style="font-family:'Courier New'; font-size:12pt; " >}</FONT></P>
</BODY>
</HTML>