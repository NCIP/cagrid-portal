



=======================================================
 METADATA STUFF
=======================================================
Metadata xmlfile:
----------
schematype AttGroup
populateFromFile (boolean)
register (boolean)
Qname of RP
(derive instance filename from QName?)

what to template:
=====
type goes into serviceRPs in wsdl
qname goes into registration.xml if registerType is true
if loadFromFile is true derived instance path goes into jndi config
if loadFromFile is true add getter/setter to MDconfig.java
make callback for non-file metadata


templating details:

(DONE) ResourceConstants.java
----------
for each type (the QName is how the RP is identified... it doesn't have to be the schema QName as you can have several RPs for the same type(but we are gonna to use that for now)):
  public static final QName <upper case rp name>_MD_RP = new QName(<qname namespace>, <qname element name>);
Example:
  public static final QName COMMON_MD_RP = new QName("gme://caGrid.caBIG/1.0/gov.nih.nci.cagrid.metadata.common", "CommonServiceMetadata");


(DONE) BaseResource.java field definitions:
----------
for each type:
  private ResourceProperty <rp name>RP;
  private <bean class name> <rp name>MD;
Example:
  private ResourceProperty commonRP;
  private CommonServiceMetadataType commonMD;


(DONE) BaseResource.java initialize [public void initialize() throws Exception {]:
----------
for each type:
  this.<rp name>RP = new SimpleResourceProperty(ResourceConstants.<upper case rp name>_MD_RP);
  this.<rp name>RP.add(this.<rp name>MD);
  this.propSet.add(this.<rp name>RP);
Example:
  this.commonRP = new SimpleResourceProperty(ResourceConstants.COMMON_MD_RP);
  this.commonRP.add(this.commonMD);
  this.propSet.add(this.commonRP);


(DONE) BaseResource.java make a method for loading each type from a file (for those that should be synced from file):
----------
for each type, define a method to populate the bean:
	private void load<rp name>FromFile() {
		try {
			this.<rp name>MD = (<bean class name>) CommonTools.deserializeDocument(getConfiguration().get<rp name>File(),
				<bean class name>.class);
		} catch (Exception e) {
			logger.error("ERROR: problem populating metadata from file: " + e.getMessage(), e);
		}
	}
Example:
	private void loadCommonServiceMetadataFromFile() {
		try {
			this.commonMD = (CommonServiceMetadataType) CommonTools.deserializeDocument(getConfiguration().getCommonMetadataFile(),
				CommonServiceMetadataType.class);
		} catch (Exception e) {
			logger.error("ERROR: problem populating metadata from file: " + e.getMessage(), e);
		}
	}

(DONE) BaseResource.java add the population method to the populateMetadata method:
----------
for each type:
	private void populateMetadata() {
		load<rp name>FromFile(); 
	}
Example:
	private void populateMetadata() {
		loadCommonServiceMetadataFromFile(); 
	}

	
(DONE) MetadataConfigutation.java add a feild definition for the file location:
----------
for each type being loaded from a file:
	private String <rp name>File;
Example:
	private String commonServiceMetadataFile;


(DONE) MetadataConfigutation.java add a getter and setter for file location:
----------
for each type being loaded from a file:
	public String get<rp name>File() {
		return <rp name>File;
	}
	public void set<rp name>File(String <rp name>File) {
		this.<rp name>File = <rp name>File;
	}
Example:
	public String getCommonServiceMetadataFile() {
		return commonServiceMetadataFile;
	}
	public void setCommonServiceMetadataFile(String commonServiceMetadataFile) {
		this.commonServiceMetadataFile = commonServiceMetadataFile;
	}


(DONE) registration.xml add types to register:
----------
for each type that should be registered (if register is true), add the ns prefix to GetMultipleResourcePropertiesPollType element and QName to ResourcePropertyNames element:
      <agg:GetMultipleResourcePropertiesPollType ... >   
        <agg:ResourcePropertyNames xmlns:<rp qname namespace prefix>="<rp qname namespace>"><rp qname namespace prefix>:<rp qname name></agg:ResourcePropertyNames>
Example:
      <agg:GetMultipleResourcePropertiesPollType ... >   
        <agg:ResourcePropertyNames xmlns:com="gme://caGrid.caBIG/1.0/gov.nih.nci.cagrid.metadata.common">com:CommonServiceMetadata</agg:ResourcePropertyNames>


(DONE) serivce.wsdl add qnames into serviceRP definition in the schema section
----------
for each type, add a ref to the element def qname, and import statement to the local schema:
        <schema ...
            xmlns:<qname namespace prefix>="<rp qname namespace>"
            ... >
            <import namespace="<rp type namespace>"
                schemaLocation="<rp schema location>"/>
            <element name="<%=serviceName%>ResourceProperties">
                <complexType>
                    <sequence>
                        <element ref="<qname namespace prefix>:<qname name>"/>
                    </sequence>
                </complexType>
Example:
        <schema ...
            xmlns:com="gme://caGrid.caBIG/1.0/gov.nih.nci.cagrid.metadata.common"
            ... >
            <import namespace="gme://caGrid.caBIG/1.0/gov.nih.nci.cagrid.metadata.common"
                schemaLocation="../cagrid/types/common/CommonServiceMetadata.xsd"/>
            <element name="<%=serviceName%>ResourceProperties">
                <complexType>
                    <sequence>
                        <element ref="com:CommonServiceMetadata"/>
                    </sequence>
                </complexType>

(DONE)jndi-config.xml need to add a path to the file 
----------
for each that should be synced from file:
				<parameter>
					<name><rp name>File</name>
					<!-- Set this to the full path of the common metadata extract -->
					<value>FULL-ETC-PATH/<rp name>.xml</value>
				</parameter>

Example:
				<parameter>
					<name>commonMetadataFile</name>
					<!-- Set this to the full path of the common metadata extract -->
					<value>FULL-ETC-PATH/commonMetadata.xml</value>
				</parameter>



=======================================================