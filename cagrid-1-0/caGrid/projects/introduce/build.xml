<!-- ======================================================================= -->
<!-- caGrid build file                                                       -->
<!-- ======================================================================= -->
<project name="introduce" default="introduce" basedir=".">
	<!-- Environment -->
	<property environment="env" />
	<property file="${basedir}/build.properties" />
	<property file="${user.dir}/build.properties" />
	<!-- Information -->
	<property name="project.name" value="caGrid-introduce" />
	<property name="project.version" value="1.0" />
	<!-- Source, Config, and Libraries -->
	<property name="ext.dir" location="${basedir}/ext" />
	<property name="src.dir" location="${basedir}/src/java" />
	<property name="templates.src.dir" location="${basedir}/src/jettemplates" />
	<property name="templates.created.src.dir" location="${basedir}/src/java/Introduce/gov/nih/nci/cagrid/introduce/templates" />
	<property name="beans.created.src.dir" location="${basedir}/src/java/Introduce/gov/nih/nci/cagrid/introduce/beans" />
	<property name="lib.dir" location="${basedir}/lib" />
	<property name="ext.lib.dir" location="${ext.dir}/lib" />
	<property name="schema.dir" location="${basedir}/schema" />
	<property name="ext.schema.dir" location="${ext.dir}/schema" />
	<property name="ext.resources.dir" location="${ext.dir}/resources" />
	<property name="sde.schema.dir" location="${schema.dir}/types" />
	<property name="resources.dir" location="${basedir}/resources" />
	<!-- Generated stuff -->
	<property name="build.dir" location="${basedir}/build" />
	<property name="build.lib.dir" location="${build.dir}/jars" />
	<property name="classes.dir" location="${build.dir}/classes" />
	<property name="introduce.classes.dir" location="${classes.dir}/Introduce" />
	<property name="portal.classes.dir" location="${classes.dir}/Portal" />
	<property name="jars.dir" location="${build.dir}/jars" />
	<property name="project.jar" location="${jars.dir}/${project.name}-${project.version}.jar" />
	<property name="jars.prefix" value="${jars.dir}/${project.name}-" />
	<property name="jars.sufix" value="-${project.version}.jar" />
	<property name="junit.results.dir" value="${build.dir}/junit" />
	<property name="javadoc.dir" value="${build.dir}/javadoc" />
	<!-- testing stuff -->
	<property name="test.dir" location="${basedir}/test" />
	<property name="test.src.dir" location="${test.dir}/src/java" />
	<property name="test.classes.dir" location="${build.dir}/test_classes" />
	<property name="introduce.test.classes.dir" location="${test.classes.dir}/Introduce" />
	<property name="portal.test.classes.dir" location="${test.classes.dir}/Portal" />
	<property name="test.lib.dir" location="${test.dir}/lib" />
	<property name="ext.test.lib.dir" location="${ext.dir}/test/lib" />
	<property name="test.log.dir" location="${test.dir}/logs" />
	<property name="test.project.jar" location="${jars.dir}/${project.name}-tests-${project.version}.jar" />
	<!-- extensions stuff -->
	<property name="extensions.lib.dir" location="${basedir}/extensions/lib" />
	<!-- Load util files -->
	<property name="antfiles.dir" value="${basedir}/antfiles" />
	<import file="${antfiles.dir}/build-introduce.xml" />
	<import file="${antfiles.dir}/build-portal.xml" />
	<import file="${antfiles.dir}/introduce-utils.xml" />
	<!-- Load test files -->
	<import file="test/test.xml" />
	<!-- =================================================================== -->
	<!-- Cleans up generated stuff                                           -->
	<!-- =================================================================== -->
	<target name="clean">
		<delete dir="${build.dir}" />
		<delete dir="${templates.created.src.dir}" />
		<delete dir="${beans.created.src.dir}" />
	</target>
	
	<!-- ============================================================== -->
	<!-- Globus properties                                              -->
	<!-- ============================================================== -->
	<target name="checkGlobus" depends="setGlobus">
		<condition property="globus.not.found">
			<or>
				<not><isset property="ext.globus.dir"/></not>
				<equals arg1="${ext.globus.dir}" arg2=""/>
			</or>
		</condition>
		<fail message="Globus installation is not set in either GLOBUS_LOCATION or ext.globus.dir" if="globus.not.found"/>
		<echo message="Globus: ${ext.globus.dir}"/>
	</target>
	<target name="setGlobus" if="env.GLOBUS_LOCATION">
		<property name="ext.globus.dir" value="${env.GLOBUS_LOCATION}"/>
		<property name="build.stubs" location="${ext.globus.dir}/share/globus_wsrf_tools/build-stubs.xml" />
		<property name="schema.src" location="${ext.globus.dir}/share/schema" />
	</target>
	
	<!-- Allows you define a new property with a value of ${${a}.${b}} which can't be done by the Property task alone.  -->
	<macrodef name="compose-property">
		<attribute name="name" />
		<attribute name="stem" />
		<attribute name="selector" />
		<sequential>
			<property name="@{name}" value="${@{stem}.@{selector}}" />
		</sequential>
	</macrodef>
	
	<!-- =================================================================== -->
	<!-- Prepares the build directory and classpaths                         -->
	<!-- =================================================================== -->
	<target name="prepare" depends="init">
		<tstamp />
	</target>
	<target name="checkConf" depends="">
		<copy file="${basedir}/conf/introduce/introduce-portal-conf.xml.example" overwrite="false" tofile="${basedir}/conf/introduce/introduce-portal-conf.xml"/>
	</target>
	<target name="init" depends="checkGlobus,checkConf">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${classes.dir}" />
		<mkdir dir="${introduce.classes.dir}" />
		<mkdir dir="${portal.classes.dir}" />
		<mkdir dir="${test.classes.dir}" />
		<mkdir dir="${introduce.test.classes.dir}" />
		<mkdir dir="${portal.test.classes.dir}" />
		<mkdir dir="${jars.dir}" />
		<mkdir dir="${junit.results.dir}" />
		<mkdir dir="${javadoc.dir}" />
		<mkdir dir="${test.log.dir}"/>
	</target>
	<!-- =================================================================== -->
	<!-- Prints information about the build                                  -->
	<!-- =================================================================== -->
	<target name="help">
		<echo message="To see the list of targets avaiable type 'ant -p'" />
		<echo message="For an overview of the process, see docs/buildProcess.txt" />
	</target>
	<!-- =================================================================== -->
	<!-- Builds Code Docuementation                                          -->
	<!-- =================================================================== -->
	<target name="javadoc" depends="compile" description="Creates the API documentation.">
		<javadoc packagenames="*" destdir="${javadoc.dir}" author="true" version="true" use="true" windowtitle="${project.name}-${project.version} API">
			<sourcepath>
				<pathelement path="${src.dir}/Introduce" />
				<pathelement path="${src.dir}/Portal" />
			</sourcepath>
			<classpath>
				<path refid="Introduce.classpath" />
				<path refid="Portal.classpath" />
			</classpath>
			<tag name="todo" scope="all" description="To do:" />
			<tag name="created" scope="all" description="Creation Date:" />
		</javadoc>
	</target>
	<!-- =================================================================== -->
	<!--  Generate Java Beans from XSD                                       -->
	<!-- =================================================================== -->
	<target name="generateStubs" depends="prepare" description="Deletes the generated Java Beans and
		recreates them.">
		<ant antfile="${build.stubs}" target="generateStubs">
			<property name="mapping.file" location="${basedir}/schema/namespace2package.mappings" />
			<property name="source.stubs.dir" location="${basedir}/schema" />
			<property name="target.stubs.dir" location="${src.dir}/Introduce" />
			<property name="wsdl.file" value="beans.wsdl" />
		</ant>
	</target>
	<!-- =================================================================== -->
	<!--  Generate JET template classes                                      -->
	<!-- =================================================================== -->
	<taskdef name="jetc" classname="ch.paranor.epla.structure.JETCTask">
		<classpath>
			<pathelement location="${lib.dir}/jet/jetc-task.jar" />
			<fileset dir="${lib.dir}/jet">
				<include name="boot.jar" />
				<include name="osgi.jar" />
				<include name="resources.jar" />
				<include name="runtime.jar" />
				<include name="codegen.jar" />
				<include name="jdtcore.jar" />
				<include name="*.jar" />
			</fileset>
		</classpath>
	</taskdef>
	<target name="generateJETClasses">
		
			<jetc destdir="${src.dir}/Introduce" template="${templates.src.dir}/server-config.wsdd.xmljet" />			
			<jetc destdir="${src.dir}/Introduce" template="${templates.src.dir}/server-config-new-service.wsdd.xmljet" />	
			<jetc destdir="${src.dir}/Introduce" template="${templates.src.dir}/jndi-config.xmljet" />
			<jetc destdir="${src.dir}/Introduce" template="${templates.src.dir}/jndi-config-new-service.xmljet" />
			<jetc destdir="${src.dir}/Introduce" template="${templates.src.dir}/deploy.properties.txtjet" />
			<jetc destdir="${src.dir}/Introduce" template="${templates.src.dir}/namespace2package.mappings.txtjet" />
			<jetc destdir="${src.dir}/Introduce" template="${templates.src.dir}/.classpath.txtjet" />
			<jetc destdir="${src.dir}/Introduce" template="${templates.src.dir}/.project.xmljet" />
			<jetc destdir="${src.dir}/Introduce" template="${templates.src.dir}/client.launch.xmljet" />
			<jetc destdir="${src.dir}/Introduce" template="${templates.src.dir}/etc/registration.xmljet" />
			<jetc destdir="${src.dir}/Introduce" template="${templates.src.dir}/etc/security-desc.xmljet" />
			<jetc destdir="${src.dir}/Introduce" template="${templates.src.dir}/schema/Service/service.wsdl.xmljet" />
			<jetc destdir="${src.dir}/Introduce" template="${templates.src.dir}/docs/api/doxyfile.txtjet" />
			<jetc destdir="${src.dir}/Introduce" template="${templates.src.dir}/src/client/ServiceClient.javajet" />
			<jetc destdir="${src.dir}/Introduce" template="${templates.src.dir}/src/client/client-config.wsdd.xmljet" />
			<jetc destdir="${src.dir}/Introduce" template="${templates.src.dir}/src/common/ServiceI.javajet" />
			<jetc destdir="${src.dir}/Introduce" template="${templates.src.dir}/src/service/ServiceImpl.javajet" />
			<jetc destdir="${src.dir}/Introduce" template="${templates.src.dir}/src/service/ServiceConfiguration.javajet" />
			<jetc destdir="${src.dir}/Introduce" template="${templates.src.dir}/src/service/globus/ServiceProviderImpl.javajet" />
		    <jetc destdir="${src.dir}/Introduce" template="${templates.src.dir}/src/service/globus/resource/main/BaseResource.javajet" />
		    <jetc destdir="${src.dir}/Introduce" template="${templates.src.dir}/src/service/globus/resource/main/BaseResourceHome.javajet" />
		    <jetc destdir="${src.dir}/Introduce" template="${templates.src.dir}/src/service/globus/resource/main/ResourceConfiguration.javajet" />
		    <jetc destdir="${src.dir}/Introduce" template="${templates.src.dir}/src/service/globus/resource/base/BaseResource.javajet" />
			<jetc destdir="${src.dir}/Introduce" template="${templates.src.dir}/src/service/globus/resource/base/BaseResourceHome.javajet" />
			<jetc destdir="${src.dir}/Introduce" template="${templates.src.dir}/src/service/globus/resource/singleton/BaseResource.javajet" />
			<jetc destdir="${src.dir}/Introduce" template="${templates.src.dir}/src/service/globus/resource/singleton/BaseResourceHome.javajet" />
			<jetc destdir="${src.dir}/Introduce" template="${templates.src.dir}/src/service/globus/resource/singleton/ResourceConfiguration.javajet" />
			<jetc destdir="${src.dir}/Introduce" template="${templates.src.dir}/src/service/globus/resource/ResourceConstants.javajet" />
	
	</target>
	<!-- =================================================================== -->
	<!-- Compiles the source code                                            -->
	<!-- =================================================================== -->
	<target name="compile" depends="prepare, generateJETClasses" description="Compiles all the
		source files.">
		<compileSubproject name="Introduce" />
		<compileSubproject name="Portal" />
	</target>
	<target name="compile-tests" depends="compile" description="Compiles all the test source files.">
		<compileSubprojectTests name="Introduce" />
		<compileSubprojectTests name="Portal" />
	</target>
	<macrodef name="compileSubproject">
		<attribute name="name" />
		<sequential>
			<echo message="Compiling subproject @{name}" />
			<parallel>
				<javac srcdir="${src.dir}/@{name}" destdir="${classes.dir}/@{name}" debug="on" deprecation="off" optimize="off">
					<classpath refid="@{name}.classpath" />
				</javac>
				<copy todir="${classes.dir}/@{name}" overwrite="true">
					<fileset dir="${src.dir}/@{name}">
						<include name="**/*.xml" />
					</fileset>
				</copy>
			</parallel>
		</sequential>
	</macrodef>
	<macrodef name="compileSubprojectTests">
		<attribute name="name" />
		<sequential>
			<echo message="Compiling subproject tests @{name}" />
			<javac srcdir="${test.src.dir}/@{name}" destdir="${test.classes.dir}/@{name}" debug="on" deprecation="off" optimize="off">
				<classpath refid="@{name}.test.classpath" />
			</javac>
		</sequential>
	</macrodef>
	<!-- =================================================================== -->
	<!-- Create Jars                                                         -->
	<!-- =================================================================== -->
	<target name="jar" depends="compile" description="Builds the Jar Files">
		<jar jarfile="${jars.prefix}core${jars.sufix}" basedir="${introduce.classes.dir}" defaultExcludes="false" update="no">
			<manifest>
				<attribute name="Created-By" value="${user.name}" />
			</manifest>
		</jar>
		<jar jarfile="${jars.prefix}portal${jars.sufix}" basedir="${portal.classes.dir}" defaultExcludes="false" update="no">
			<manifest>
				<attribute name="Created-By" value="${user.name}" />
			</manifest>
		</jar>
	</target>
	<!-- =================================================================== -->
	<!-- Create Test Jars                                                         -->
	<!-- =================================================================== -->
	<target name="jar-tests" depends="compile-tests" description="Builds the Test Jar Files">
		<jar jarfile="${jars.prefix}core-tests${jars.sufix}" basedir="${test.classes.dir}/Introduce" defaultExcludes="false" update="no">
			<manifest>
				<attribute name="Created-By" value="${user.name}" />
			</manifest>
		</jar>
		<jar jarfile="${jars.prefix}portal-tests${jars.sufix}" basedir="${test.classes.dir}/Portal" defaultExcludes="false" update="no">
			<manifest>
				<attribute name="Created-By" value="${user.name}" />
			</manifest>
		</jar>
	</target>
	<!-- =================================================================== -->
	<!-- Create new service                                                  -->
	<!-- =================================================================== -->
	<target name="createService" description="Create new service">
		<ant dir="${basedir}" antfile="antfiles/introduce-creator.xml" target="createService" inheritall="true" />
	</target>
	
	<!-- =================================================================== -->
	<!-- Create new service                                                  -->
	<!-- =================================================================== -->
	<target name="postCreateService" description="Post Creation of new service">
		<ant dir="${basedir}" antfile="antfiles/introduce-creator.xml" target="postCreateService" inheritall="true" />
		<ant dir="${basedir}" antfile="antfiles/introduce-resync.xml" target="resyncService" inheritall="true" />
	</target>
	<!-- =================================================================== -->
	<!-- Sync service                                                  -->
	<!-- =================================================================== -->
	<target name="resyncService" description="Uses the introduceMethods.xml to add and remove
		methods to this service skeleton">
		<ant dir="${basedir}" antfile="antfiles/introduce-resync.xml" target="resyncService" inheritall="true" />
	</target>
	<!-- =================================================================== -->
	<!-- Builds the project                                                  -->
	<!-- =================================================================== -->
	<target name="build" description="Builds the entire application" depends="jar, jar-tests" />
	<!-- =================================================================== -->
	<!-- Builds the project from a clean start                               -->
	<!-- =================================================================== -->
	<target name="all" description="Cleans and build the entire application" depends="generateStubs,
		build" />
</project>
