<!-- ======================================================================= -->
<!-- caGrid build file                                                       -->
<!-- ======================================================================= -->
<project name="introduce" default="prepare" basedir=".">
	
	
	<!-- Environment -->
	<property environment="env" />
	<property file="${basedir}/build.properties" />
	<property file="${user.dir}/build.properties" />

	<!-- Information -->
	<property name="project.name" value="introduce" />
	<property name="project.version" value="1.0" />

	<!-- Source, Config, and Libraries -->
	<property name="src.dir" location="${basedir}/src/java" />
	<property name="lib.dir" location="${basedir}/lib" />
	<property name="schema.dir" location="${basedir}/schema" />
	<property name="sde.schema.dir" location="${schema.dir}/types" />
	<property name="resources.dir" location="${basedir}/resources" />

	<!-- Generated stuff -->
	<property name="build.dir" location="${basedir}/build" />
	<property name="build.lib.dir" location="${build.dir}/jars" />
	<property name="classes.dir" location="${build.dir}/classes" />
	<property name="jars.dir" location="${build.dir}/jars" />
	<property name="project.jar" location="${jars.dir}/${project.name}-${project.version}.jar" />
	<property name="junit.results.dir" value="${build.dir}/junit" />
	<property name="javadoc.dir" value="${build.dir}/javadoc" />

	<!-- testing stuff -->
	<property name="test.dir" location="${basedir}/test" />
	<property name="test.src.dir" location="${test.dir}/src/java" />
	<property name="test.classes.dir" location="${classes.dir}/test" />
	<property name="test.lib.dir" location="${test.dir}/lib" />
	<property name="test.log.dir" location="${test.dir}/logs" />
	<property name="test.project.jar" location="${jars.dir}/${project.name}-tests-${project.version}.jar" />


	<!-- Load common util path -->
	<import file="../../antfiles/ant-utilities.xml" />
	<import file="../../antfiles/test-utilities.xml" />

	<!-- Load util files -->
	<property name="antfiles.dir" value="${basedir}/antfiles" />
	<import file="${antfiles.dir}/build-introduce.xml" />
	<import file="${antfiles.dir}/build-portal.xml" />
	<import file="${antfiles.dir}/introduce-utils.xml" />
	
	<!-- Load test files -->
	<import file="test/test.xml" />

	<!-- =================================================================== -->
	<!-- Cleans up generated stuff                                           -->
	<!-- =================================================================== -->
	<target name="clean">
		<delete dir="${build.dir}" />
	</target>


	<!-- =================================================================== -->
	<!-- Prepares the build directory and classpaths                         -->
	<!-- =================================================================== -->
	<target name="prepare" depends="init">
		<tstamp />
	</target>

	<target name="init" depends="checkGlobus">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${classes.dir}" />
		<mkdir dir="${test.classes.dir}" />
		<mkdir dir="${jars.dir}" />
		<mkdir dir="${junit.results.dir}" />
		<mkdir dir="${javadoc.dir}" />
	</target>


	<!-- =================================================================== -->
	<!-- Prints information about the build                                  -->
	<!-- =================================================================== -->
	<target name="help">
		<echo message="To see the list of targets avaiable type 'ant -p'" />
		<echo message="For an overview of the process, see docs/buildProcess.txt" />
	</target>


	<!-- =================================================================== -->
	<!-- Builds Code Docuementation                                          -->
	<!-- =================================================================== -->
	<target name="javadoc" depends="compile" description="Creates the API documentation.">
		<javadoc packagenames="*" destdir="${javadoc.dir}" author="true" version="true" use="true" windowtitle="${project.name}-${project.version} API">
			<sourcepath>
				<pathelement path="${src.dir}/Introduce" />
				<pathelement path="${src.dir}/Portal" />
			</sourcepath>
			<classpath>
				<path refid="Introduce.classpath" />
				<path refid="Portal.classpath" />
			</classpath>
			<tag name="todo" scope="all" description="To do:" />
			<tag name="created" scope="all" description="Creation Date:" />
		</javadoc>
	</target>


	<!-- =================================================================== -->
	<!--  Generate Java Beans from XSD                                       -->
	<!-- =================================================================== -->
	<target name="generateStubs" depends="prepare" description="Deletes the generated Java Beans and recreates them.">
		<mkdir dir="${build.dir}/stubs" />

		<delete dir="${build.dir}/stubs" />
	</target>


	<!-- =================================================================== -->
	<!-- Compiles the source code                                            -->
	<!-- =================================================================== -->
	<target name="compile" depends="prepare" description="Compiles all the source files.">
		<compileSubproject name="Introduce" />
		<compileSubproject name="Portal" />
	</target>

	<target name="compile-tests" depends="compile" description="Compiles all the test source files.">
		<compileSubprojectTests name="Introduce" />
		<compileSubprojectTests name="Portal" />
	</target>


	<macrodef name="compileSubproject">
		<attribute name="name" />
		<sequential>
			<echo message="Compiling subproject @{name}" />
			<javac srcdir="${src.dir}/@{name}" destdir="${classes.dir}" debug="on" deprecation="off" optimize="off">
				<classpath refid="@{name}.classpath" />
			</javac>
			<copy todir="${classes.dir}" overwrite="true">
				<fileset dir="${src.dir}/@{name}">
					<include name="**/*.xml" />
				</fileset>
			</copy>
		</sequential>
	</macrodef>

	<macrodef name="compileSubprojectTests">
		<attribute name="name" />
		<sequential>
			<echo message="Compiling subproject tests @{name}" />
			<javac srcdir="${test.src.dir}/@{name}" destdir="${test.classes.dir}" debug="on" deprecation="off" optimize="off">
				<classpath refid="@{name}.test.classpath" />
			</javac>
		</sequential>
	</macrodef>


	<!-- =================================================================== -->
	<!-- Create Jars                                                         -->
	<!-- =================================================================== -->
	<target name="jar" depends="compile" description="Builds the Jar Files">
		<jar jarfile="${project.jar}" basedir="${classes.dir}" defaultExcludes="false" update="no">
			<manifest>
				<attribute name="Created-By" value="${user.name}" />
			</manifest>
		</jar>
	</target>

	<!-- =================================================================== -->
	<!-- Create Jars                                                         -->
	<!-- =================================================================== -->
	<target name="jar-tests" depends="compile-tests" description="Builds the Test Jar Files">
		<jar jarfile="${test.project.jar}" basedir="${test.classes.dir}" defaultExcludes="false" update="no">
			<manifest>
				<attribute name="Created-By" value="${user.name}" />
			</manifest>
		</jar>
	</target>



	<!-- =================================================================== -->
	<!-- Builds the project                                                  -->
	<!-- =================================================================== -->
	<target name="build" description="Builds the entire application" depends="jar, jar-tests" />


	<!-- =================================================================== -->
	<!-- Builds the project from a clean start                               -->
	<!-- =================================================================== -->
	<target name="all" description="Cleans and build the entire application" depends="clean, generateStubs, build" />

</project>
