<?xml version="1.0"?>
<!--
Adopted and modified from GSBT
GSBT - Globus Service Build Tools
-->
<project default="all" name="caGrid 1.0 gridca buildfile" basedir=".">
	<description>
		caGrid 1.0 gridca buildfile
    </description>
	<!-- Define the environment variable -->
	<property environment="env" />

	<!-- 
	Properties in these files will override the properties defined in this file.
    -->
	<property file="build.properties" />
	<property file="${user.home}/build.properties" />
    <property name="jar.prefix" value="caGrid-1.0" />
    <property name="service.name" value="gridca" />
     <property name="service.version" value="1.0" />

    <property name="project.name" value="caGrid-gridca"/>
	<!-- Directory where GT4 is installed -->
	<!-- Note that the buildfile requires an environment variable GLOBUS_LOCATION
	     pointing to that directory -->
	<property name="globus.location" location="${env.GLOBUS_LOCATION}" />

	<!-- GT4 build files and directories-->
	<property name="build.packages" location="${globus.location}/share/globus_wsrf_common/build-packages.xml" />
	<property name="build.stubs" location="${globus.location}/share/globus_wsrf_tools/build-stubs.xml" />
	<property name="schema.src" location="${globus.location}/share/schema" />



	<!-- Important directories and files -->
	<property name="src.dir" value="src" />
	<property name="lib.dir" value="lib" />
	<property name="ext.lib.dir" value="ext/lib" />
	<property name="test.dir" value="test" />
	<property name="test.src.dir" value="test/src" />
	<property name="test.lib.dir" value="test/lib" />
	<property name="test.log.dir" value="test/logs" />
	<property name="ext.test.lib.dir" value="ext/test/lib" />
	<property name="etc.dir" value="etc" />



	<!-- Name of the JAR files to be generated -->
	<property name="jar.name" value="${jar.prefix}-${service.name}-${service.version}.jar" />



	<!-- Build directories -->

	<!-- Auxiliary directory where all the intermediate files will be placed -->
	<property name="build.dir" location="build" />
	<!-- Directory for compiled service classes -->
	<property name="build.dest" location="${build.dir}/classes" />
	<!-- Directory for compiled JAR files (additional library files required by
	     the service will also be placed here) -->
	<property name="build.lib.dir" location="${build.dir}/lib" />
	<!-- Directory where stub source and class files are placed -->


	<!-- Miscellaneous properties -->

	<!-- This property is defined simply so we can write ${sep} instead of
	     ${file.separator}, which makes some expressions too long -->
	<property name="sep" value="${file.separator}" />
	<!-- We want detailed error messages -->
	<property name="java.debug" value="on" />

	<!-- Load test files -->
	<import file="test/test.xml" />

	<!-- Sets up the build directory structure -->
	<target name="init">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.dest}" />
		<mkdir dir="${build.lib.dir}" />

		<copy toDir="${build.lib.dir}">
			<fileset dir="lib/">
				<include name="*.jar" />
			</fileset>
		</copy>

		<mkdir dir="${test.log.dir}" />

		<path id="test.classpath">
			<fileset dir="${test.lib.dir}">
				<include name="*.jar" />
			</fileset>
			<fileset dir="${ext.test.lib.dir}">
				<include name="*.jar" />
			</fileset>
			<fileset dir="${lib.dir}">
				<include name="*.jar" />
			</fileset>
			<fileset dir="${ext.lib.dir}">
				<include name="*.jar" />
			</fileset>
			<pathelement location="${test.dir}/resources" />
			<pathelement location="${build.dest}" />
			<pathelement location="${stubs.dest}" />

			<fileset dir="${globus.location}/lib">
				<include name="*.jar" />
				<exclude name="${stubs.jar.name}" />
				<exclude name="${jar.name}" />
				<exclude name="xml-apis.jar" />
				<exclude name="xercesImpl.jar" />
			</fileset>
		</path>
	</target>


	<!-- Compile the implementation classes (service, resource, etc.) -->
	<target name="compile" depends="init">
		<javac srcdir="${src.dir}" destdir="${build.dest}" debug="${java.debug}" deprecation="${deprecation}">
			<classpath>
				<pathelement location="${stubs.dest}" />
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
				<fileset dir="${ext.lib.dir}">
					<include name="*.jar" />
				</fileset>

				<fileset dir="${globus.location}/lib">
					<include name="*.jar" />
					<exclude name="${jar.name}" />
					<exclude name="xml-apis.jar" />
					<exclude name="xercesImpl.jar" />
				</fileset>
			</classpath>
		</javac>
	</target>

	<!-- Compile the implementation classes (service, resource, etc.) -->
	<target name="compileTests" depends="compile">
		<javac srcdir="${test.src.dir}" destdir="${build.dest}" debug="${java.debug}" deprecation="${deprecation}" classpathref="test.classpath" />
	</target>


	<!-- Create a JAR file with the implementation classes -->
	<target name="jar" depends="compile, compileTests">
		 <jar jarfile="${build.lib.dir}/${jar.name}" basedir="${build.dest}">
            <include name="**/gridca/**" />
        	<fileset dir="resources/ui/gridca" />
        	<fileset dir="ext/resources/portal/common" />
        </jar>
	</target>



	<!-- Clean up all the intermediate files -->
	<target name="clean">
		<delete dir="tmp" />
		<delete dir="${build.dir}" />
	</target>


	<!-- Default target "all" generates the GAR file -->
	<target name="all" depends="jar" />
	
	<target name="requestHostCertificate" description="Requests a Host Ceritificate">
		<java classname="gov.nih.nci.cagrid.gridca.common.HostCertificateRequestUtility" fork="yes" newenvironment="true">
			<arg value="langella@bmi.osu.edu" />
			<arg value="caGrid 1.0 Development Host Certificate Request" />
			<arg value="5" />
			<classpath>
				<fileset dir="${build.lib.dir}">
					<include name="**/*.jar" />
				</fileset>
				<fileset dir="${ext.lib.dir}">
					<include name="*.jar" />
				</fileset>
				<fileset dir="${lib.dir}">
					<include name="**/*.jar" />
				</fileset>
				<fileset dir="${globus.location}/lib">
					<include name="*.jar" />
					<exclude name="${jar.name}" />
					<exclude name="xml-apis.jar" />
					<exclude name="xercesImpl.jar" />
				</fileset>
			</classpath>
		</java>
	</target>

</project>