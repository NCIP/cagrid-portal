<?xml version="1.0"?>
<project name="portal" default="all" basedir=".">

    <!-- Local Environment -->
    <property environment="env"/>
    <property name="project.name" value="portal"/>
    <property file="${user.name}-${project.name}-build.properties"/>
    <property name="globus.dir" location="${env.GLOBUS_LOCATION}"/>
    <property name="globus.lib.dir" location="${globus.dir}/lib"/>

    <property name='javac.debug' value='true'/>
    <property name='javac.deprecation' value='true'/>

    <!--        Source folders          -->
    <property name='java.src.dir' value='src/java'/>
    <property name='generated.src.dir' value='src/generated'/>
    <property name='props.src.dir' value='src/properties'/>
    <property name='scripts.src.dir' value='src/scripts'/>


    <property name="webcontent.dir" value="webcontent"/>
    <property name='webinf.dir' value='${webcontent.dir}/WEB-INF'/>
    <property name="resources.dir" value="resources"/>

    <property name="lib.dir" value="lib"/>
    <property name="lib.dest" value="${webinf.dir}/lib"/>
    <property name="ext.lib.dir" value="ext/lib"/>

    <property name='build.dir' value='build'/>
    <property name='build.dest' value='${webinf.dir}/classes'/>

    <!--Set logging levels if not defined by ${username}-portal.properties file -->
    <property name="log.level.root" value="WARN"/>
    <property name="log.level.portal" value="WARN"/>
    <property name="log.level.spring" value="WARN"/>

    <property name="tomcat.dir" location="${env.CATALINA_HOME}"/>
    <property name="tomcat.webapps.dir" location="${tomcat.dir}/webapps"/>


    <path id="portal.classpath">
        <fileset dir="${lib.dir}">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="${ext.lib.dir}">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="${globus.lib.dir}">
            <include name="*.jar"/>
        </fileset>
    </path>

    <path id="xdoclet.classpath">
        <fileset dir="${lib.dir}/xdoclet">
            <include name="*.jar"/>
        </fileset>
    </path>

    <presetdef name="portal.javac">
        <javac source="1.4"/>
    </presetdef>

    <!-- ============================================================== -->
    <!-- Target for continous build. Use war target to build            -->
    <!-- actual app                                                     -->
    <!-- ============================================================== -->
    <target name="all" depends="clean,compile,hibernate.xdoclet,copyResources"
            description="Builds the entire application"/>


    <!-- ============================================================== -->
    <!-- Deploy Target                                               -->
    <!-- ============================================================== -->
    <target name="deployExploded" depends="clean,cleanDeployment,compile,hibernate.xdoclet,copyResources,deployPreBuilt" description="Deploy Application into tomcat"/>

    <target name="deployPreBuilt" description="Deploys pre-built webapp">
        <copydir src="${webcontent.dir}" dest="${tomcat.webapps.dir}/${project.name}" forceoverwrite="true"/>
    </target>

    <target name="deployAsWar" depends="cleanDeployment,war" description="Deploy Application into Tomcat as a war">
        <copyfile src="${build.dir}/${project.name}.war" dest="${tomcat.webapps.dir}"/>
    </target>


    <!-- ============================================================== -->
    <!-- Create war for deployment                                      -->
    <!-- ============================================================== -->
    <target name="war" depends="clean,compile,hibernate,copyResources">
        <war basedir="${webcontent.dir}"
             destfile="${build.dir}/${project.name}.war"
             webxml="${webinf.dir}/web.xml"
             excludesfile="${webinf.dir}/web.xml">
        </war>
    </target>
    <!-- ============================================================== -->
    <!-- Initialize build environment                                   -->
    <!-- ============================================================== -->
    <target name="init">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.dest}"/>

        <mkdir dir="${lib.dest}"/>
    </target>

    <!-- ============================================================== -->
    <!-- Cleans up generated stuff                                      -->
    <!-- Not to be called directly                                      -->
    <!-- ============================================================== -->
    <target name="clean" description="Removes generated files.">
        <delete dir="${build.dest}"/>
        <delete dir="${lib.dest}"/>
        <delete dir="${build.dir}"/>
    </target>

    <target name="cleanDeployment" description="Removes tomcat deployment">
        <delete dir="${tomcat.webapps.dir}/${project.name}" failonerror="false"/>
        <!--Delete the war file if one exists-->
        <delete file="${tomcat.webapps.dir}/${project.name}.war"/>
    </target>

    <!-- ============================================================== -->
    <!-- Compile up generated stuff                                      -->
    <!-- ============================================================== -->
    <target name="compile" depends="init">

        <javac source="1.4" destdir="${build.dest}" classpathref="portal.classpath">
            <src>
                <pathelement path="${generated.src.dir}"/>
                <pathelement path="${java.src.dir}"/>
            </src>
        </javac>


    </target>

    <target name="copyResources">
        <!--Copy libraries-->
        <copy todir="${lib.dest}">
            <fileset dir="${lib.dir}">
                <include name="*.jar"/>
            </fileset>
            <fileset dir="${ext.lib.dir}">
                <include name="*.jar"/>
            </fileset>
            <!--Copy Globus libraries-->
            <fileset dir="${globus.lib.dir}">
                <include name="*.jar"/>
            </fileset>
        </copy>

        <copy
                file='resources/hibernate.properties.template'
                tofile='${build.dest}/hibernate.properties'
                filtering='true'
                overwrite='true'>
            <filterset>
                <filter token='hibernate.connection.driver_class' value='${hibernate.connection.driver_class}'/>
                <filter token='hibernate.connection.url' value='${hibernate.connection.url}'/>
                <filter token='hibernate.connection.username' value='${hibernate.connection.username}'/>
                <filter token='hibernate.connection.password' value='${hibernate.connection.password}'/>
                <filter token='hibernate.c3p0.min_size' value='${hibernate.c3p0.min_size}'/>
                <filter token='hibernate.c3p0.max_size' value='${hibernate.c3p0.max_size}'/>
                <filter token='hibernate.c3p0.timeout' value='${hibernate.c3p0.timeout}'/>
                <filter token='hibernate.c3p0.max_statements' value='${hibernate.c3p0.max_statements}'/>
                <filter token='hibernate.dialect' value='${hibernate.dialect}'/>
                <filter token='hibernate.use_outer_join' value='${hibernate.use_outer_join}'/>
                <filter token='hibernate.show_sql' value='${hibernate.show_sql}'/>
            </filterset>
        </copy>

        <!--Unix works for all environments -->
        <pathconvert targetos="unix" property="tomcat.log.dir">
                <path location="${tomcat.dir}/logs"/>
         </pathconvert>

        <copy
                file="${resources.dir}/log4j.xml.template"
                tofile='${build.dest}/log4j.xml'
                filtering="true"
                overwrite="true">
            <filterset>
                <filter token='webapp.log.dir' value='${tomcat.log.dir}'/>
                <filter token="webapp.project.name" value="${project.name}"/>
                <filter token="log.level.root" value="${log.level.root}"/>
                <filter token="log.level.portal" value="${log.level.portal}"/>
                <filter token="log.level.spring" value="${log.level.spring}"/>
            </filterset>
        </copy>

        <copy todir="${build.dest}">
            <fileset dir="${props.src.dir}">
                <include name="*.xml"/>
                <include name="*.properties"/>
            </fileset>
        </copy>

        <!--ToDo copy GLOBUS libs -->
    </target>


    <target name="hibernate" description="Does all the hibernate generation stuff"
            depends="hibernate.xdoclet,file-list">

    </target>


    <target name="hibernate.xdoclet" depends="compile" description="Creates the hbm.xml files">


        <taskdef name="hibernatedoclet"
                 classname="xdoclet.modules.hibernate.HibernateDocletTask">
            <classpath refid="xdoclet.classpath"/>
        </taskdef>

        <hibernatedoclet
                destdir="${build.dest}"
                excludedtags="@version,@author,@todo"
                force="false"
                mergedir="merge"
                verbose="false">

            <fileset dir="${generated.src.dir}">
                <include name="**/domain/**/*.java"/>
            </fileset>

            <hibernate version='3.0'/>
        </hibernatedoclet>

    </target>

    <target name="file-list"
            description="Create hibernate mapping file list">
        <taskdef name="scriptdef" classname="org.apache.tools.ant.taskdefs.optional.Script">
            <classpath>
                <fileset dir="${lib.dir}/xdoclet">
                    <include name="**/*.jar"/>
                </fileset>


            </classpath>
        </taskdef>

        <property name="generated.dir" location="${build.dest}"/>
        <property name="hibernate.list.file" location="${build.dest}/hibernate.cfg.xml"/>
        <scriptdef language="beanshell" src="${scripts.src.dir}/create_hbnfile.sh"/>

    </target>


</project>