<?xml version="1.0"?>
<project name="portal" default="all" basedir=".">

    <property name="webapp.name" value="cagrid-portal"/>

    <!-- Local Environment -->
    <property file="${user.name}-portal-build.properties" />
    <property name="globus.dir" location="${env.GLOBUS_LOCATION}" />

    <property name='javac.debug' value='true'/>
    <property name='javac.deprecation' value='true'/>

    <property name='src.dir' value='src/java'/>
    <property name='generated.src.dir' value='src/generated'/>

    <property name="webcontent.dir" value="webcontent"/>
    <property name='webinf.dir' value='${webcontent.dir}/WEB-INF'/>
    <property name="resources.dir" value="resources"/>

    <property name="lib.dir" value="lib"/>
    <property name="lib.dest" value="${webinf.dir}/lib"/>
    <property name="ext.lib.dir" value="ext/lib"/>

    <property name='build.dest' value='${webinf.dir}/classes'/>


    <path id="portal.classpath">
        <fileset dir="${lib.dir}">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="${ext.lib.dir}">
            <include name="*.jar"/>
        </fileset>
    </path>

    <!-- ============================================================== -->
    <!-- Builds from scratch                                                -->
    <!-- ============================================================== -->
    <target name="all" depends="war" description="Builds the entire application" />


    <!-- ============================================================== -->
    <!-- Initialize build environment                                   -->
    <!-- ============================================================== -->
    <target name="init">
        <mkdir dir="${build.dest}" />
        <mkdir dir="${lib.dest}"/>
    </target>

    <!-- ============================================================== -->
    <!-- Cleans up generated stuff                                      -->
    <!-- Not to be called directly                                      -->
    <!-- ============================================================== -->
    <target name="clean" depends="" description="Removes generated files.">
        <delete dir="${build.dest}" />
        <delete dir="${lib.dest}"/>
    </target>

    <!-- ============================================================== -->
    <!-- Compile up generated stuff                                      -->
    <!-- ============================================================== -->
    <target name="compile" depends="init">
        <javac destdir="${build.dest}" classpathref="portal.classpath">
            <src>

                <pathelement path="${generated.src.dir}"/>
            </src>
        </javac>
    </target>

    <target name="copyResources">
        <!--Copy libraries-->
        <copy todir="${lib.dest}">
            <fileset dir="${lib.dir}">
                <include name="*.jar"/>
            </fileset>
            <fileset dir="${ext.lib.dir}">
                <include name="*.jar"/>
            </fileset>
        </copy>

        <!--ToDo copy GLOBUS libs -->
    </target>


    <!-- ============================================================== -->
    <!-- Create war for deployment                                      -->
    <!-- ============================================================== -->
    <target name="war" depends="clean,compile,hibernate,copyResources">
        <!--Create war

        -->
    </target>


    <target name="hibernate" description="Does all the hibernate generation stuff"
            depends="hibernate.xdoclet,file-list">
    </target>


    <target name="hibernate.xdoclet" depends="compile" description="Creates the hbm.xml files">

        <path id="xdoclet.classpath">
            <fileset dir="${lib.dir}/xdoclet">
                <include name="*.jar"/>
            </fileset>
        </path>

        <taskdef name="hibernatedoclet"
                 classname="xdoclet.modules.hibernate.HibernateDocletTask">
            <classpath refid="xdoclet.classpath"/>
        </taskdef>

        <hibernatedoclet
                destdir="${build.dest}"
                excludedtags="@version,@author,@todo"
                force="false"
                mergedir="merge"
                verbose="false">

            <fileset dir="${generated.src.dir}">
                <include name="**/domain/**/*.java"/>
            </fileset>

            <hibernate version='3.0'/>
        </hibernatedoclet>

    </target>

    <target name="file-list"
            description="Create hibernate mapping file list">

        <property name="generated.dir" location="${build.dest}"/>
        <property name="hibernate.list.file" location="${build.dest}/hibernate.cfg.xml"/>
         

    </target>


</project>