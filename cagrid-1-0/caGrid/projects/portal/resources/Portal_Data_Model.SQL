USE portal
;



--  Create Tables 
CREATE TABLE ADDRESS
(
	COUNTRY VARCHAR(255),
	GEO_CORDINATES TEXT,
	LOCALITY TEXT,
	POSTAL_CODE VARCHAR(50),
	SERVICE_EPR TEXT NOT NULL,
	STATE_PROVINCE VARCHAR(255),
	STREET TEXT,
	STREET2 TEXT,
	PRIMARY KEY (SERVICE_EPR)
) 
;


CREATE TABLE DOMAIN_MODEL
(
	PROJECT_DESC TEXT,
	PROJECT_LONG_NAME TEXT,
	PROJECT_SHORT_NAME VARCHAR(255),
	PROJECT_VERSION VARCHAR(255),
	SERVICE_EPR TEXT NOT NULL,
	PRIMARY KEY (SERVICE_EPR),
	KEY (SERVICE_EPR)
) 
;


CREATE TABLE INDEX_REGISTERED_SERVICES_JOIN
(
	GRID_SERVICE_EPR TEXT NOT NULL,
	INDEX_SERVICE_EPR TEXT NOT NULL,
	PRIMARY KEY (GRID_SERVICE_EPR, INDEX_SERVICE_EPR),
	KEY (GRID_SERVICE_EPR),
	KEY (INDEX_SERVICE_EPR)
) 
;


CREATE TABLE INDEX_SERVICE
(
	EPR TEXT NOT NULL,
	ISACTIVE BOOL,
	LONG_DESC TEXT,
	SHORT_NAME VARCHAR(255),
	PRIMARY KEY (EPR)
) 
;


CREATE TABLE MODEL_CLASS_JOIN
(
	SERVICE_EPR TEXT NOT NULL,
	UML_CLASS_ID INTEGER NOT NULL,
	PRIMARY KEY (SERVICE_EPR, UML_CLASS_ID)
) 
;


CREATE TABLE POINT_OF_CONTACT
(
	AFFILIATION VARCHAR(255),
	EMAIL VARCHAR(255),
	FIRST_NAME VARCHAR(255),
	ID INTEGER NOT NULL,
	LAST_NAME VARCHAR(255),
	PHONE_NUMBER VARCHAR(255),
	RC_ID INTEGER,
	ROLE TEXT,
	PRIMARY KEY (ID),
	KEY (RC_ID)
) 
;


CREATE TABLE RC_POC_JOIN
(
	POC_ID INTEGER NOT NULL,
	RC_ID INTEGER NOT NULL,
	PRIMARY KEY (POC_ID, RC_ID)
) 
;


CREATE TABLE REGISTERED_SERVICES
(
	ALIAS VARCHAR(255),
	DESCRIPTION TEXT,
	EPR TEXT NOT NULL,
	NAME VARCHAR(255),
	RC_ID INTEGER,
	VERSION VARCHAR(20),
	PRIMARY KEY (EPR)
) 
;


CREATE TABLE RESEARCH_CENTER
(
	COUNTRY VARCHAR(255),
	DESCRIPTION TEXT,
	DISPLAY_NAME VARCHAR(255),
	GEO_CORDINATES TEXT,
	HOMEPAGE_URL VARCHAR(255),
	ID INTEGER NOT NULL,
	IMAGE_URL VARCHAR(255),
	LOCALITY TEXT,
	POSTAL_CODE VARCHAR(50),
	RSS_NEWS_URL VARCHAR(255),
	SHORT_NAME VARCHAR(255),
	STATE VARCHAR(255),
	STREET TEXT,
	STREET2 TEXT,
	PRIMARY KEY (ID)
) 
;


CREATE TABLE SemanticMetadata
(
	CONCEPT_CODE VARCHAR(50) NOT NULL,
	CONCEPT_DEFINITION TEXT,
	CONCEPT_NAME TEXT,
	ORDER INTEGER,
	ORDER_LEVEL INTEGER,
	PRIMARY_CONCEPT BOOL,
	PRIMARY KEY (CONCEPT_CODE)
) 
;


CREATE TABLE SERVICE_METRICS
(
	GRID_SERVICE_EPR TEXT NOT NULL,
	IS_ACTIVE BOOL,
	RESPONSE_TIME TIME,
	TIMESTAMP TIMESTAMP NOT NULL,
	PRIMARY KEY (GRID_SERVICE_EPR, TIMESTAMP),
	KEY (GRID_SERVICE_EPR)
) 
;


CREATE TABLE UML_ATTRIBUTE
(
	DESCRIPTION TEXT,
	NAME TEXT,
	UML_ATTRIBUTE_ID INTEGER NOT NULL,
	UML_CLASS_ID INTEGER NOT NULL,
	PRIMARY KEY (UML_ATTRIBUTE_ID),
	KEY (UML_CLASS_ID)
) 
;


CREATE TABLE UML_ATTRIBUTE_SEMANTIC_JOIN
(
	SEMANTIC_CONCEPT_CODE VARCHAR(50) NOT NULL,
	UML_ATTRIBUTE_ID INTEGER NOT NULL,
	PRIMARY KEY (SEMANTIC_CONCEPT_CODE, UML_ATTRIBUTE_ID),
	KEY (SEMANTIC_CONCEPT_CODE),
	KEY (UML_ATTRIBUTE_ID)
) 
;


CREATE TABLE UML_CLASS
(
	CLASS_NAME TEXT NOT NULL,
	DESCRIPTION TEXT,
	PACKAGE_NAME TEXT NOT NULL,
	PROJECT_NAME TEXT,
	PROJECT_VERSION VARCHAR(50),
	SERVICE_EPR TEXT NOT NULL,
	UML_CLASS_ID INTEGER NOT NULL,
	PRIMARY KEY (UML_CLASS_ID),
	KEY (SERVICE_EPR)
) 
;


CREATE TABLE UML_CLASS_ATTRIBUTE_JOIN
(
	UML_ATTRIBUTE_ID INTEGER NOT NULL,
	UML_CLASS_ID INTEGER NOT NULL,
	PRIMARY KEY (UML_ATTRIBUTE_ID, UML_CLASS_ID)
) 
;


CREATE TABLE UML_CLASS_SEMANTIC_JOIN
(
	SEMANTIC_CONCEPT_CODE VARCHAR(50) NOT NULL,
	UML_CLASS_ID INTEGER NOT NULL,
	PRIMARY KEY (SEMANTIC_CONCEPT_CODE, UML_CLASS_ID),
	KEY (SEMANTIC_CONCEPT_CODE),
	KEY (UML_CLASS_ID)
) 
;






--  Create Foreign Key Constraints 
ALTER TABLE POINT_OF_CONTACT ADD CONSTRAINT FK_POINT_OF_CONTACT_RESEARCH_CENTER 
	FOREIGN KEY (RC_ID) REFERENCES RESEARCH_CENTER (ID)
	ON DELETE CASCADE
;

ALTER TABLE UML_ATTRIBUTE ADD CONSTRAINT FK_UML_ATTRIBUTE_UML_CLASS 
	FOREIGN KEY (UML_CLASS_ID) REFERENCES UML_CLASS (UML_CLASS_ID)
;

ALTER TABLE UML_ATTRIBUTE_SEMANTIC_JOIN ADD CONSTRAINT FK_UML_ATTRIBUTE_SEMANTIC_JOIN_UML_ATTRIBUTE 
	FOREIGN KEY (UML_ATTRIBUTE_ID) REFERENCES UML_ATTRIBUTE (UML_ATTRIBUTE_ID)
	ON DELETE CASCADE ON UPDATE CASCADE
;

ALTER TABLE UML_CLASS ADD CONSTRAINT FK_UML_CLASS_DOMAIN_MODEL 
	FOREIGN KEY (SERVICE_EPR) REFERENCES DOMAIN_MODEL (SERVICE_EPR)
;

ALTER TABLE UML_CLASS_SEMANTIC_JOIN ADD CONSTRAINT FK_UML_CLASS_SEMANTIC_JOIN_UML_CLASS 
	FOREIGN KEY (UML_CLASS_ID) REFERENCES UML_CLASS (UML_CLASS_ID)
	ON DELETE CASCADE ON UPDATE CASCADE
;
