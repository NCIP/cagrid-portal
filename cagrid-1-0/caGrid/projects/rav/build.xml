<?xml version="1.0"?>
<!-- ================================================================= -->
<!-- caGrid 1.0 rav build file                                        -->
<!-- ================================================================= -->

<project name="rav" default="compile" basedir=".">
    <!-- Environment -->
    <property environment="env" />
    <property file="${basedir}/build.properties" />
    <property file="${user.dir}/build.properties" />
    <property file="${basedir}/ext/resources/cagrid.properties" />
    <property name="globus.dir" location="${env.GLOBUS_LOCATION}" />

    <!-- Information -->
    <property name="project.version" value="${cagrid.master.project.version}" />
    <property name="project.name" value="${cagrid.master.project.name}-${project.version}-${ant.project.name}" />
    <property name="project.jar.prefix" value="${cagrid.master.jar.prefix}${ant.project.name}${cagrid.master.jar.separator}" />

    <property name="java.source" value="1.5" />
    <property name="src.dir" value="${basedir}/src/java" />
    <property name="build.dir" value="${basedir}/build" />
    <property name="javadoc.dir" value="${build.dir}/javadoc" />
    <property name="classes.dir" value="${build.dir}/classes" />
    <property name="jar.dir" value="${build.dir}/jars" />
    <property name="project.jarfile" value="${jar.dir}/${project.jar.prefix}core.jar" />
    <property name="lib.dir" value="${basedir}/lib" />
    <property name="ext.lib.dir" value="${basedir}/ext/lib" />
    <property name="ext.test.lib.dir" location="${basedir}/ext/test/lib" />
    <property name="introduce.extensions.dir" location="../introduce/extensions" />

    <!-- testing stuff -->
    <property name="test.dir" location="${basedir}/test" />
    <property name="test.src.dir" location="${test.dir}/src/java" />
    <property name="test.classes.dir" location="${build.dir}/test_classes" />
    <property name="test.lib.dir" location="${test.dir}/lib" />
    <property name="test.logs.dir" location="${test.dir}/logs" />
    <property name="test.project.jar" location="${jar.dir}/${project.jar.prefix}tests.jar" />

    <property name="stubs.dir" location="${build.dir}/stubs" />
    <property name="test.stubs.dir" location="${stubs.dir}/test" />
    <property name="stubs.src" location="${stubs.dir}/src" />
    <property name="test.stubs.src" location="${test.stubs.dir}/src" />
    <property name="stubs.dest" location="${stubs.dir}/classes" />
    <property name="test.stubs.dest" location="${test.stubs.dir}/classes" />
    <property name="stubs.jar.name" value="${project.jar.prefix}stubs.jar" />
    <property name="build.jars.dir" location="build/lib" />
    <property name="stubs.jar.file" value="${build.jars.dir}/${stubs.jar.name}" />
    <property name="ant.build.stubs" location="${globus.dir}/share/globus_wsrf_tools/build-stubs.xml" />
    <property name="schema.dest" location="${build.dir}/schema" />
    <import file="test/test.xml" />



    <target name="init">
        <mkdir dir="${build.dir}" />
        <mkdir dir="${build.jars.dir}" />
        <mkdir dir="${test.classes.dir}" />
        <mkdir dir="${stubs.dir}" />
        <mkdir dir="${test.stubs.dir}" />
        <mkdir dir="${stubs.src}" />
        <mkdir dir="${test.stubs.src}" />
        <mkdir dir="${stubs.dest}" />
        <mkdir dir="${test.stubs.dest}" />
        <mkdir dir="${schema.dest}" />
        <!-- copy schemas to the output directory -->
        <copy toDir="${schema.dest}">
            <fileset dir="schema" casesensitive="yes">
                <include name="rav/**/*.xsd" />
                <include name="rav/**/*.wsdl" />
            </fileset>
        </copy>
        <available property="stubs.present" type="dir" file="${stubs.dest}/gov/nih/nci/cagrid" />

        <path id="test.run.classpath">
            <pathelement location="${test.build.dest}" />
            <pathelement location="${test.dir}/resources" />
            <path refid="test.build.classpath" />
        </path>
        <path id="run.classpath">
            <pathelement location="${build.dest}" />
            <path refid="service.build.classpath" />
        </path>

    </target>

    <path id="base.classpath">
        <fileset dir="${lib.dir}">
            <include name="*.jar" />
        </fileset>
        <fileset dir="${ext.lib.dir}">
            <include name="*.jar" />
        </fileset>
        <fileset dir="${globus.dir}/lib">
            <include name="*.jar" />
        </fileset>
    </path>
    <!-- ============================================================== -->
    <!-- Globus properties                                              -->
    <!-- ============================================================== -->
    <target name="checkGlobus" depends="setGlobus">
        <condition property="globus.not.found">
            <or>
                <not>
                    <isset property="ext.globus.dir" />
                </not>
                <equals arg1="${ext.globus.dir}" arg2="" />
            </or>
        </condition>
        <fail message="Globus installation is not set in either GLOBUS_LOCATION or ext.globus.dir" if="globus.not.found" />
        <echo message="Globus: ${ext.globus.dir}" />
    </target>

    <target name="setGlobus" if="env.GLOBUS_LOCATION">
        <property name="ext.globus.dir" value="${env.GLOBUS_LOCATION}" />
    </target>


    <target name="stubs" unless="stubs.present" depends="init,setGlobus">
        <ant antfile="${ant.build.stubs}" target="generateStubs">
            <property name="source.stubs.dir" location="${schema.dest}/rav" />
            <property name="wsdl.file" value="jsdl.wsdl" />
            <property name="target.stubs.dir" location="${stubs.src}" />
        </ant>
    </target>

    <!-- =============================================================== -->
    <!-- Define the Classpaths                                           -->
    <!-- =============================================================== -->
    <target name="defineClasspaths" depends="checkGlobus">
        <path id="build.classpath">
            <fileset dir="${jar.dir}">
                <include name="**/${stubs.jar.name}" />
            </fileset>

            <fileset dir="${lib.dir}">
                <include name="**/*.jar" />
            </fileset>
            <fileset dir="${ext.lib.dir}">
                <include name="**/*.jar" />
            </fileset>
            <fileset dir="${globus.dir}/lib">
                <include name="**/*.jar" />
            </fileset>
        </path>

        <path id="run.classpath">
            <pathelement location="${classes.dir}" />
            <fileset dir="${lib.dir}">
                <include name="**/*.jar" />
            </fileset>
            <fileset dir="${ext.lib.dir}">
                <include name="**/*.jar" />
            </fileset>
            <fileset dir="${globus.dir}/lib">
                <include name="**/*.jar" />
            </fileset>
            <pathelement location="${ext.globus.dir}" />
        </path>

        <path id="test.classpath">
            <pathelement path="${classes.dir}" />
            <pathelement path="${test.dir}/resources" />
            <fileset dir="${test.lib.dir}">
                <include name="**/*.jar" />
            </fileset>
            <fileset dir="${ext.test.lib.dir}">
                <include name="**/*.jar" />
            </fileset>
            <fileset dir="${lib.dir}">
                <include name="**/*.jar" />
            </fileset>
            <fileset dir="${ext.lib.dir}">
                <include name="**/*.jar" />
            </fileset>
            <fileset dir="${globus.dir}/lib">
                <include name="**/*.jar" />
            </fileset>
            <pathelement location="${ext.globus.dir}" />
        </path>

        <path id="base.classpath">
            <fileset dir="${lib.dir}">
                <include name="*.jar" />
            </fileset>
            <fileset dir="${ext.lib.dir}">
                <include name="*.jar" />
            </fileset>
            <fileset dir="${ext.globus.dir}/lib">
                <include name="*.jar" />
                <exclude name="${stubs.jar.name}" />
                <exclude name="${common.jar.name}" />
                <exclude name="${client.jar.name}" />
                <exclude name="${service.jar.name}" />
            </fileset>
        </path>
        <path id="service.build.classpath">
            <pathelement location="${stubs.dest}" />
            <path refid="base.classpath" />
        </path>
        <path id="service.run.classpath">
            <pathelement location="${build.dest}" />
            <path refid="service.build.classpath" />
        </path>
        <path id="test.build.classpath">
            <fileset dir="${test.lib.dir}">
                <include name="*.jar" />
            </fileset>
            <pathelement location="${build.dest}" />
            <path refid="service.build.classpath" />
        </path>
        <path id="test.run.classpath">
            <pathelement location="${test.build.dest}" />
            <pathelement location="${test.dir}/resources" />
            <path refid="test.build.classpath" />
        </path>
        <path id="run.classpath">
            <pathelement location="${build.dest}" />
            <path refid="service.build.classpath" />
        </path>

    </target>


    <!-- =============================================================== -->
    <!-- Prepares the build directory                                    -->
    <!-- =============================================================== -->
    <target name="prepare" depends="defineClasspaths">
        <tstamp />
        <mkdir dir="${build.dir}" />
    </target>

    <target name="compileStubs" depends="stubs">
        <delete dir="${stubs.src}/org/apache" />
        <javac srcdir="${stubs.src}" destdir="${stubs.dest}" debug="${java.debug}" source="${java.source}">
            <include name="**/*.java" />
            <classpath>
                <path refid="base.classpath" />
                <fileset dir="${globus.dir}/lib">
                    <include name="*.jar" />
                </fileset>
            </classpath>
        </javac>
        <javac srcdir="${test.stubs.src}" destdir="${test.stubs.dest}" debug="${java.debug}" source="${java.source}">
            <include name="**/*.java" />
            <classpath>
                <path refid="base.classpath" />
                <fileset dir="${globus.dir}/lib">
                    <include name="*.jar" />
                </fileset>
            </classpath>
        </javac>
    </target>

    <!-- =============================================================== -->
    <!-- Compiles the source code                                        -->
    <!-- =============================================================== -->
    <target name="compile" depends="prepare, compileStubs" description="compiles.">
        <mkdir dir="${classes.dir}" />
        <javac srcdir="${src.dir}" destdir="${classes.dir}" source="1.3" target="1.1" debug="on" deprecation="off" optimize="off">
            <classpath refid="build.classpath" />
        </javac>
        <copy toDir="${classes.dir}">
            <fileset dir="${src.dir}">
                <include name="**/*" />
            </fileset>
        </copy>
    </target>

    <!-- =============================================================== -->
    <!-- Compiles the test source code                                        -->
    <!-- =============================================================== -->
    <target name="compileTests" depends="prepare" description="compiles.">
        <mkdir dir="${test.classes.dir}" />
        <javac srcdir="${test.src.dir}" destdir="${test.classes.dir}" source="1.3" target="1.1" debug="on" deprecation="off" optimize="off">
            <classpath refid="test.classpath" />
        </javac>
    </target>


    <!-- ============================================================== -->
    <!-- Cleans up generated stuff                                      -->
    <!-- ============================================================== -->
    <target name="clean" depends="" description="Removes generated files.">
        <delete dir="${build.dir}" />
    </target>

    <target name="jarStubs" depends="compileStubs" description="Builds and jars just the stubs and beans">
        <mkdir dir="${jar.dir}" />
        <jar destfile="${stubs.jar.file}">
            <fileset dir="${stubs.dest}">
                <include name="**/*.class" />
            </fileset>
            <fileset dir="${stubs.src}">
                <include name="**/*.java" />
            </fileset>
        </jar>
        <copy toDir="${jar.dir}" file="${stubs.jar.file}" />
    </target>

    <!-- ============================================================== -->
    <!-- Creates the test jar files                                          -->
    <!-- ============================================================== -->
    <target name="jar" depends="compile" description="Builds the Jar Files">
        <mkdir dir="${jar.dir}" />
        <jar jarfile="${project.jarfile}" basedir="${classes.dir}">
            <manifest>
                <attribute name="Built-By" value="${user.name}" />
                <attribute name="Main-Class" value="${main.class}" />
            </manifest>
        </jar>
    </target>

    <!-- ============================================================== -->
    <!-- Creates the jar files                                          -->
    <!-- ============================================================== -->
    <target name="jarTests" depends="compileTests" description="Builds the Jar Files">
        <mkdir dir="${jar.dir}" />
        <jar jarfile="${test.project.jar}" basedir="${test.classes.dir}">
            <manifest>
                <attribute name="Built-By" value="${user.name}" />
            </manifest>
        </jar>
    </target>

    <!-- ============================================================== -->
    <!-- Runs the Discovery Client                                      -->
    <!-- ============================================================== -->
    <target name="runClient" depends="defineClasspaths" description="Run the sample Discovery Client">
        <java classname="gov.nih.nci.cagrid.discovery.client.DiscoveryClient" classpathref="run.classpath" fork="yes">
            <jvmarg value="-DGLOBUS_LOCATION=${ext.globus.dir}" />
        </java>
    </target>


    <!-- =================================================================== -->
    <!-- Builds Code Docuementation                                          -->
    <!-- =================================================================== -->
    <target name="javadoc" depends="compile" description="Creates the API documentation.">
        <javadoc packagenames="*" destdir="${javadoc.dir}" author="true" version="true" use="true" windowtitle="${project.name} API">
            <sourcepath>
                <pathelement path="${src.dir}" />
            </sourcepath>

            <classpath>
                <path refid="build.classpath" />
            </classpath>

            <tag name="todo" scope="all" description="To do:" />
            <tag name="created" scope="all" description="Created On:" />
        </javadoc>
    </target>


    <!-- Build and install extensions for introduce -->
    <target name="installIntroduceExtensions" description="Installs the caBIG extensions into Introduce (must build first).">

        <!-- copy libraries -->
        <copy todir="${introduce.extensions.dir}/lib">
            <fileset dir="${lib.dir}">
                <include name="*.jar" />
            </fileset>
            <fileset dir="${ext.lib.dir}">
                <include name="*.jar" />
            	<exclude name="${cagrid.master.jar.prefix}*Introduce*.jar"/>
            </fileset>
            <fileset dir="${jar.dir}">
                <include name="**/*.jar" />
                <exclude name="**/*test*.jar" />
            </fileset>
        </copy>

        <delete dir="${introduce.extensions.dir}/${ant.project.name}" />
        <mkdir dir="${introduce.extensions.dir}/${ant.project.name}" />

        <!-- extension description file -->
        <copy todir="${introduce.extensions.dir}/${ant.project.name}">
            <fileset dir="${basedir}/extension">
                <include name="**/*" />
            </fileset>
        </copy>
    </target>



    <!-- ============================================================== -->
    <!-- Builds from scratch                                                -->
    <!-- ============================================================== -->
    <target name="all" description="Builds the entire application" depends="jarStubs,jar" />
</project>

