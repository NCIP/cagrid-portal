package gov.nih.nci.cagrid.portal2.webauthn.service.globus;

import gov.nih.nci.cagrid.portal2.webauthn.service.WebAuthnSvcImpl;

import java.rmi.RemoteException;

/** 
 * DO NOT EDIT:  This class is autogenerated!
 *
 * This class implements each method in the portType of the service.  Each method call represented
 * in the port type will be then mapped into the unwrapped implementation which the user provides
 * in the WebAuthnSvcImpl class.  This class handles the boxing and unboxing of each method call
 * so that it can be correclty mapped in the unboxed interface that the developer has designed and 
 * has implemented.  Authorization callbacks are automatically made for each method based
 * on each methods authorization requirements.
 * 
 * @created by Introduce Toolkit version 1.1
 * 
 */
public class WebAuthnSvcProviderImpl{
	
	WebAuthnSvcImpl impl;
	
	public WebAuthnSvcProviderImpl() throws RemoteException {
		impl = new WebAuthnSvcImpl();
	}
	

    public gov.nih.nci.cagrid.portal2.webauthn.stubs.GetUserInfoResponse getUserInfo(gov.nih.nci.cagrid.portal2.webauthn.stubs.GetUserInfoRequest params) throws RemoteException, gov.nih.nci.cagrid.portal2.webauthn.types.faults.InvalidKeyFault {
    gov.nih.nci.cagrid.portal2.webauthn.stubs.GetUserInfoResponse boxedResult = new gov.nih.nci.cagrid.portal2.webauthn.stubs.GetUserInfoResponse();
    boxedResult.setUserInfo(impl.getUserInfo(params.getLoginKey()));
    return boxedResult;
  }

    public gov.nih.nci.cagrid.portal2.webauthn.stubs.CreateLoginKeyForLocalUserResponse createLoginKeyForLocalUser(gov.nih.nci.cagrid.portal2.webauthn.stubs.CreateLoginKeyForLocalUserRequest params) throws RemoteException, gov.nih.nci.cagrid.portal2.webauthn.types.authenticationservice.faults.InvalidCredentialFault, gov.nih.nci.cagrid.portal2.webauthn.types.authenticationservice.faults.InsufficientAttributeFault, gov.nih.nci.cagrid.portal2.webauthn.types.authenticationservice.faults.AuthenticationProviderFault, gov.nih.nci.cagrid.portal2.webauthn.types.faults.WebAuthnSvcFault {
    gov.nih.nci.cagrid.portal2.webauthn.stubs.CreateLoginKeyForLocalUserResponse boxedResult = new gov.nih.nci.cagrid.portal2.webauthn.stubs.CreateLoginKeyForLocalUserResponse();
    boxedResult.setResponse(impl.createLoginKeyForLocalUser(params.getCredential().getCredential()));
    return boxedResult;
  }

    public gov.nih.nci.cagrid.portal2.webauthn.stubs.CreateLoginKeyForGridUserResponse createLoginKeyForGridUser(gov.nih.nci.cagrid.portal2.webauthn.stubs.CreateLoginKeyForGridUserRequest params) throws RemoteException, gov.nih.nci.cagrid.portal2.webauthn.types.authenticationservice.faults.InvalidCredentialFault, gov.nih.nci.cagrid.portal2.webauthn.types.authenticationservice.faults.InsufficientAttributeFault, gov.nih.nci.cagrid.portal2.webauthn.types.authenticationservice.faults.AuthenticationProviderFault, gov.nih.nci.cagrid.portal2.webauthn.types.faults.WebAuthnSvcFault {
    gov.nih.nci.cagrid.portal2.webauthn.stubs.CreateLoginKeyForGridUserResponse boxedResult = new gov.nih.nci.cagrid.portal2.webauthn.stubs.CreateLoginKeyForGridUserResponse();
    boxedResult.setResponse(impl.createLoginKeyForGridUser(params.getIdpUrl(),params.getCredential().getCredential()));
    return boxedResult;
  }

}
