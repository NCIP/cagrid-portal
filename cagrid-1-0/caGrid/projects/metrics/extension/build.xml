<?xml version="1.0"?>
<project default="all" name="build transfer extension" basedir=".">

	<!-- ============================================================== -->
	<!-- MASTER BUILD FILE DO NOT EDIT OR INTRODUCE MAY OVERWRITE       -->
	<!-- In order to customize the build please edit the dev-build.xml  -->
	<!-- ============================================================== -->

	<property file="${basedir}/ext/resources/cagrid.properties" />
	<property name="jar.prefix" value="${cagrid.master.jar.prefix}MetricsExtension" />
	
	<!-- Define the environment variable -->
	<property environment="env" />

	<property file="introduce.properties" />

	<!-- Important directories and files -->
	<property name="src.dir" value="src" />
	<property name="ext.lib.dir" value="ext/lib" />
	<property name="lib.dir" value="lib" />


	<!-- Basic Build directories -->

	<!-- Auxiliary directory where all the intermediate files will be placed -->
	<property name="build.dir" location="build" />
	<!-- Directory for compiled service classes -->
	<property name="build.dest" location="${build.dir}/classes" />
	<!-- Directory for compiled JAR files (additional library files required by
	     the service will also be placed here) -->
	<property name="build.lib.dir" location="${build.dir}/lib" />


	<!-- We want detailed error messages -->
	<property name="java.debug" value="on" />
	
	<!-- ============================================================== -->
	<!-- Globus properties                                              -->
	<!-- ============================================================== -->
	<target name="checkGlobus" depends="setGlobus">
		<condition property="globus.not.found">
			<or>
				<not>
					<isset property="ext.globus.dir" />
				</not>
				<equals arg1="${ext.globus.dir}" arg2="" />
			</or>
		</condition>
		<fail message="Globus installation is not set in either GLOBUS_LOCATION or ext.globus.dir" if="globus.not.found" />
		<echo message="Globus: ${ext.globus.dir}" />
	</target>
	<target name="setGlobus" if="env.GLOBUS_LOCATION">
		<!-- GT4 build files and directories-->
		<property name="ext.globus.dir" value="${env.GLOBUS_LOCATION}" />
	</target>
	


	<!-- Sets up the build directory structure -->
	<target name="init" depends="defineClasspaths">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.dest}" />
		<mkdir dir="${build.lib.dir}" />
	</target>

	<target name="defineClasspaths" depends="checkGlobus" >
		<path id="build.classpath">
			<fileset dir="${lib.dir}">
				<include name="*.jar" />
			</fileset>
			<fileset dir="${ext.lib.dir}">
				<include name="*.jar" />
			</fileset>
			<fileset dir="${ext.globus.dir}/lib">
				<include name="*.jar" />
			</fileset>
		</path>
	</target>


	<!-- Compile the implementation classes (service, resource, etc.) -->
	<target name="compile" depends="init" description="Compiles the service.">
		<javac srcdir="${src.dir}" classpathref="build.classpath" includes="**" destdir="${build.dest}" debug="${java.debug}" deprecation="${deprecation}" />

		<!-- Copy the source code, wsdd, properties, etc to the build dir for include in the jar -->
		<copy toDir="${build.dest}">
			<fileset dir="${src.dir}">
				<include name="**/*" />
			</fileset>
		</copy>
	</target>


	<!-- Create a JAR file with the implementation classes -->
	<target name="jar" depends="compile">
		<jar jarfile="${build.lib.dir}/${jar.prefix}.jar" basedir="${build.dest}">
			<include name="**/*" />
		</jar>
	</target>


	<!-- Empty target, in case we simply want to generate the JAR files -->
	<target name="jars" depends="jar" />


	<!-- Clean up all the intermediate files -->
	<target name="clean" description="Removes all generated build artifacts.">
		<delete dir="${build.dir}" />
	</target>


	<!-- Default target "all" builds and jars everything, including test....does not make a GAR-->
	<target name="all" depends="jars" description="Builds the entire service." />

</project>