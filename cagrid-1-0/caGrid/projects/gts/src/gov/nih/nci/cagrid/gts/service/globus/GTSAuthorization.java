package gov.nih.nci.cagrid.gts.service.globus;


import java.rmi.RemoteException;

/** 
 * DO NOT EDIT:  This class is autogenerated!
 *
 * This class will have a authorize<methodName> method for each method on this grid service.
 * The method is responsibe for making any authorization callouts required to satisfy the 
 * authorization requirements placed on each method call.  Each method will either simple return
 * apon a successful authorization or will throw an exception apon a failed authorization.
 * 
 * @created by Introduce Toolkit version 1.0
 * 
 */
public class GTSAuthorization{
	
	
	public GTSAuthorization() {
	}
	
	public static String getCallerIdentity() {
		String caller = org.globus.wsrf.security.SecurityManager.getManager().getCaller();
		if ((caller == null) || (caller.equals("<anonymous>"))) {
			return null;
		} else {
			return caller;
		}
	}
	
					
	public static void authorizeAddTrustedAuthority() throws RemoteException {
		
		
	}
					
	public static void authorizeFindTrustedAuthorities() throws RemoteException {
		
		
	}
					
	public static void authorizeRemoveTrustedAuthority() throws RemoteException {
		
		
	}
					
	public static void authorizeAddPermission() throws RemoteException {
		
		
	}
					
	public static void authorizeFindPermissions() throws RemoteException {
		
		
	}
					
	public static void authorizeRevokePermission() throws RemoteException {
		
		
	}
					
	public static void authorizeUpdateTrustedAuthority() throws RemoteException {
		
		
	}
					
	public static void authorizeAddTrustLevel() throws RemoteException {
		
		
	}
					
	public static void authorizeUpdateTrustLevel() throws RemoteException {
		
		
	}
					
	public static void authorizeGetTrustLevels() throws RemoteException {
		
		
	}
					
	public static void authorizeRemoveTrustLevel() throws RemoteException {
		
		
	}
					
	public static void authorizeAddAuthority() throws RemoteException {
		
		
	}
					
	public static void authorizeUpdateAuthority() throws RemoteException {
		
		
	}
					
	public static void authorizeUpdateAuthorityPriorities() throws RemoteException {
		
		
	}
					
	public static void authorizeGetAuthorities() throws RemoteException {
		
		
	}
					
	public static void authorizeRemoveAuthority() throws RemoteException {
		
		
	}
					
	public static void authorizeUpdateCRL() throws RemoteException {
		
		
	}
					
	public static void authorizeValidate() throws RemoteException {
		
		
	}
	
	
}
