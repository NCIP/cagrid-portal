<?xml version="1.0"?>
<project name="Developer Modified Build File" basedir=".">
	<!-- ============================================================== -->
	<!-- This file is designed to allow the developer to extend the     -->
	<!-- build process without having to edit the master build.xml      -->
	<!-- file. DO NOT REMOVE ANY TARGETS                                -->
	<!-- ============================================================== -->


	<!-- ============================================================== -->
	<!-- Place any other properties you will need here                  -->
	<!-- ============================================================== -->
	<property file="${basedir}/ext/resources/cagrid.properties" />
	<property name="jar.prefix" value="${cagrid.master.jar.prefix}gts" />
	<property name="ext.lib" value="${basedir}/ext/lib" />
	<property name="ext.test.lib" value="${basedir}/ext/test/lib" />

	<!-- Auxiliary directory where all the intermediate files will be placed -->
	<property name="build.dir" location="build" />
	<!-- Directory for compiled service classes -->
	<property name="build.dest" location="${build.dir}/classes" />

	<property name="common.jar.name" value="${jar.prefix}-common.jar" />
	<property name="client.jar.name" value="${jar.prefix}-client.jar" />
	<property name="ui.jar.name" value="${jar.prefix}-ui.jar" />
	<property name="service.jar.name" value="${jar.prefix}-service.jar" />
	<property name="stubs.jar.name" value="${jar.prefix}-stubs.jar" />

	<!-- Important test directories and files -->
	<property name="test.dir" value="test" />
	<property name="test.src.dir" value="${test.dir}/src" />
	<property name="test.lib.dir" value="${test.dir}/lib" />
	<property name="test.log.dir" value="test/logs" />
	<property name="junit.results.dir" value="${test.log.dir}/junit" />
	<property name="force.config.replace" value="false" />


	<target name="defineClasspaths" depends="checkGlobus">
		<runtarget target="defineExtendedClasspaths" />
		<path id="base.classpath">
			<fileset dir="${lib.dir}">
				<include name="*.jar" />
			</fileset>
			<fileset dir="${ext.globus.dir}/lib">
				<include name="*.jar" />
				<exclude name="${stubs.jar.name}" />
				<exclude name="${common.jar.name}" />
				<exclude name="${client.jar.name}" />
				<exclude name="${service.jar.name}" />
				<exclude name="${ui.jar.name}" />
			</fileset>
			<path refid="base.extended.classpath" />
		</path>
		<path id="service.build.classpath">
			<pathelement location="${stubs.dest}" />
			<path refid="service.build.extended.classpath" />
			<path refid="base.classpath" />
		</path>
		<path id="service.run.classpath">
			<pathelement location="${build.dest}" />
			<path refid="service.run.extended.classpath" />
			<path refid="service.build.classpath" />
		</path>
		<path id="test.build.classpath">
			<fileset dir="${test.lib.dir}">
				<include name="*.jar" />
			</fileset>
			<pathelement location="${build.dest}" />
			<path refid="test.build.extended.classpath" />
			<path refid="service.build.classpath" />
		</path>
		<path id="test.run.classpath">
			<pathelement location="${test.build.dest}" />
			<path refid="test.run.extended.classpath" />
			<path refid="test.build.classpath" />
		</path>
		<path id="run.classpath">
			<pathelement location="${build.dest}" />
			<path refid="run.extended.classpath" />
			<path refid="service.build.classpath" />
			<pathelement location="${ext.globus.dir}" />
		</path>
		<path id="processor.run.classpath">
			<fileset dir="${tools.lib.dir}">
				<include name="*.jar" />
			</fileset>
			<path refid="run.classpath" />
		</path>
	</target>

	<!-- ============================================================== -->
	<!-- Create any extended Classpaths here                            -->
	<!-- ============================================================== -->
	<target name="defineExtendedClasspaths">
		<path id="base.extended.classpath">
			<fileset dir="${ext.lib}">
				<include name="*.jar" />
			</fileset>
		</path>
		<path id="service.build.extended.classpath">
		</path>
		<path id="service.run.extended.classpath">
		</path>
		<path id="test.build.extended.classpath">
			<fileset dir="${ext.test.lib}">
				<include name="*.jar" />
			</fileset>
		</path>
		<path id="test.run.extended.classpath">
			<pathelement location="${test.dir}/resources" />
		</path>
		<path id="run.extended.classpath">
		</path>
	</target>

	<!-- ============================================================== -->
	<!-- Pre Init Target                                                -->
	<!-- ============================================================== -->
	<target name="preInit">
		<runtarget target="configure" />
	</target>

	<!-- ============================================================== -->
	<!-- Post Init Build Target                                         -->
	<!-- ============================================================== -->
	<target name="postInit">

	</target>


	<!-- ============================================================== -->
	<!-- Pre Stubs Target                                               -->
	<!-- ============================================================== -->
	<target name="preStubs">

	</target>

	<!-- ============================================================== -->
	<!-- Post Stubs Build Target                                        -->
	<!-- ============================================================== -->
	<target name="postStubs">

	</target>

	<!-- ============================================================== -->
	<!-- Pre Compile Stubs Build Target                                 -->
	<!-- ============================================================== -->
	<target name="preCompileStubs">

	</target>

	<!-- ============================================================== -->
	<!-- Post Compile Stubs Build Target                                -->
	<!-- ============================================================== -->
	<target name="postCompileStubs">

	</target>

	<!-- ============================================================== -->
	<!-- Pre Jar Stubs Build Target                                     -->
	<!-- ============================================================== -->
	<target name="preJarStubs">

	</target>

	<!-- ============================================================== -->
	<!-- Post Jar Stubs Build Target                                    -->
	<!-- ============================================================== -->
	<target name="postJarStubs">

	</target>

	<!-- ============================================================== -->
	<!-- Pre Compile Build Target                                       -->
	<!-- ============================================================== -->
	<target name="preCompile">

	</target>

	<!-- ============================================================== -->
	<!-- Post Compile Build Target                                       -->
	<!-- ============================================================== -->
	<target name="postCompile">

	</target>

	<!-- ============================================================== -->
	<!-- Pre Jar Build Target                                       -->
	<!-- ============================================================== -->
	<target name="preJar">

	</target>

	<!-- Create a JAR file with the implementation classes -->
	<target name="jar" depends="compile">
		<jar jarfile="${build.lib.dir}/${client.jar.name}" basedir="${build.dest}">
			<include name="**/client/**" />
		</jar>
		<jar jarfile="${build.lib.dir}/${service.jar.name}" basedir="${build.dest}">
			<include name="**/service/**" />
		</jar>
		<jar jarfile="${build.lib.dir}/${ui.jar.name}" basedir="${build.dest}">
			<include name="**/ui/**" />
			<fileset dir="resources/ui/gts" />
		</jar>
		<jar jarfile="${build.lib.dir}/${common.jar.name}" basedir="${build.dest}">
			<include name="**/*.xml" />
			<include name="**/*.dtd" />
			<include name="**/*.properties" />
			<include name="**/*.xsd" />
			<include name="**/common/**" />
			<include name="**/*.wsdd" />
			<exclude name="**/client/**" />
			<exclude name="**/service/**" />
			<exclude name="**/ui/**" />
		</jar>
		<runtarget target="postJar" />
	</target>

	<!-- ============================================================== -->
	<!-- Post Jar Build Target                                          -->
	<!-- ============================================================== -->
	<target name="postJar">

	</target>

	<!-- ============================================================== -->
	<!-- Pre Compile Tests Build Target                                 -->
	<!-- ============================================================== -->
	<target name="preCompileTests">

	</target>

	<!-- ============================================================== -->
	<!-- Post Compile Tests Build Target                                -->
	<!-- ============================================================== -->
	<target name="postCompileTests">

	</target>

	<!-- ============================================================== -->
	<!-- Pre Jar Tests Build Target                                     -->
	<!-- ============================================================== -->
	<target name="preJarTests">

	</target>

	<!-- ============================================================== -->
	<!-- Post Jar Tests Build Target                                    -->
	<!-- ============================================================== -->
	<target name="postJarTests">

	</target>

	<!-- ============================================================== -->
	<!-- Pre Clean Target                                               -->
	<!-- ============================================================== -->
	<target name="preClean">

	</target>

	<!-- ============================================================== -->
	<!-- Post Clean Target                                              -->
	<!-- ============================================================== -->
	<target name="postClean">

	</target>


	<target name="configure" description="Configures the project based on settings.">
		<copy filtering="true" file="deploy.properties.template" tofile="deploy.properties" overwrite="true">
			<filterset filtersfile="${basedir}/ext/resources/service_urls.properties" />
		</copy>
	</target>


	<!-- Post Introduce Edit-->
	<target name="nuke" description="Nukes the GTS Test DB">
		<java classname="gov.nih.nci.cagrid.gts.test.Nuker" fork="no">
			<classpath>
				<path refid="test.run.classpath" />
				<pathelement location="${test.dir}/resources" />
			</classpath>
		</java>
	</target>

	<!-- call the test target for each project and aggregates the log resutls  -->
	<target name="test" depends="checkGlobus,create_config_files,nuke">
		<echo message="Test results dir: ${junit.results.dir}" />
		<mkdir dir="${junit.results.dir}" />
		<junit dir="${basedir}" printsummary="yes" errorproperty="test.failed" failureproperty="test.failed" showoutput="true" forkmode="once">
			<sysproperty key="basedir" value="${basedir}" />
			<jvmarg value="-Dbuild.dir=${build.dir}" />
			<jvmarg value="-Djava.endorsed.dirs=${ext.endorsed.dir}" />
			<classpath refid="test.run.classpath" />
			<formatter type="xml" />
			<batchtest fork="yes" todir="${junit.results.dir}">
				<fileset dir="${test.src.dir}">
					<include name="**/Test*.java" />
					<include name="**/*TestCase.java" />
				</fileset>
			</batchtest>
		</junit>
		<fail message="Tests failed! Check test reports." if="test.failed" />
	</target>

	<!-- ============================================================== -->
	<!-- Creates conf files from examples                               -->
	<!-- ============================================================== -->
	<target name="create_config_files" description="Creates conf files from examples.
		Set property force.config.replace to true to force replacement.">
		<copy todir="${test.dir}/resources" overwrite="${force.config.replace}">
			<fileset dir="${test.dir}/resources">
				<include name="**/*.example" />
			</fileset>
			<mapper type="glob" from="*.example" to="*" />
		</copy>
	</target>

	<!-- Post Introduce Edit-->
	<target name="ui" description="Run the GTS UI" depends="checkGlobus">
		<java classname="org.cagrid.grape.GridApplication" fork="yes">
			<arg value="etc/gts-ui.xml" />
			<classpath refid="run.classpath" />
			<classpath>
				<pathelement location="resources/ui/gts" />
			</classpath>
		</java>
	</target>

	<target name="addAdmin" description="Add a administrator to the GTS" depends="checkGlobus">
		<input message="Please enter the grid identity for the admin you wish to add:" addproperty="gridId.input" />
		<java classname="gov.nih.nci.cagrid.gts.tools.service.AntPermissionBootstapper" fork="yes">
			<arg value="etc/gts-conf.xml" />
			<arg value="${gridId.input}" />
			<classpath refid="service.run.classpath" />
		</java>
	</target>


</project>