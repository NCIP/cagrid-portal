<project name="test" default="all">
    
    <property file="build.properties"/>
    <property name="build.dir" value="build"/>
    <property name="build.classes.dir" value="build/classes"/>
    <property name="upt.tomcat.home" value="${basedir}/for_upt/jakarta-tomcat-5.0.30"/>
    <property name="sdk.tomcat.home" value="${basedir}/for_sdk/apache-tomcat-4.1.34"/>
    <property name="war.name" value="example"/>
    
    <path id="cp">
        <fileset dir="localhost/WEB-INF/lib">
            <include name="*.jar"/>
        </fileset>
    </path>
    
    
    
    <target name="init">
        <mkdir dir="${build.classes.dir}"/>
    </target>
    
    <target name="prepare-files" depends="init">
        <copy todir="${build.dir}" overwrite="true">
            <fileset dir=".">
                <include name="*.sql"/>
            </fileset>
            <fileset dir="etc">
                <include name="ApplicationSecurityConfig.xml"/>
                <include name="jaas.config"/>
                <include name="hibernate.cfg.xml"/>
            </fileset>
            <filterset>
                <filter token="CATALINA_HOME" value="${upt.tomcat.home}"/>
                <filter token="DB_HOST" value="${db.host}"/>
                <filter token="DB_PORT" value="${db.port}"/>
                <filter token="DB_NAME" value="${db.name}"/>
                <filter token="DB_USR" value="${db.usr}"/>
                <filter token="DB_PWD" value="${db.pwd}"/>
                <filter token="GRID_GROUPER_URL" value="${grid.grouper.url}"/>
                
            </filterset>
        </copy>
        
    </target>
    
    <target name="init-sdk-db">
        
        <sql
            driver="com.mysql.jdbc.Driver"
            url="jdbc:mysql://${db.host}:${db.port}/"
            userid="root"
            password="${db.root}"
            classpathref="cp"
            onerror="continue"
            >
            drop database ${db.name};
            create database ${db.name};
            grant all privileges on ${db.name}.* to '${db.usr}'@'%' identified by '${db.pwd}';
            
        </sql>
        
        <sql
            driver="com.mysql.jdbc.Driver"
            url="jdbc:mysql://${db.host}:${db.port}/${db.name}"
            userid="${db.usr}"
            password="${db.pwd}"
            src="${build.dir}/authztest.sql"
            classpathref="cp"
        />
        <!--
        <sql
            driver="com.mysql.jdbc.Driver"
            url="jdbc:mysql://${db.host}:${db.port}/${db.name}"
            userid="${db.usr}"
            password="${db.pwd}"
            src="${build.dir}/cabioexampleschema.sql"
            classpathref="cp"
        />
        
        <sql
            driver="com.mysql.jdbc.Driver"
            url="jdbc:mysql://${db.host}:${db.port}/${db.name}"
            userid="${db.usr}"
            password="${db.pwd}"
            src="${build.dir}/cabioexampledata.sql"
            classpathref="cp"
        />
        -->
        
    </target>
    
    <target name="war-sdk" depends="prepare-files">
        
        <copy todir="${build.dir}">
            <fileset dir=".">
                <include name="localhost/**"/>
            </fileset>
        </copy>
        
        <copy todir="${sdk.tomcat.home}/conf">
            <fileset dir="${build.dir}">
                <include name="ApplicationSecurityConfig.xml"/>
                <include name="jaas.config"/>
                <include name="hibernate.cfg.xml"/>
            </fileset>
        </copy>

        <copy todir="${sdk.tomcat.home}/common/lib">
            <fileset dir="../../lib">
                <include name="csmapi.jar"/>
                <include name="hibernate*.jar"/>
                <include name="commons-lang.jar"/>
            </fileset>
        </copy>
        
        <!--
        <copy todir="${build.dir}/localhost/WEB-INF/classes" flatten="true" overwrite="true">
            <fileset dir="${build.dir}">
                <include name="ApplicationSecurityConfig.xml"/>
            </fileset>
        </copy>
-->
        <copy todir="${build.dir}/localhost/WEB-INF/lib" flatten="true" overwrite="true">
            <fileset dir="../../build">
                <include name="pdp.jar"/>
            </fileset>

            <fileset dir="../../lib">
                <include name="hibernate3.jar"/>
                <include name="csmapi.jar"/>                
            </fileset>

            <fileset dir="../../ext/lib">
                <include name="**/*.jar"/>
                <exclude name="**/*log*.jar"/>
                <exclude name="**/*jdom*.jar"/>
            </fileset>
        </copy>
        
        <!--
        <mkdir dir="${sdk.tomcat.home}/webapps/example"/>
        <copy todir="${sdk.tomcat.home}/webapps/example">
            <fileset dir="${build.dir}/localhost">
                <include name="**"/>
            </fileset>
        </copy>
        <copy todir="${sdk.tomcat.home}/webapps/example/WEB-INF/lib">
            <fileset dir="${upt.tomcat.home}/webapps/upt/WEB-INF/lib">
                <include name="hibernate3.jar"/>
            </fileset>
        </copy>
        -->
        
        <jar basedir="${build.dir}/localhost" destfile="${sdk.tomcat.home}/webapps/${war.name}.war"/>
        
    </target>
    
    <target name="configure-upt">
        <copy todir="${upt.tomcat.home}/conf">
            <fileset dir="${build.dir}">
                <include name="ApplicationSecurityConfig.xml"/>
                <include name="jaas.config"/>
                <include name="hibernate.cfg.xml"/>
            </fileset>
        </copy>
    </target>
    
    <target name="auhzTest">
        <ant file="../../build.xml" target="compileTest"/>
        <java class="gov.nih.nci.cagrid.authorization.TestAuthorization">
            <jvmarg value=""/>
            <jvmarg value=""/>
            <classpath refid="cp"/>
            <classpath>
                <pathelement dir="../../build/classes"/>
                <fileset dir="../../lib">
                    <include name="*.jar"/>
                </fileset>
            </classpath>
        </java>
    </target>
    
    <target name="clean">
        <delete dir="${build.dir}"/>
        <delete dir="${sdk.tomcat.home}/webapps/example"/>
        <delete file="${sdk.tomcat.home}/webapps/example.war"/>
    </target>
    
</project>