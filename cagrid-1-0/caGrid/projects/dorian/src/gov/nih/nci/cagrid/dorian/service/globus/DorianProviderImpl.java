package gov.nih.nci.cagrid.dorian.service.globus;

import gov.nih.nci.cagrid.dorian.service.DorianImpl;

import java.rmi.RemoteException;

/** 
 *  DO NOT EDIT:  This class is autogenerated!
 * 
 * @created by Introduce Toolkit version 1.0
 * 
 */
public class DorianProviderImpl{
	
	DorianImpl impl;
	
	public DorianProviderImpl() throws RemoteException {
		impl = new DorianImpl();
	}
	

	public gov.nih.nci.cagrid.dorian.stubs.RegisterWithIdPResponse registerWithIdP(gov.nih.nci.cagrid.dorian.stubs.RegisterWithIdPRequest params) throws RemoteException, gov.nih.nci.cagrid.dorian.stubs.types.DorianInternalFault, gov.nih.nci.cagrid.dorian.stubs.types.InvalidUserPropertyFault {
		DorianAuthorization.authorizeRegisterWithIdP();
		gov.nih.nci.cagrid.dorian.stubs.RegisterWithIdPResponse boxedResult = new gov.nih.nci.cagrid.dorian.stubs.RegisterWithIdPResponse();
		boxedResult.setResponse(impl.registerWithIdP(params.getApplication().getApplication()));
		return boxedResult;
	}

	public gov.nih.nci.cagrid.dorian.stubs.FindIdPUsersResponse findIdPUsers(gov.nih.nci.cagrid.dorian.stubs.FindIdPUsersRequest params) throws RemoteException, gov.nih.nci.cagrid.dorian.stubs.types.DorianInternalFault, gov.nih.nci.cagrid.dorian.stubs.types.PermissionDeniedFault {
		DorianAuthorization.authorizeFindIdPUsers();
		gov.nih.nci.cagrid.dorian.stubs.FindIdPUsersResponse boxedResult = new gov.nih.nci.cagrid.dorian.stubs.FindIdPUsersResponse();
		boxedResult.setIdPUser(impl.findIdPUsers(params.getFilter().getIdPUserFilter()));
		return boxedResult;
	}

	public gov.nih.nci.cagrid.dorian.stubs.UpdateIdPUserResponse updateIdPUser(gov.nih.nci.cagrid.dorian.stubs.UpdateIdPUserRequest params) throws RemoteException, gov.nih.nci.cagrid.dorian.stubs.types.DorianInternalFault, gov.nih.nci.cagrid.dorian.stubs.types.NoSuchUserFault, gov.nih.nci.cagrid.dorian.stubs.types.PermissionDeniedFault {
		DorianAuthorization.authorizeUpdateIdPUser();
		gov.nih.nci.cagrid.dorian.stubs.UpdateIdPUserResponse boxedResult = new gov.nih.nci.cagrid.dorian.stubs.UpdateIdPUserResponse();
		impl.updateIdPUser(params.getUser().getIdPUser());
		return boxedResult;
	}

	public gov.nih.nci.cagrid.dorian.stubs.RemoveIdPUserResponse removeIdPUser(gov.nih.nci.cagrid.dorian.stubs.RemoveIdPUserRequest params) throws RemoteException, gov.nih.nci.cagrid.dorian.stubs.types.DorianInternalFault, gov.nih.nci.cagrid.dorian.stubs.types.PermissionDeniedFault {
		DorianAuthorization.authorizeRemoveIdPUser();
		gov.nih.nci.cagrid.dorian.stubs.RemoveIdPUserResponse boxedResult = new gov.nih.nci.cagrid.dorian.stubs.RemoveIdPUserResponse();
		impl.removeIdPUser(params.getUserId());
		return boxedResult;
	}

	public gov.nih.nci.cagrid.dorian.stubs.AuthenticateWithIdPResponse authenticateWithIdP(gov.nih.nci.cagrid.dorian.stubs.AuthenticateWithIdPRequest params) throws RemoteException, gov.nih.nci.cagrid.dorian.stubs.types.DorianInternalFault, gov.nih.nci.cagrid.dorian.stubs.types.PermissionDeniedFault {
		DorianAuthorization.authorizeAuthenticateWithIdP();
		gov.nih.nci.cagrid.dorian.stubs.AuthenticateWithIdPResponse boxedResult = new gov.nih.nci.cagrid.dorian.stubs.AuthenticateWithIdPResponse();
		boxedResult.setSAMLAssertion(impl.authenticateWithIdP(params.getCred().getBasicAuthCredential()));
		return boxedResult;
	}

	public gov.nih.nci.cagrid.dorian.stubs.CreateProxyResponse createProxy(gov.nih.nci.cagrid.dorian.stubs.CreateProxyRequest params) throws RemoteException, gov.nih.nci.cagrid.dorian.stubs.types.DorianInternalFault, gov.nih.nci.cagrid.dorian.stubs.types.InvalidAssertionFault, gov.nih.nci.cagrid.dorian.stubs.types.InvalidProxyFault, gov.nih.nci.cagrid.dorian.stubs.types.UserPolicyFault, gov.nih.nci.cagrid.dorian.stubs.types.PermissionDeniedFault {
		DorianAuthorization.authorizeCreateProxy();
		gov.nih.nci.cagrid.dorian.stubs.CreateProxyResponse boxedResult = new gov.nih.nci.cagrid.dorian.stubs.CreateProxyResponse();
		boxedResult.setX509Certificate(impl.createProxy(params.getSaml().getSAMLAssertion(),params.getPublicKey().getPublicKey(),params.getLifetime().getProxyLifetime(),params.getDelegation().getDelegationPathLength()));
		return boxedResult;
	}

	public gov.nih.nci.cagrid.dorian.stubs.GetCACertificateResponse getCACertificate(gov.nih.nci.cagrid.dorian.stubs.GetCACertificateRequest params) throws RemoteException, gov.nih.nci.cagrid.dorian.stubs.types.DorianInternalFault {
		DorianAuthorization.authorizeGetCACertificate();
		gov.nih.nci.cagrid.dorian.stubs.GetCACertificateResponse boxedResult = new gov.nih.nci.cagrid.dorian.stubs.GetCACertificateResponse();
		boxedResult.setX509Certificate(impl.getCACertificate());
		return boxedResult;
	}

	public gov.nih.nci.cagrid.dorian.stubs.GetTrustedIdPsResponse getTrustedIdPs(gov.nih.nci.cagrid.dorian.stubs.GetTrustedIdPsRequest params) throws RemoteException, gov.nih.nci.cagrid.dorian.stubs.types.DorianInternalFault, gov.nih.nci.cagrid.dorian.stubs.types.PermissionDeniedFault {
		DorianAuthorization.authorizeGetTrustedIdPs();
		gov.nih.nci.cagrid.dorian.stubs.GetTrustedIdPsResponse boxedResult = new gov.nih.nci.cagrid.dorian.stubs.GetTrustedIdPsResponse();
		boxedResult.setTrustedIdP(impl.getTrustedIdPs());
		return boxedResult;
	}

	public gov.nih.nci.cagrid.dorian.stubs.AddTrustedIdPResponse addTrustedIdP(gov.nih.nci.cagrid.dorian.stubs.AddTrustedIdPRequest params) throws RemoteException, gov.nih.nci.cagrid.dorian.stubs.types.DorianInternalFault, gov.nih.nci.cagrid.dorian.stubs.types.InvalidTrustedIdPFault, gov.nih.nci.cagrid.dorian.stubs.types.PermissionDeniedFault {
		DorianAuthorization.authorizeAddTrustedIdP();
		gov.nih.nci.cagrid.dorian.stubs.AddTrustedIdPResponse boxedResult = new gov.nih.nci.cagrid.dorian.stubs.AddTrustedIdPResponse();
		boxedResult.setTrustedIdP(impl.addTrustedIdP(params.getIdp().getTrustedIdP()));
		return boxedResult;
	}

	public gov.nih.nci.cagrid.dorian.stubs.UpdateTrustedIdPResponse updateTrustedIdP(gov.nih.nci.cagrid.dorian.stubs.UpdateTrustedIdPRequest params) throws RemoteException, gov.nih.nci.cagrid.dorian.stubs.types.DorianInternalFault, gov.nih.nci.cagrid.dorian.stubs.types.InvalidTrustedIdPFault, gov.nih.nci.cagrid.dorian.stubs.types.PermissionDeniedFault {
		DorianAuthorization.authorizeUpdateTrustedIdP();
		gov.nih.nci.cagrid.dorian.stubs.UpdateTrustedIdPResponse boxedResult = new gov.nih.nci.cagrid.dorian.stubs.UpdateTrustedIdPResponse();
		impl.updateTrustedIdP(params.getTrustedIdP().getTrustedIdP());
		return boxedResult;
	}

	public gov.nih.nci.cagrid.dorian.stubs.RemoveTrustedIdPResponse removeTrustedIdP(gov.nih.nci.cagrid.dorian.stubs.RemoveTrustedIdPRequest params) throws RemoteException, gov.nih.nci.cagrid.dorian.stubs.types.DorianInternalFault, gov.nih.nci.cagrid.dorian.stubs.types.InvalidTrustedIdPFault, gov.nih.nci.cagrid.dorian.stubs.types.PermissionDeniedFault {
		DorianAuthorization.authorizeRemoveTrustedIdP();
		gov.nih.nci.cagrid.dorian.stubs.RemoveTrustedIdPResponse boxedResult = new gov.nih.nci.cagrid.dorian.stubs.RemoveTrustedIdPResponse();
		impl.removeTrustedIdP(params.getTrustedIdP().getTrustedIdP());
		return boxedResult;
	}

	public gov.nih.nci.cagrid.dorian.stubs.FindIFSUsersResponse findIFSUsers(gov.nih.nci.cagrid.dorian.stubs.FindIFSUsersRequest params) throws RemoteException, gov.nih.nci.cagrid.dorian.stubs.types.DorianInternalFault, gov.nih.nci.cagrid.dorian.stubs.types.PermissionDeniedFault {
		DorianAuthorization.authorizeFindIFSUsers();
		gov.nih.nci.cagrid.dorian.stubs.FindIFSUsersResponse boxedResult = new gov.nih.nci.cagrid.dorian.stubs.FindIFSUsersResponse();
		boxedResult.setIFSUser(impl.findIFSUsers(params.getFilter().getIFSUserFilter()));
		return boxedResult;
	}

	public gov.nih.nci.cagrid.dorian.stubs.UpdateIFSUserResponse updateIFSUser(gov.nih.nci.cagrid.dorian.stubs.UpdateIFSUserRequest params) throws RemoteException, gov.nih.nci.cagrid.dorian.stubs.types.DorianInternalFault, gov.nih.nci.cagrid.dorian.stubs.types.InvalidUserFault, gov.nih.nci.cagrid.dorian.stubs.types.PermissionDeniedFault {
		DorianAuthorization.authorizeUpdateIFSUser();
		gov.nih.nci.cagrid.dorian.stubs.UpdateIFSUserResponse boxedResult = new gov.nih.nci.cagrid.dorian.stubs.UpdateIFSUserResponse();
		impl.updateIFSUser(params.getUser().getIFSUser());
		return boxedResult;
	}

	public gov.nih.nci.cagrid.dorian.stubs.RemoveIFSUserResponse removeIFSUser(gov.nih.nci.cagrid.dorian.stubs.RemoveIFSUserRequest params) throws RemoteException, gov.nih.nci.cagrid.dorian.stubs.types.DorianInternalFault, gov.nih.nci.cagrid.dorian.stubs.types.InvalidUserFault, gov.nih.nci.cagrid.dorian.stubs.types.PermissionDeniedFault {
		DorianAuthorization.authorizeRemoveIFSUser();
		gov.nih.nci.cagrid.dorian.stubs.RemoveIFSUserResponse boxedResult = new gov.nih.nci.cagrid.dorian.stubs.RemoveIFSUserResponse();
		impl.removeIFSUser(params.getUser().getIFSUser());
		return boxedResult;
	}

	public gov.nih.nci.cagrid.dorian.stubs.RenewIFSUserCredentialsResponse renewIFSUserCredentials(gov.nih.nci.cagrid.dorian.stubs.RenewIFSUserCredentialsRequest params) throws RemoteException, gov.nih.nci.cagrid.dorian.stubs.types.DorianInternalFault, gov.nih.nci.cagrid.dorian.stubs.types.InvalidUserFault, gov.nih.nci.cagrid.dorian.stubs.types.PermissionDeniedFault {
		DorianAuthorization.authorizeRenewIFSUserCredentials();
		gov.nih.nci.cagrid.dorian.stubs.RenewIFSUserCredentialsResponse boxedResult = new gov.nih.nci.cagrid.dorian.stubs.RenewIFSUserCredentialsResponse();
		boxedResult.setIFSUser(impl.renewIFSUserCredentials(params.getUser().getIFSUser()));
		return boxedResult;
	}

	public gov.nih.nci.cagrid.dorian.stubs.GetIFSUserPoliciesResponse getIFSUserPolicies(gov.nih.nci.cagrid.dorian.stubs.GetIFSUserPoliciesRequest params) throws RemoteException, gov.nih.nci.cagrid.dorian.stubs.types.DorianInternalFault, gov.nih.nci.cagrid.dorian.stubs.types.PermissionDeniedFault {
		DorianAuthorization.authorizeGetIFSUserPolicies();
		gov.nih.nci.cagrid.dorian.stubs.GetIFSUserPoliciesResponse boxedResult = new gov.nih.nci.cagrid.dorian.stubs.GetIFSUserPoliciesResponse();
		boxedResult.setIFSUserPolicy(impl.getIFSUserPolicies());
		return boxedResult;
	}

	public gov.nih.nci.cagrid.authentication.AuthenticateResponse authenticate(gov.nih.nci.cagrid.authentication.AuthenticateRequest params) throws RemoteException, gov.nih.nci.cagrid.authentication.stubs.types.InvalidCredentialFault, gov.nih.nci.cagrid.authentication.stubs.types.InsufficientAttributeFault, gov.nih.nci.cagrid.authentication.stubs.types.AuthenticationProviderFault {
		DorianAuthorization.authorizeAuthenticate();
		gov.nih.nci.cagrid.authentication.AuthenticateResponse boxedResult = new gov.nih.nci.cagrid.authentication.AuthenticateResponse();
		boxedResult.setSAMLAssertion(impl.authenticate(params.getCredential().getCredential()));
		return boxedResult;
	}

}
