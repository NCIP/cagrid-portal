package gov.nih.nci.cagrid.dorian.common;

import java.rmi.RemoteException;


/**
 * Dorian Grid Service This class is autogenerated, DO NOT EDIT.
 * 
 * @created by Introduce Toolkit version 1.0
 */
public interface DorianI {

    public gov.nih.nci.cagrid.metadata.security.ServiceSecurityMetadata getServiceSecurityMetadata()
        throws RemoteException;


    /**
     * Submits an application for an account with a the Dorian Identity
     * Provider.
     * 
     * @param application
     * @throws DorianInternalFault
     *             An unexpected internal Dorian error.
     * @throws InvalidUserPropertyFault
     *             Invalid application submitted.
     */
    public java.lang.String registerWithIdP(gov.nih.nci.cagrid.dorian.idp.bean.Application application)
        throws RemoteException, gov.nih.nci.cagrid.dorian.stubs.types.DorianInternalFault,
        gov.nih.nci.cagrid.dorian.stubs.types.InvalidUserPropertyFault;


    /**
     * Obtain a list of users accounts within the Dorian IdP, meeting a
     * specified search criteria.
     * 
     * @param filter
     * @throws DorianInternalFault
     *             An unexpected internal Dorian error.
     * @throws PermissionDeniedFault
     *             Client does not have permission to perform the request.
     */
    public gov.nih.nci.cagrid.dorian.idp.bean.IdPUser[] findIdPUsers(
        gov.nih.nci.cagrid.dorian.idp.bean.IdPUserFilter filter) throws RemoteException,
        gov.nih.nci.cagrid.dorian.stubs.types.DorianInternalFault,
        gov.nih.nci.cagrid.dorian.stubs.types.PermissionDeniedFault;


    /**
     * Update the account information for a Dorian IdP user.
     * 
     * @param user
     * @throws DorianInternalFault
     *             An unexpected internal Dorian error.
     * @throws NoSuchUserFault
     *             The user specified does not exist.
     * @throws PermissionDeniedFault
     *             Client does not have permission to perform the request.
     */
    public void updateIdPUser(gov.nih.nci.cagrid.dorian.idp.bean.IdPUser user) throws RemoteException,
        gov.nih.nci.cagrid.dorian.stubs.types.DorianInternalFault,
        gov.nih.nci.cagrid.dorian.stubs.types.NoSuchUserFault,
        gov.nih.nci.cagrid.dorian.stubs.types.PermissionDeniedFault;


    /**
     * Remove an IdP user account.
     * 
     * @param userId
     * @throws DorianInternalFault
     *             An unexpected internal Dorian error.
     * @throws PermissionDeniedFault
     *             Client does not have permission to perform the request.
     */
    public void removeIdPUser(java.lang.String userId) throws RemoteException,
        gov.nih.nci.cagrid.dorian.stubs.types.DorianInternalFault,
        gov.nih.nci.cagrid.dorian.stubs.types.PermissionDeniedFault;


    /**
     * Authenticate with the Dorian IdP.
     * 
     * @param cred
     * @throws DorianInternalFault
     *             An unexpected internal Dorian error.
     * @throws PermissionDeniedFault
     *             Client does not have permission to perform the request.
     */
    public gov.nih.nci.cagrid.dorian.bean.SAMLAssertion authenticateWithIdP(
        gov.nih.nci.cagrid.dorian.idp.bean.BasicAuthCredential cred) throws RemoteException,
        gov.nih.nci.cagrid.dorian.stubs.types.DorianInternalFault,
        gov.nih.nci.cagrid.dorian.stubs.types.PermissionDeniedFault;


    /**
     * Create a proxy certificate.
     * 
     * @param saml
     * @param publicKey
     * @param lifetime
     * @param delegation
     * @throws DorianInternalFault
     *             An unexpected internal Dorian error.
     * @throws InvalidAssertionFault
     *             Invalid SAML Assertions provided.
     * @throws InvalidProxyFault
     *             Invalid proxy error.
     * @throws UserPolicyFault
     *             The IdP's user policy reported an error.
     * @throws PermissionDeniedFault
     *             Client does not have permission to perform the request.
     */
    public gov.nih.nci.cagrid.dorian.bean.X509Certificate[] createProxy(
        gov.nih.nci.cagrid.dorian.bean.SAMLAssertion saml, gov.nih.nci.cagrid.dorian.ifs.bean.PublicKey publicKey,
        gov.nih.nci.cagrid.dorian.ifs.bean.ProxyLifetime lifetime,
        gov.nih.nci.cagrid.dorian.ifs.bean.DelegationPathLength delegation) throws RemoteException,
        gov.nih.nci.cagrid.dorian.stubs.types.DorianInternalFault,
        gov.nih.nci.cagrid.dorian.stubs.types.InvalidAssertionFault,
        gov.nih.nci.cagrid.dorian.stubs.types.InvalidProxyFault, gov.nih.nci.cagrid.dorian.stubs.types.UserPolicyFault,
        gov.nih.nci.cagrid.dorian.stubs.types.PermissionDeniedFault;


    /**
     * Obtains the Dorian CA certificate.
     * 
     * @throws DorianInternalFault
     *             An unexpected internal Dorian error.
     */
    public gov.nih.nci.cagrid.dorian.bean.X509Certificate getCACertificate() throws RemoteException,
        gov.nih.nci.cagrid.dorian.stubs.types.DorianInternalFault;


    /**
     * Gets a list of the IdPs trusted by Dorian.
     * 
     * @throws DorianInternalFault
     *             An unexpected internal Dorian error.
     * @throws PermissionDeniedFault
     *             Client does not have permission to perform the request.
     */
    public gov.nih.nci.cagrid.dorian.ifs.bean.TrustedIdP[] getTrustedIdPs() throws RemoteException,
        gov.nih.nci.cagrid.dorian.stubs.types.DorianInternalFault,
        gov.nih.nci.cagrid.dorian.stubs.types.PermissionDeniedFault;


    /**
     * Add a Trusted Identity Provider to Dorian.
     * 
     * @param idp
     * @throws DorianInternalFault
     *             An unexpected internal Dorian error.
     * @throws InvalidTrustedIdPFault
     *             Invalid Trusted Identity Provider specified.
     * @throws PermissionDeniedFault
     *             Client does not have permission to perform the request.
     */
    public gov.nih.nci.cagrid.dorian.ifs.bean.TrustedIdP addTrustedIdP(gov.nih.nci.cagrid.dorian.ifs.bean.TrustedIdP idp)
        throws RemoteException, gov.nih.nci.cagrid.dorian.stubs.types.DorianInternalFault,
        gov.nih.nci.cagrid.dorian.stubs.types.InvalidTrustedIdPFault,
        gov.nih.nci.cagrid.dorian.stubs.types.PermissionDeniedFault;


    /**
     * Update the information for a Trusted IdP.
     * 
     * @param trustedIdP
     * @throws DorianInternalFault
     *             An unexpected internal Dorian error.
     * @throws InvalidTrustedIdPFault
     *             Invalid Trusted Identity Provider specified.
     * @throws PermissionDeniedFault
     *             Client does not have permission to perform the request.
     */
    public void updateTrustedIdP(gov.nih.nci.cagrid.dorian.ifs.bean.TrustedIdP trustedIdP) throws RemoteException,
        gov.nih.nci.cagrid.dorian.stubs.types.DorianInternalFault,
        gov.nih.nci.cagrid.dorian.stubs.types.InvalidTrustedIdPFault,
        gov.nih.nci.cagrid.dorian.stubs.types.PermissionDeniedFault;


    /**
     * Remove a TrustedIdP.
     * 
     * @param trustedIdP
     * @throws DorianInternalFault
     *             An unexpected internal Dorian error.
     * @throws InvalidTrustedIdPFault
     *             Invalid Trusted Identity Provider specified.
     * @throws PermissionDeniedFault
     *             Client does not have permission to perform the request.
     */
    public void removeTrustedIdP(gov.nih.nci.cagrid.dorian.ifs.bean.TrustedIdP trustedIdP) throws RemoteException,
        gov.nih.nci.cagrid.dorian.stubs.types.DorianInternalFault,
        gov.nih.nci.cagrid.dorian.stubs.types.InvalidTrustedIdPFault,
        gov.nih.nci.cagrid.dorian.stubs.types.PermissionDeniedFault;


    /**
     * Obtain a list of grid users accounts within the Dorian, meeting a
     * specified search criteria.
     * 
     * @param filter
     * @throws DorianInternalFault
     *             An unexpected internal Dorian error.
     * @throws PermissionDeniedFault
     *             Client does not have permission to perform the request.
     */
    public gov.nih.nci.cagrid.dorian.ifs.bean.IFSUser[] findIFSUsers(
        gov.nih.nci.cagrid.dorian.ifs.bean.IFSUserFilter filter) throws RemoteException,
        gov.nih.nci.cagrid.dorian.stubs.types.DorianInternalFault,
        gov.nih.nci.cagrid.dorian.stubs.types.PermissionDeniedFault;


    public void updateIFSUser(gov.nih.nci.cagrid.dorian.ifs.bean.IFSUser user) throws RemoteException,
        gov.nih.nci.cagrid.dorian.stubs.types.DorianInternalFault,
        gov.nih.nci.cagrid.dorian.stubs.types.InvalidUserFault,
        gov.nih.nci.cagrid.dorian.stubs.types.PermissionDeniedFault;


    /**
     * Removes a grid user account.
     * 
     * @param user
     * @throws DorianInternalFault
     *             An unexpected internal Dorian error.
     * @throws InvalidUserFault
     *             Invalid user specified.
     * @throws PermissionDeniedFault
     *             Client does not have permission to perform the request.
     */
    public void removeIFSUser(gov.nih.nci.cagrid.dorian.ifs.bean.IFSUser user) throws RemoteException,
        gov.nih.nci.cagrid.dorian.stubs.types.DorianInternalFault,
        gov.nih.nci.cagrid.dorian.stubs.types.InvalidUserFault,
        gov.nih.nci.cagrid.dorian.stubs.types.PermissionDeniedFault;


    /**
     * Renews a grid user's long term credentials.
     * 
     * @param user
     * @throws DorianInternalFault
     *             An unexpected internal Dorian error.
     * @throws InvalidUserFault
     *             Invalid user specified.
     * @throws PermissionDeniedFault
     *             Client does not have permission to perform the request.
     */
    public gov.nih.nci.cagrid.dorian.ifs.bean.IFSUser renewIFSUserCredentials(
        gov.nih.nci.cagrid.dorian.ifs.bean.IFSUser user) throws RemoteException,
        gov.nih.nci.cagrid.dorian.stubs.types.DorianInternalFault,
        gov.nih.nci.cagrid.dorian.stubs.types.InvalidUserFault,
        gov.nih.nci.cagrid.dorian.stubs.types.PermissionDeniedFault;


    /**
     * Get a list of the Trusted IdP user policies supported by Dorian.
     * 
     * @throws DorianInternalFault
     *             An unexpected internal Dorian error.
     * @throws PermissionDeniedFault
     *             Client does not have permission to perform the request.
     */
    public gov.nih.nci.cagrid.dorian.ifs.bean.IFSUserPolicy[] getIFSUserPolicies() throws RemoteException,
        gov.nih.nci.cagrid.dorian.stubs.types.DorianInternalFault,
        gov.nih.nci.cagrid.dorian.stubs.types.PermissionDeniedFault;


    /**
     * Authentication Service interface for authenticating with the Dorian IdP.
     * 
     * @param credential
     * @throws InvalidCredentialFault
     *             An unexpected internal Dorian error.
     * @throws InsufficientAttributeFault
     *             The DorianIdP could obtain the attributes needed to issue a
     *             valid SAML assertion.
     * @throws AuthenticationProviderFault
     *             An error occurred in authenticating.
     */
    public gov.nih.nci.cagrid.authentication.bean.SAMLAssertion authenticate(
        gov.nih.nci.cagrid.authentication.bean.Credential credential) throws RemoteException,
        gov.nih.nci.cagrid.authentication.stubs.types.InvalidCredentialFault,
        gov.nih.nci.cagrid.authentication.stubs.types.InsufficientAttributeFault,
        gov.nih.nci.cagrid.authentication.stubs.types.AuthenticationProviderFault;


    public void addAdmin(java.lang.String gridIdentity) throws RemoteException,
        gov.nih.nci.cagrid.dorian.stubs.types.DorianInternalFault,
        gov.nih.nci.cagrid.dorian.stubs.types.PermissionDeniedFault;


    public void removeAdmin(java.lang.String gridIdentity) throws RemoteException,
        gov.nih.nci.cagrid.dorian.stubs.types.DorianInternalFault,
        gov.nih.nci.cagrid.dorian.stubs.types.PermissionDeniedFault;


    public java.lang.String[] getAdmins() throws RemoteException,
        gov.nih.nci.cagrid.dorian.stubs.types.DorianInternalFault,
        gov.nih.nci.cagrid.dorian.stubs.types.PermissionDeniedFault;


    public gov.nih.nci.cagrid.dorian.ifs.bean.HostCertificateRecord requestHostCertificate(
        gov.nih.nci.cagrid.dorian.ifs.bean.HostCertificateRequest req) throws RemoteException,
        gov.nih.nci.cagrid.dorian.stubs.types.DorianInternalFault,
        gov.nih.nci.cagrid.dorian.stubs.types.InvalidHostCertificateRequestFault,
        gov.nih.nci.cagrid.dorian.stubs.types.InvalidHostCertificateFault,
        gov.nih.nci.cagrid.dorian.stubs.types.PermissionDeniedFault;


    public gov.nih.nci.cagrid.dorian.ifs.bean.HostCertificateRecord[] getOwnedHostCertificates()
        throws RemoteException, gov.nih.nci.cagrid.dorian.stubs.types.DorianInternalFault,
        gov.nih.nci.cagrid.dorian.stubs.types.PermissionDeniedFault;


    public gov.nih.nci.cagrid.dorian.ifs.bean.HostCertificateRecord approveHostCertificate(java.math.BigInteger recordId)
        throws RemoteException, gov.nih.nci.cagrid.dorian.stubs.types.DorianInternalFault,
        gov.nih.nci.cagrid.dorian.stubs.types.InvalidHostCertificateFault,
        gov.nih.nci.cagrid.dorian.stubs.types.PermissionDeniedFault;


    public gov.nih.nci.cagrid.dorian.ifs.bean.HostCertificateRecord[] findHostCertificates(
        gov.nih.nci.cagrid.dorian.ifs.bean.HostCertificateFilter hostCertificateFilter) throws RemoteException,
        gov.nih.nci.cagrid.dorian.stubs.types.DorianInternalFault,
        gov.nih.nci.cagrid.dorian.stubs.types.PermissionDeniedFault;


    public void updateHostCertificateRecord(
        gov.nih.nci.cagrid.dorian.ifs.bean.HostCertificateUpdate hostCertificateUpdate) throws RemoteException,
        gov.nih.nci.cagrid.dorian.stubs.types.DorianInternalFault,
        gov.nih.nci.cagrid.dorian.stubs.types.InvalidHostCertificateFault,
        gov.nih.nci.cagrid.dorian.stubs.types.PermissionDeniedFault;


    public gov.nih.nci.cagrid.dorian.ifs.bean.HostCertificateRecord renewHostCertificate(java.math.BigInteger recordId)
        throws RemoteException, gov.nih.nci.cagrid.dorian.stubs.types.DorianInternalFault,
        gov.nih.nci.cagrid.dorian.stubs.types.InvalidHostCertificateFault,
        gov.nih.nci.cagrid.dorian.stubs.types.PermissionDeniedFault;


    /**
     * This method allows a user with a Dorian IdP account to change their
     * password.
     * 
     * @param credential
     * @param newPassword
     * @throws DorianInternalFault
     * @throws PermissionDeniedFault
     * @throws InvalidUserPropertyFault
     */
    public void changeIdPUserPassword(gov.nih.nci.cagrid.dorian.idp.bean.BasicAuthCredential credential,
        java.lang.String newPassword) throws RemoteException,
        gov.nih.nci.cagrid.dorian.stubs.types.DorianInternalFault,
        gov.nih.nci.cagrid.dorian.stubs.types.PermissionDeniedFault,
        gov.nih.nci.cagrid.dorian.stubs.types.InvalidUserPropertyFault;

}
