<?xml version="1.0"?>
<project name="Developer Modified Build File" basedir=".">
	<!-- ============================================================== -->
	<!-- This file is designed to allow the developer to extend the     -->
	<!-- build process without having to edit the master build.xml      -->
	<!-- file. DO NOT REMOVE ANY TARGETS                                -->
	<!-- ============================================================== -->

	

	<!-- ============================================================== -->
	<!-- Place any other properties you will need here                  -->
	<!-- ============================================================== -->
	<property file="${basedir}/ext/resources/cagrid.properties" />
	<property name="jar.prefix" value="${cagrid.master.jar.prefix}dorian" />
	<property name="ext.lib" value="${basedir}/ext/lib" />
	<property name="ext.test.lib" value="${basedir}/ext/test/lib" />
	<property name="ext.endorsed.dir" value="ext/endorsed/lib" />
	<!--need to preset these for the testing build-->
	<property name="test.log.dir" value="test/logs" />
	<property name="build.dir" location="build" />
	<property name="ui.jar.name" value="${jar.prefix}-ui.jar" />

	
	<!--need to import the test build-->
	<import file="test/test.xml" />
	
	
	<target name="defineClasspaths">
	        <runtarget target="defineExtendedClasspaths" />
	        <path id="base.classpath">
	            <fileset dir="${lib.dir}">
	                <include name="*.jar" />
	            </fileset>
	            <fileset dir="${ext.globus.dir}/lib">
		                <include name="*.jar" />
		                <exclude name="${stubs.jar.name}" />
		                <exclude name="${common.jar.name}" />
		                <exclude name="${client.jar.name}" />
		                <exclude name="${service.jar.name}" />
		                <exclude name="${ui.jar.name}" />
		            </fileset>
	        	<path refid="base.extended.classpath" />
	        </path>
	        <path id="service.build.classpath">
	            <pathelement location="${stubs.dest}" />
	        	<path refid="service.build.extended.classpath" />
	            <path refid="base.classpath" />
	        </path>
	        <path id="service.run.classpath">
	            <pathelement location="${build.dest}" />
	        	<path refid="service.run.extended.classpath" />
	            <path refid="service.build.classpath" />
	        </path>
	        <path id="test.build.classpath">
	            <fileset dir="${test.lib.dir}">
	                <include name="*.jar" />
	            </fileset>
	            <pathelement location="${build.dest}" />
	        	<path refid="test.build.extended.classpath" />
	            <path refid="service.build.classpath" />
	        </path>
	        <path id="test.run.classpath">
	            <pathelement location="${test.build.dest}" />
	        	<path refid="test.run.extended.classpath" />
	            <path refid="test.build.classpath" />
	        </path>
	        <path id="run.classpath">
	            <pathelement location="${build.dest}" />
	        	<path refid="run.extended.classpath" />
	            <path refid="service.build.classpath" />
	        </path>
	        <path id="processor.run.classpath">
	            <fileset dir="${tools.lib.dir}">
	                <include name="*.jar" />
	            </fileset>
	            <path refid="run.classpath" />
	        </path>
	    </target>


	<!-- ============================================================== -->
	<!-- Create any extended Classpaths here                            -->
	<!-- ============================================================== -->
	<target name="defineExtendedClasspaths">
		<path id="base.extended.classpath">
			<fileset dir="${ext.lib}">
				<include name="*.jar" />
			</fileset>
		</path>
		<path id="service.build.extended.classpath">
		</path>
		<path id="service.run.extended.classpath">
		</path>
		<path id="test.build.extended.classpath">
			<fileset dir="${ext.test.lib}">
				<include name="*.jar" />
			</fileset>
		</path>
		<path id="test.run.extended.classpath">
	        <pathelement location="${test.dir}/resources" />
		</path>
		<path id="run.extended.classpath">
		</path>
	</target>
	
	
	 <!-- Create a JAR file with the implementation classes -->
	    <target name="jar" depends="compile">
	        <runtarget target="preJar" />
	  <jar jarfile="${build.lib.dir}/${client.jar.name}" basedir="${build.dest}">
		            <include name="**/client/**" />
		        </jar>
		        <!-- Post Introduce Edit-->
		        <jar jarfile="${build.lib.dir}/${ui.jar.name}" basedir="${build.dest}">
		            <fileset dir="${build.dest}" includes="**/ui/**" />
		            <fileset dir="resources/ui/dorian" />
		        </jar>

		        <jar jarfile="${build.lib.dir}/${service.jar.name}" basedir="${build.dest}">
		            <include name="**/service/**" />
		        </jar>
		        <jar jarfile="${build.lib.dir}/${common.jar.name}" basedir="${build.dest}">
		            <include name="**/*.xml" />
		            <include name="**/*.dtd" />
		            <include name="**/*.properties" />
		            <include name="**/*.xsd" />
		            <include name="**/*.wsdd" />
		            <!-- Post Introduce Edit-->
		            <include name="**/common/**" />
		            <exclude name="**/client/**" />
		            <exclude name="**/service/**" />
		        </jar>
	        <runtarget target="postJar" />
	    </target>



	<!-- ============================================================== -->
	<!-- Pre Init Target                                                -->
	<!-- ============================================================== -->
	<target name="preInit">
		<runtarget target="configure" />
	</target>

	<!-- ============================================================== -->
	<!-- Post Init Build Target                                         -->
	<!-- ============================================================== -->
	<target name="postInit">

	</target>


	<!-- ============================================================== -->
	<!-- Pre Stubs Target                                               -->
	<!-- ============================================================== -->
	<target name="preStubs">

	</target>

	<!-- ============================================================== -->
	<!-- Post Stubs Build Target                                        -->
	<!-- ============================================================== -->
	<target name="postStubs">
		<!-- DORIAN CONFIGURATION SCHEMA -->
		<ant antfile="${build.stubs}" target="generateStubs">
			<property name="source.stubs.dir" location="${schema.dest}" />
			<property name="wsdl.file" value="DorianConfiguration.wsdl" />
			<property name="target.stubs.dir" location="${stubs.src}" />
			<property name="ns.excludes" value="${GT4.ns.excludes}" />
		</ant>
	</target>

	<!-- ============================================================== -->
	<!-- Pre Compile Stubs Build Target                                 -->
	<!-- ============================================================== -->
	<target name="preCompileStubs">

	</target>

	<!-- ============================================================== -->
	<!-- Post Compile Stubs Build Target                                -->
	<!-- ============================================================== -->
	<target name="postCompileStubs">

	</target>

	<!-- ============================================================== -->
	<!-- Pre Jar Stubs Build Target                                     -->
	<!-- ============================================================== -->
	<target name="preJarStubs">

	</target>

	<!-- ============================================================== -->
	<!-- Post Jar Stubs Build Target                                    -->
	<!-- ============================================================== -->
	<target name="postJarStubs">

	</target>

	<!-- ============================================================== -->
	<!-- Pre Compile Build Target                                       -->
	<!-- ============================================================== -->
	<target name="preCompile">

	</target>

	<!-- ============================================================== -->
	<!-- Post Compile Build Target                                       -->
	<!-- ============================================================== -->
	<target name="postCompile">

	</target>

	<!-- ============================================================== -->
	<!-- Pre Jar Build Target                                       -->
	<!-- ============================================================== -->
	<target name="preJar">

	</target>

	<!-- ============================================================== -->
	<!-- Post Jar Build Target                                          -->
	<!-- ============================================================== -->
	<target name="postJar">

	</target>

	<!-- ============================================================== -->
	<!-- Pre Compile Tests Build Target                                 -->
	<!-- ============================================================== -->
	<target name="preCompileTests">

	</target>

	<!-- ============================================================== -->
	<!-- Post Compile Tests Build Target                                -->
	<!-- ============================================================== -->
	<target name="postCompileTests">

	</target>

	<!-- ============================================================== -->
	<!-- Pre Jar Tests Build Target                                     -->
	<!-- ============================================================== -->
	<target name="preJarTests">

	</target>

	<!-- ============================================================== -->
	<!-- Post Jar Tests Build Target                                    -->
	<!-- ============================================================== -->
	<target name="postJarTests">

	</target>

	<!-- ============================================================== -->
	<!-- Pre Clean Target                                               -->
	<!-- ============================================================== -->
	<target name="preClean">

	</target>

	<!-- ============================================================== -->
	<!-- Post Clean Target                                              -->
	<!-- ============================================================== -->
	<target name="postClean">

	</target>


	<target name="configure" description="Configures the project based on settings.">
		<copy filtering="true" file="deploy.properties.template" tofile="deploy.properties" overwrite="true">
			<filterset filtersfile="${basedir}/ext/resources/service_urls.properties" />
		</copy>
	</target>

	
    <!-- Post Introduce Edit-->
    <target name="ui" description="Run the dorian ui" depends="checkGlobus">
        <java classname="org.cagrid.grape.GridApplication" fork="yes">
            <jvmarg value="-Djava.endorsed.dirs=ext/endorsed/lib" />
            <arg value="etc/dorian-ui.xml" />
            <classpath refid="service.run.classpath" />
            <classpath>
                <pathelement location="resources/ui/dorian" />
                <pathelement location="ext/resources/portal/common" />
            </classpath>
        </java>
    </target>

    <target name="createProxy" description="Create a Grid User Proxy." depends="checkGlobus">
        
        <input message="Please enter the Authentication Service URL [${cagrid.master.dorian.service.url}]:" addproperty="auth.input" defaultvalue="${cagrid.master.dorian.service.url}" />
        <input message="Please enter the Dorian Service URL [${cagrid.master.dorian.service.url}]:" addproperty="dorian.input" defaultvalue="${cagrid.master.dorian.service.url}" />

        <input message="Please enter your username:" addproperty="username.input" />
        <input message="Please enter your password:" addproperty="password.input" />
        <input message="Please enter the number of hours the proxy should be valid for [12]:" addproperty="hours.input" defaultvalue="12" />
        <java classname="gov.nih.nci.cagrid.dorian.tools.GridProxyInit" fork="yes" newenvironment="true">
            <jvmarg value="-Djava.endorsed.dirs=ext/endorsed/lib" />
            <arg value="-a" />
            <arg value="${auth.input}" />
            <arg value="-d" />
            <arg value="${dorian.input}" />
            <arg value="-u" />
            <arg value="${username.input}" />
            <arg value="-p" />
            <arg value="${password.input}" />
            <arg value="-h" />
            <arg value="${hours.input}" />
            <classpath refid="service.run.classpath" />
        </java>
    </target>

    <target name="importCA" description="Imports an external CA, for Dorian to use as its CA." depends="checkGlobus">
        <input message="Please enter the location to the CA's certificate (PEM Format):" addproperty="cacert.input" />
        <input message="Please enter the location to the CA's private key (PEM Format):" addproperty="cakey.input" />
        <input message="Please enter the password to the CA's private key (Enter if None):" addproperty="password.input" />
        <java classname="gov.nih.nci.cagrid.dorian.service.tools.ImportCA" fork="yes" newenvironment="true">
            <arg value="-conf" />
            <arg value="etc/dorian-conf.xml" />
            <arg value="-cert" />
            <arg value="${cacert.input}" />
            <arg value="-key" />
            <arg value="${cakey.input}" />
            <arg value="-password" />
            <arg value="${password.input}" />
            <classpath refid="service.run.classpath" />
        </java>
    </target>
	
	
	 <target name="configureGlobusToTrustDorian" description="Configures Globus to trust the Dorian CA." depends="checkGlobus">
		        <java classname="gov.nih.nci.cagrid.dorian.service.tools.ConfigureGlobusToTrustDorian" fork="yes" newenvironment="true">
		            <arg value="-conf" />
		            <arg value="etc/dorian-conf.xml" />
		            <classpath refid="service.run.classpath" />
		        </java>
		    </target>
	
	 <target name="createDorianHostCredentials" description="Creates host credentials for the Dorian Service." depends="checkGlobus">
	        <input message="Please enter the host:" addproperty="host.input" />
	        <input message="Please enter the directory to write out the host credentials:" addproperty="dir.input" />
	        <java classname="gov.nih.nci.cagrid.dorian.service.tools.CreateHostCertificate" fork="yes" newenvironment="true">
	            <arg value="-conf" />
	            <arg value="etc/dorian-conf.xml" />
	            <arg value="-host" />
	            <arg value="${host.input}" />
	            <arg value="-directory" />
	            <arg value="${dir.input}" />
	            <classpath refid="service.run.classpath" />
	        </java>
	    </target>

    <target name="upgrade" description="Upgrades old versions of the Dorian database to the latest version." depends="checkGlobus">
        <java classname="gov.nih.nci.cagrid.dorian.service.upgrader.Upgrader" fork="yes" newenvironment="true">
            <jvmarg value="-Dlog4j.configuration=file:upgrader-log4j.properties" />
            <arg value="-conf" />
            <arg value="etc/dorian-conf.xml" />
            <classpath refid="service.run.classpath" />
        </java>
    </target>

    <target name="testUpgrade" description="Tests upgrading old versions of the Dorian database to the latest version." depends="checkGlobus">
        <java classname="gov.nih.nci.cagrid.dorian.service.upgrader.Upgrader" fork="yes" newenvironment="true">
            <jvmarg value="-Dlog4j.configuration=file:upgrader-log4j.properties" />
            <arg value="-conf" />
            <arg value="etc/dorian-conf.xml" />
            <arg value="-trial" />
            <classpath refid="service.run.classpath" />
        </java>
    </target>

</project>