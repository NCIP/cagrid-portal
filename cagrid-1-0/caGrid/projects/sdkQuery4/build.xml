<!-- ======================================================================= -->
<!-- caGrid 1.0 SDK (4.0) Query Processor build file                         -->
<!-- ======================================================================= -->
<project name="sdkQuery4" default="all" basedir=".">
    <!-- Environment -->
    <property environment="env" />
    <property file="${basedir}/build.properties" />
    <property file="${user.dir}/build.properties" />
    <property file="${basedir}/ext/resources/cagrid.properties" />
    <property name="globus.dir" location="${env.GLOBUS_LOCATION}" />
	
	<!-- build with debugging information -->
	<property name="java.debug" value="on" />
	<!-- enforce java 1.5 compliance at build time -->
	<property name="java.source" value="1.5" />

    <!-- Information -->
    <property name="project.version" value="${cagrid.master.project.version}" />
    <property name="project.name" value="${cagrid.master.project.name}-${project.version}-${ant.project.name}" />
    <property name="project.jar.prefix" value="${cagrid.master.jar.prefix}${ant.project.name}${cagrid.master.jar.separator}" />

	<!-- build output dirs -->
    <property name="build.dir" location="build" />
	<property name="build.style.dest" location="${build.dir}/style/classes"/>
	<property name="build.processor.dest" location="${build.dir}/style/processor"/>
	<property name="build.beans.dest" location="${build.dir}/beans/classes"/>
    <property name="build.jars.dir" location="build/lib" />
	
	<!-- jar names -->
    <property name="style.jar.name" value="${project.jar.prefix}style.jar"/>
	<property name="processor.jar.name" value="${project.jar.prefix}processor.jar"/>
	<property name="beans.jar.name" value="${project.jar.prefix}beans.jar"/>
		
	<!-- jar files -->
	<property name="style.jar.file" value="${build.jars.dir}/${style.jar.name}"/>
	<property name="processor.jar.file" value="${build.jars.dir}/${processor.jar.name}"/>
	<property name="beans.jar.file" value="${build.jars.dir}/${beans.jar.name}"/>
	
	<!-- source directories -->
	<property name="style.src.dir" location="${basedir}/src/java/style"/>
	<property name="processor.src.dir" location="${basedir}/src/java/processor"/>
	<property name="beans.src.dir" location="${build.dir}/beans/src"/>
	
	<!-- libraries -->
	<property name="lib.dir" location="${basedir}/lib"/>
	<property name="ext.lib.dir" location="${basedir}/ext/lib"/>
	<property name="ext.sdk.dir" location="${basedir}/ext/lib/sdk"/>
	<property name="ext.remote-client.dir" location="${ext.sdk.dir}/remote-client"/>
	<property name="ext.local-client.dir" location="${ext.sdk.dir}/local-client"/>
	<property name="ext.remote-client.lib.dir" location="${ext.remote-client.dir}/lib"/>
	<property name="ext.local-client.lib.dir" location="${ext.local-client.dir}/lib"/>
	<property name="ext.test.lib.dir" location="${basedir}/ext/test/lib"/>
	
	<!-- testing stuff -->
	<property name="test.dir" location="${basedir}/test" />
	<property name="test.src.dir" location="${test.dir}/src/java" />
	<property name="test.classes.dir" location="${build.dir}/test/classes" />
	<property name="test.lib.dir" location="${test.dir}/lib" />
	<property name="test.logs.dir" location="${test.dir}/logs" />
	<property name="test.project.jar" location="${build.jars.dir}/${project.jar.prefix}tests.jar" />
	<import file="test\test.xml" />
	
	<!-- build file for stub generation -->
	<property name="ant.build.stubs" location="${globus.dir}/share/globus_wsrf_tools/build-stubs.xml" />

	<!-- schemas and namespace mappings -->
	<property name="globus.schema.src" location="${globus.dir}/share/schema" />
	<property name="mapping.src" value="${basedir}/NStoPKG.mapping" />
	
	<!-- style related stuff -->
	<property name="introduce.extensions.dir" location="../introduce/extensions" />
	<property name="style.document" location="${basedir}/style/style.xml"/>
	<property name="style.dest.dir" location="${introduce.extensions.dir}/data/styles/cacore4"/>
	
	<!-- =============================================================== -->
	<!-- The Build Classpath                                             -->
	<!-- =============================================================== -->
	<path id="build.classpath">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${ext.lib.dir}">
			<include name="**/*.jar" />
			<!-- castor is supplied from the remote-client -->
			<exclude name="castor-0.9.9.jar"/>
		</fileset>
		<fileset dir="${test.lib.dir}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${ext.test.lib.dir}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${globus.dir}/lib">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${ext.remote-client.lib.dir}">
			<include name="castor-1.0.2.jar"/>
			<!-- TODO: include more stuff? -->
		</fileset>
		<pathelement location="${build.beans.dest}"/>
	</path>
	
	
	<!-- =============================================================== -->
	<!-- The Test Classpath                                              -->
	<!-- =============================================================== -->
	<path id="test.classpath">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
		<!-- recursion here picks up SDK jars too -->
		<fileset dir="${ext.lib.dir}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${test.lib.dir}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${ext.test.lib.dir}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${globus.dir}/lib">
			<include name="**/*.jar" />
		</fileset>
		<pathelement location="${build.beans.dest}"/>
		<pathelement location="${build.processor.dest}"/>
		<pathelement location="${build.style.dest}"/>
	</path>		
	
	
	<!-- sets up GT4 related variables -->
	<target name="setGlobus" if="env.GLOBUS_LOCATION">
		<!-- GT4 build files and directories-->
		<property name="ext.globus.dir" value="${env.GLOBUS_LOCATION}" />
		<property name="build.stubs" location="${ext.globus.dir}/share/globus_wsrf_tools/build-stubs.xml" />
		<property name="globus.schema.src" location="${ext.globus.dir}/share/schema" />
		<property name="build.packages" location="${ext.globus.dir}/share/globus_wsrf_common/build-packages.xml" />
		<!-- Copied from build.stubs file, as there is no way to "append" to the value in the remote file -->
		<property name="GT4.ns.excludes" value="-x http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-BaseFaults-1.2-draft-01.xsd -x http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-BaseFaults-1.2-draft-01.wsdl -x http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ResourceLifetime-1.2-draft-01.xsd -x http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ResourceLifetime-1.2-draft-01.wsdl -x http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ResourceProperties-1.2-draft-01.xsd -x http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ResourceProperties-1.2-draft-01.wsdl -x http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ServiceGroup-1.2-draft-01.xsd -x http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-ServiceGroup-1.2-draft-01.wsdl -x http://docs.oasis-open.org/wsn/2004/06/wsn-WS-BaseNotification-1.2-draft-01.xsd -x http://docs.oasis-open.org/wsn/2004/06/wsn-WS-BaseNotification-1.2-draft-01.wsdl -x http://schemas.xmlsoap.org/ws/2004/04/trust -x http://schemas.xmlsoap.org/ws/2002/12/policy -x http://schemas.xmlsoap.org/ws/2002/07/utility -x http://schemas.xmlsoap.org/ws/2004/04/sc -x http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd -x http://www.w3.org/2000/09/xmldsig# -x http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd -x http://schemas.xmlsoap.org/ws/2004/09/enumeration" />
	</target>
	
	
	<!-- unpacks the caCORE SDK client zip files -->
	<target name="unpackSdkClients">
		<unzip src="${ext.remote-client.dir}/RemoteClient.zip" dest="${ext.remote-client.dir}"/>
		<unzip src="${ext.local-client.dir}/LocalClient.zip" dest="${ext.local-client.dir}"/>
	</target>

	
	<!-- creates output directories -->
    <target name="init" depends="unpackSdkClients">
        <mkdir dir="${build.dir}" />
		<mkdir dir="${build.jars.dir}"/>
    	<mkdir dir="${build.style.dest}"/>
    	<mkdir dir="${build.processor.dest}"/>
		<mkdir dir="${build.beans.dest}"/>
		<mkdir dir="${beans.src.dir}"/>
    	<mkdir dir="${test.classes.dir}"/>
    </target>
	
	
	<!-- merge namespace mappings with globus -->
	<target name="mergeNsMappings" depends="init">
		<ant antfile="${build.stubs}" target="mergePackageMapping">
			<property name="mapping.src" location="NStoPKG.mapping" />
			<property name="mapping.dst" location="${build.dir}/NStoPKG.mapping" />
		</ant>
	</target>
	

	<!-- generates source stubs for the schema defined types -->
	<target name="stubs" depends="init, setGlobus, mergeNsMappings">
		<property name="mapping.dst" value="${build.dir}/NStoPKG.mapping" />
		<ant antfile="${ant.build.stubs}" target="mergePackageMapping" />
		<property name="mapping.file" value="${mapping.dst}" />
		<!-- generate beans -->
		<ant antfile="${ant.build.stubs}" target="generateStubs">
			<property name="source.stubs.dir" location="${basedir}/schema"/>
			<property name="wsdl.file" value="Beans.wsdl"/>
			<property name="target.stubs.dir" location="${beans.src.dir}"/>
		</ant>
	</target>
	
	
	<!-- compiles the beans -->
	<target name="compileBeans" depends="stubs">
		<javac srcdir="${beans.src.dir}" destdir="${build.beans.dest}" debug="${java.debug}" source="${java.source}">
			<include name="**/*.java" />
			<classpath>
				<fileset dir="${globus.dir}/lib">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</javac>
	</target>
	
	
	<!-- compiles the style source code -->
	<target name="compileStyle" depends="init, compileBeans, compileProcessor">
		<javac srcdir="${style.src.dir}" destdir="${build.style.dest}" debug="${java.debug}" source="${java.source}">
			<classpath refid="build.classpath"/>
			<classpath>
				<pathelement location="${build.processor.dest}"/>
			</classpath>
			<include name="**/*.java" />
		</javac>
	</target>
	

	<!-- compiles the query processor source code -->
	<target name="compileProcessor" depends="init, compileBeans">
		<javac srcdir="${processor.src.dir}" destdir="${build.processor.dest}" debug="${java.debug}" source="${java.source}">
			<classpath refid="build.classpath"/>
			<include name="**/*.java" />
		</javac>
	</target>
	
	
	<!-- compiles the testing source code -->
	<target name="compileTests" depends="compileBeans, compileProcessor, compileStyle">
		<javac srcdir="${test.src.dir}" destdir="${test.classes.dir}" debug="${java.debug}" source="${java.source}">
			<classpath>
				<pathelement location="${build.processor.dest}"/>
				<pathelement location="${build.style.dest}"/>
				<pathelement location="${build.beans.dest}"/>
				<fileset dir="${lib.dir}">
					<include name="*.jar"/>
				</fileset>
				<fileset dir="${ext.lib.dir}">
					<include name="*.jar"/>
				</fileset>
				<fileset dir="${ext.remote-client.lib.dir}">
					<include name="**/*.jar"/>
				</fileset>
				<fileset dir="${ext.test.lib.dir}">
					<include name="*.jar"/>
				</fileset>
				<fileset dir="${globus.dir}/lib">
					<include name="*.jar" />
				</fileset>
			</classpath>
			<include name="**/*.java"/>
		</javac>
	</target>
	
	
	<target name="jarBeans" depends="compileBeans" description="Builds the beans jar file">
		<jar destfile="${beans.jar.file}">
			<fileset dir="${build.beans.dest}">
				<include name="**/*.class"/>
			</fileset>
			<fileset dir="${beans.src.dir}">
				<include name="**/*.java"/>
			</fileset>
		</jar>
	</target>
	
	
	<!-- jars the style -->
    <target name="jarStyle" depends="compileStyle" description="Builds the style jar file">
        <jar destfile="${style.jar.file}">
            <fileset dir="${build.style.dest}">
            	<include name="**/*.class"/>
            </fileset>
        	<fileset dir="${style.src.dir}">
        		<include name="**/*.java"/>
				<!-- include the gif for the SDK logo -->
        		<include name="**/*.gif"/>
        	</fileset>
        </jar>
    </target>
	
	
	<!-- jars the processor -->
	<target name="jarProcessor" depends="compileProcessor" description="Builds the processor jar file">
		<jar destfile="${processor.jar.file}">
			<fileset dir="${build.processor.dest}">
				<include name="**/*.class"/>
			</fileset>
			<fileset dir="${processor.src.dir}">
				<include name="**/*.java"/>
			</fileset>
		</jar>
	</target>
	
	
	<!-- jars the tests -->
	<target name="jarTests" depends="compileTests" description="Builds the testing jar file">
		<jar destfile="${test.project.jar}">
			<fileset dir="${test.classes.dir}">
				<include name="**/*.class"/>
			</fileset>
		</jar>
	</target>
	
	
	<!-- installs the service style -->
	<target name="installServiceStyle" description="Installs the SDK 4 data service style">
		<echo message="Installing Data Service Style SDK4." />
		<!-- some properties for the install -->
		<!-- make requisite directories -->
		<delete dir="${style.dest.dir}"/>
		<mkdir dir="${style.dest.dir}"/>
		<mkdir dir="${style.dest.dir}/lib"/>
		<!-- copy in the style.xml file -->
		<copy file="${style.document}" todir="${style.dest.dir}"/>
		<!-- copy in the style's jar file -->
		<copy todir="${style.dest.dir}/lib">
			<!-- the style itself and query processor -->
			<fileset dir="${build.jars.dir}">
				<include name="*.jar"/>
			</fileset>
			<!-- copy the SDK common style jar file -->
			<fileset dir="${ext.lib.dir}">
				<include name="*sdkstyle.jar"/>
			</fileset>
			<!-- copy the dependencies -->
			<fileset dir="${lib.dir}">
				<include name="*.jar"/>
			</fileset>
		</copy>
	</target>
	
	
	<!-- allows style to be installed by top-level build -->
	<target name="installIntroduceExtensions" depends="installServiceStyle"/>
	
	
	<!-- removes all build output -->
    <target name="clean">
        <delete dir="${build.dir}" />
    </target>

	
	<!-- build and jar everything -->
	<target name="all" depends="jarBeans, jarProcessor, jarStyle, jarTests" description="Builds and jars all the classes in the project"/>
</project>
