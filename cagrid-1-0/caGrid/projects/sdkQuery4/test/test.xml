<!-- ======================================================================= -->
<!-- caGrid SDK Query 4.0 test file                                          -->
<!-- ======================================================================= -->
<project name="caGrid-sdkQuery4_tests_harness" basedir=".">
	<property name="junit.results.dir" value="${test.logs.dir}/junit"/>
	<property name="instrumented.classes.dir" value="${build.dir}/instrumented-classes"/>
	<property name="cobertura.report.dir" value="${build.dir}/coverage"/>
	<property name="cobertura.data.file"
		location="${instrumented.classes.dir}/${project.name}-cobertura.ser"/>	
	
	
	<!-- =============================================================== -->
	<!-- The Cobertura Run Classpath                                     -->
	<!-- =============================================================== -->
	<path id="cobertura.run.classpath">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
		<!-- no recursion to ommit the sdk libs, including a conflicting asm jar -->
		<fileset dir="${ext.lib.dir}">
			<include name="*.jar" />
		</fileset>
		<fileset dir="${test.lib.dir}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${ext.test.lib.dir}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${globus.dir}/lib">
			<include name="**/*.jar" />
		</fileset>
	</path>
	

	<target name="instrument">
		<taskdef classpathref="cobertura.run.classpath" resource="tasks.properties"/>
		<mkdir dir="${instrumented.classes.dir}"/>
		<cobertura-instrument todir="${instrumented.classes.dir}" datafile="${cobertura.data.file}">
			<fileset dir="${build.beans.dest}">
				<include name="**/*.class"/>
			</fileset>
			<fileset dir="${build.processor.dest}">
				<include name="**/*.class"/>
			</fileset>
			<fileset dir="${build.style.dest}">
				<include name="**/*.class"/>
			</fileset>
		</cobertura-instrument>
	</target>
	
	
	<!-- call the test target for each project and aggregates the log resutls  -->
	<target name="test" depends="compileTests, instrument" description="Runs the tests.">
		<mkdir dir="${junit.results.dir}"/>
		<junit dir="${basedir}" printsummary="yes" errorproperty="test.failed" failureproperty="test.failed" showoutput="true" fork="yes" forkmode="once">
			<!-- is this needed any more? -->
			<sysproperty key="build.dirs" value="${instrumented.classes.dir}"/>
			<sysproperty key="net.sourceforge.cobertura.datafile" file="${cobertura.data.file}"/>
			<jvmarg value="-Dbuild.dir=${test.classes.dir}"/>
			<classpath location="${instrumented.classes.dir}"/>
			<classpath refid="test.classpath"/>
			<classpath>
				<pathelement path="${test.classes.dir}"/>
			</classpath>
			<formatter type="xml"/>
			<batchtest fork="yes" todir="${junit.results.dir}">
				<fileset dir="${test.src.dir}">
					<include name="**/*TestCase.java"/>
					<exclude name="**/system/*"/>
				</fileset>
			</batchtest>
		</junit>
        <fail message="Tests failed! Check test reports." if="test.failed" />   
	</target>
	
	
	<target name="systemTest" depends="compileTests, instrument" description="Runs the tests.">
		<mkdir dir="${junit.results.dir}"/>
		<junit dir="${basedir}" printsummary="yes" errorproperty="test.failed" failureproperty="test.failed" showoutput="true" fork="yes" forkmode="once">
			<sysproperty key="build.dirs" value="${instrumented.classes.dir}"/>
			<sysproperty key="net.sourceforge.cobertura.datafile" file="${cobertura.data.file}"/>
			<sysproperty key="processor.config.file" file="test/resources/testProcessorConfig.properties"/>
			<jvmarg value="-Dbuild.dir=${test.classes.dir}"/>
			<classpath location="${instrumented.classes.dir}"/>
			<classpath refid="test.classpath"/>
			<classpath>
				<pathelement path="${test.classes.dir}"/>
			</classpath>
			<formatter type="xml"/>
			<batchtest fork="yes" todir="${junit.results.dir}">
				<fileset dir="${test.src.dir}">
					<include name="**/system/*Test.java"/>
				</fileset>
			</batchtest>
		</junit>
	</target>
	
	
	<target name="coverageReport" depends="test" description="Runs the tests and generates a test
		coverage report.">
		<cobertura-report format="html" datafile="${cobertura.data.file}"
			destdir="${cobertura.report.dir}">
			<fileset dir="${src.dir}">
				<include name="**/*.java"/>
			</fileset>
			<fileset dir="${test.src.dir}">
				<include name="**/*.java"/>
			</fileset>
		</cobertura-report>
	</target>
</project>
