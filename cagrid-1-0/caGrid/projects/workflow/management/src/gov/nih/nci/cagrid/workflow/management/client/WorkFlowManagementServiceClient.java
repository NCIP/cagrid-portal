package gov.nih.nci.cagrid.workflow.management.client;

import java.net.URL;
import java.io.InputStream;
import java.rmi.RemoteException;

import org.apache.axis.EngineConfiguration;
import org.apache.axis.client.AxisClient;
import org.apache.axis.configuration.FileProvider;
import org.apache.axis.message.addressing.Address;
import org.apache.axis.message.addressing.EndpointReferenceType;
import org.apache.axis.utils.ClassUtils;

import org.globus.gsi.GlobusCredential;

import gov.nih.nci.cagrid.common.Utils;

import gov.nih.nci.cagrid.workflow.management.stubs.WorkFlowManagementServicePortType;
import gov.nih.nci.cagrid.workflow.management.stubs.service.WorkFlowManagementServiceAddressingLocator;
import gov.nih.nci.cagrid.workflow.management.common.WorkFlowManagementServiceI;
import org.xmlsoap.schemas.ws._2003._03.business_process.TProcess;
/**
 * This class is autogenerated, DO NOT EDIT.
 * 
 * @created by Introduce Toolkit version 1.0
 */
public class WorkFlowManagementServiceClient implements
		WorkFlowManagementServiceI {
	private GlobusCredential proxy;

	private String url;

	private org.xmlsoap.schemas.ws._2003._03.business_process.TProcess bpelProcess;

	private String fileName;

	static {
		org.globus.axis.util.Util.registerTransport();
	}

	public WorkFlowManagementServiceClient(String url, String fileName) {
		this(url, fileName, null);
	}

	public WorkFlowManagementServiceClient(String url, String fileName,
			GlobusCredential proxy) {
		this.proxy = proxy;
		this.url = url;
		this.fileName = fileName;
		try {
			this.bpelProcess =(TProcess) Utils.deserializeDocument(this.fileName, TProcess.class );
			String returnString = this.runWorkFlow(this.bpelProcess);
			System.out.println("Got this: " + returnString);
		} catch (Exception e) {
			System.err.println("Bad BPEL doc "+ e.getMessage());
			e.printStackTrace();
			System.exit(-1);
		}
		
	}

	private WorkFlowManagementServicePortType getPortType()
			throws RemoteException {

		WorkFlowManagementServiceAddressingLocator locator = new WorkFlowManagementServiceAddressingLocator();
		// attempt to load our context sensitive wsdd file
		InputStream resourceAsStream = ClassUtils.getResourceAsStream(
				getClass(), "client-config.wsdd");
		if (resourceAsStream != null) {
			// we found it, so tell axis to configure an engine to use it
			EngineConfiguration engineConfig = new FileProvider(
					resourceAsStream);
			// set the engine of the locator
			locator.setEngine(new AxisClient(engineConfig));
		}
		WorkFlowManagementServicePortType port = null;
		EndpointReferenceType endpoint = new EndpointReferenceType();
		try {
			endpoint.setAddress(new Address(url));
			port = locator.getWorkFlowManagementServicePortTypePort(endpoint);
		} catch (Exception e) {
			throw new RemoteException("Unable to configured porttype:"
					+ e.getMessage(), e);
		}

		return port;
	}

	public static void usage() {
		System.out.println(WorkFlowManagementServiceClient.class.getName()
				+ " -url <service url>" + " -file <bpel doc>");
	}


	public static void main(String[] args) {
		System.out.println("Running the Grid Service Client");
		String url = null;
		String fileName = null;
		try {
			if (args.length < 4) {
				usage();
				System.exit(-1);
			} else {
				if (args[0].equals("-url")) {
					url = args[1];
				} else {
					usage();
					System.exit(-1);
				}
				if (args[2].equals("-file")) {
					fileName = args[3];
				} else {
					usage();
					System.exit(-1);
				}
			}
			WorkFlowManagementServiceClient client = new WorkFlowManagementServiceClient(
					url, fileName);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public java.lang.String runWorkFlow(
			org.xmlsoap.schemas.ws._2003._03.business_process.TProcess bpelDoc)
			throws RemoteException {
		WorkFlowManagementServicePortType port = this.getPortType();
		org.apache.axis.client.Stub stub = (org.apache.axis.client.Stub) port;

		gov.nih.nci.cagrid.workflow.management.stubs.RunWorkFlow params = new gov.nih.nci.cagrid.workflow.management.stubs.RunWorkFlow();
		gov.nih.nci.cagrid.workflow.management.stubs.RunWorkFlowBpelDoc bpelDocContainer = new gov.nih.nci.cagrid.workflow.management.stubs.RunWorkFlowBpelDoc();
		bpelDocContainer.setProcess(bpelDoc);
		params.setBpelDoc(bpelDocContainer);
		gov.nih.nci.cagrid.workflow.management.stubs.RunWorkFlowResponse boxedResult = port
				.runWorkFlow(params);
		return boxedResult.getResponse();

	}

}
