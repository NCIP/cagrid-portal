package gov.nih.nci.cagrid.fqp.service.globus;

import gov.nih.nci.cagrid.fqp.service.FederatedQueryProcessorImpl;

import java.rmi.RemoteException;

/** 
 * DO NOT EDIT:  This class is autogenerated!
 *
 * This class implements each method in the portType of the service.  Each method call represented
 * in the port type will be then mapped into the unwrapped implementation which the user provides
 * in the FederatedQueryProcessorImpl class.  This class handles the boxing and unboxing of each method call
 * so that it can be correclty mapped in the unboxed interface that the developer has designed and 
 * has implemented.  Authorization callbacks are automatically made for each method based
 * on each methods authorization requirements.
 * 
 * @created by Introduce Toolkit version 1.2
 * 
 */
public class FederatedQueryProcessorProviderImpl{
	
	FederatedQueryProcessorImpl impl;
	
	public FederatedQueryProcessorProviderImpl() throws RemoteException {
		impl = new FederatedQueryProcessorImpl();
	}
	

    public gov.nih.nci.cagrid.fqp.stubs.ExecuteResponse execute(gov.nih.nci.cagrid.fqp.stubs.ExecuteRequest params) throws RemoteException, gov.nih.nci.cagrid.fqp.stubs.types.FederatedQueryProcessingFault {
    gov.nih.nci.cagrid.fqp.stubs.ExecuteResponse boxedResult = new gov.nih.nci.cagrid.fqp.stubs.ExecuteResponse();
    boxedResult.setDCQLQueryResultsCollection(impl.execute(params.getQuery().getDCQLQuery()));
    return boxedResult;
  }

    public gov.nih.nci.cagrid.fqp.stubs.ExecuteAndAggregateResultsResponse executeAndAggregateResults(gov.nih.nci.cagrid.fqp.stubs.ExecuteAndAggregateResultsRequest params) throws RemoteException, gov.nih.nci.cagrid.fqp.stubs.types.FederatedQueryProcessingFault {
    gov.nih.nci.cagrid.fqp.stubs.ExecuteAndAggregateResultsResponse boxedResult = new gov.nih.nci.cagrid.fqp.stubs.ExecuteAndAggregateResultsResponse();
    boxedResult.setCQLQueryResultCollection(impl.executeAndAggregateResults(params.getQuery().getDCQLQuery()));
    return boxedResult;
  }

    public gov.nih.nci.cagrid.fqp.stubs.ExecuteAndEnumerateResponse executeAndEnumerate(gov.nih.nci.cagrid.fqp.stubs.ExecuteAndEnumerateRequest params) throws RemoteException, gov.nih.nci.cagrid.fqp.stubs.types.FederatedQueryProcessingFault {
    gov.nih.nci.cagrid.fqp.stubs.ExecuteAndEnumerateResponse boxedResult = new gov.nih.nci.cagrid.fqp.stubs.ExecuteAndEnumerateResponse();
    boxedResult.setEnumerationResponseContainer(impl.executeAndEnumerate(params.getQuery().getDCQLQuery()));
    return boxedResult;
  }

    public gov.nih.nci.cagrid.fqp.stubs.ExecuteAndTransferResponse executeAndTransfer(gov.nih.nci.cagrid.fqp.stubs.ExecuteAndTransferRequest params) throws RemoteException {
    gov.nih.nci.cagrid.fqp.stubs.ExecuteAndTransferResponse boxedResult = new gov.nih.nci.cagrid.fqp.stubs.ExecuteAndTransferResponse();
    boxedResult.setTransferServiceContextReference(impl.executeAndTransfer(params.getQuery().getDCQLQuery()));
    return boxedResult;
  }

    public gov.nih.nci.cagrid.fqp.stubs.ExecuteAsynchronouslyResponse executeAsynchronously(gov.nih.nci.cagrid.fqp.stubs.ExecuteAsynchronouslyRequest params) throws RemoteException {
    gov.nih.nci.cagrid.fqp.stubs.ExecuteAsynchronouslyResponse boxedResult = new gov.nih.nci.cagrid.fqp.stubs.ExecuteAsynchronouslyResponse();
    boxedResult.setFederatedQueryResultsReference(impl.executeAsynchronously(params.getQuery().getDCQLQuery()));
    return boxedResult;
  }

}
