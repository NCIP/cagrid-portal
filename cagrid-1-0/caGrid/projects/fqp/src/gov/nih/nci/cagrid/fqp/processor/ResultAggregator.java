package gov.nih.nci.cagrid.fqp.processor;

import gov.nih.nci.cagrid.cqlquery.LogicalOperator;
import gov.nih.nci.cagrid.cqlquery.Predicate;
import gov.nih.nci.cagrid.dcql.JoinCondition;

import java.util.List;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;


/**
 * 
 * @author Srini Akkala
 * @author Scott Oster
 */
class ResultAggregator {

	protected static Log LOG = LogFactory.getLog(ResultAggregator.class.getName());

	/**
	 * Build group of Attributes based on the List generated by processResults
	 * method . Attribute name would be left join CDE Attribute value would be
	 * value from the list generated by processResults method predicate is
	 * "EQUAL_TO" Group with logical operator "OR"
	 * 
	 * @param list
	 * @return
	 */
	public static gov.nih.nci.cagrid.cqlquery.Group buildGroup(JoinCondition joinCondition, List list) {

		gov.nih.nci.cagrid.cqlquery.Group cqlGroup = new gov.nih.nci.cagrid.cqlquery.Group();

		gov.nih.nci.cagrid.cqlquery.Attribute[] attrArray = new gov.nih.nci.cagrid.cqlquery.Attribute[list.size()];
		gov.nih.nci.cagrid.cqlquery.Attribute attr = null;
		String property = joinCondition.getLocalAttributeName();
		for (int i = 0; i < list.size(); i++) {
			attr = new gov.nih.nci.cagrid.cqlquery.Attribute();
			// set the local property name
			attr.setName(property);
			// set the predicate to the join predicate (this requires DCQL to
			// use the same representation as CQL)
			attr.setPredicate(Predicate.fromValue(joinCondition.getPredicate().getValue()));
			// set the value to the string representation of the "foreign result
			// value"
			attr.setValue(list.get(i).toString());
			attrArray[i] = attr;
		}

		// if the size of result set returned by sub query is zero , add IS_NULL
		if (list.size() == 0) {
			attr = new gov.nih.nci.cagrid.cqlquery.Attribute();
			attr.setName(property);
			attr.setPredicate(Predicate.IS_NULL);
			attrArray = new gov.nih.nci.cagrid.cqlquery.Attribute[1];
			attrArray[0] = attr;
		}

		cqlGroup.setLogicRelation(LogicalOperator.fromString("OR"));
		cqlGroup.setAttribute(attrArray);

		return cqlGroup;
	}
}
