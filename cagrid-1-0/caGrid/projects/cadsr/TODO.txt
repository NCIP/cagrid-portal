

FUTURE WORK:
==================================================
resource/context for non-blocking domainmodel generation

discovery panel should support "searching" as well


caCORE BUGS:
==================================================







==================================================

(DONE -- limited until UML2XML lookup is available in caDSR) add operation annotateServiceMetadata(ServiceMetadata md) to add UMLClass information to service model

(FIXED)  caCORE provided XSD's have the wrong namespace (caCORE.cabig instead of caCORE.caBIG), I've corrected them locally... need to rectify

(WORKED AROUND) caCORE returning too many assocations

(DONE) Pull properties from preferences

(FIXED/WORKAROUND?) returning too many classes when there are package aliases

(DONE) reimplement generateDomainModel(proj,class,assoc)
  - change to association excludes

(DONE) implement generateDomainModel(proj,class)

(DONE) add appropriate service faults and internal exceptions

(DONE) add service property for setting thread pool size

(DONE) change assocations in domainmodel to be closure over exposed classes

(WORKAROUND -- made new bean ) unable to populate associations as client calls back to ApplServ even if associations are set

(FIXED WITH WORKAROUND TO GET MANUALLY BY QUERY )returning same class for association source and target

(DONE) apply association work around to caDSRServiceImpl 

(DONE) fix association rendering in UMLDiagram (its all messed up)

(DONE) artifact for service security stuff

(DONE) move caDSR Portal progress panel's to steve new threaded one?

(DONE) add a "--SELECT AN ITEM--" option to all combo boxes in CaDSRBrowserPanel

(DONE) attribute name has classname: prefix

(DONE) discovery panel needs a progress bar 

(DONE) generate DomainModel metadata extracts

(DONE) added association support

(DONE) make browser into introduce plugin

(DONE) need to add more context to methods for proper unambiguity

(DONE) browser needs to show project version

(DONE)until there is a public 3.1 server, this uses nci internal ones with a localhost sshtunnel

(DONE) extract property for cacore service to contact

(DONE) handle all exceptions

(DONE) remove cagrid-core jar from lib and add build dependency


(DONE) serialization stuff:
====================
http://gforge.nci.nih.gov/plugins/scmcvs/cvsweb.php/cacoretoolkit/src/gov/nih/nci/common/util/?cvsroot=cacoretoolkit
http://cvs.apache.org/viewcvs.cgi/webservices/axis/trunk/java/src/org/apache/axis/encoding/ser/castor/

http://www.castor.org/xml-faq.html
http://www.castor.org/how-to-enable-xml-validation.html
http://www.castor.org/xml-mapping.html
http://www.sosnoski.com/presents/cleansoap/results.html

(DONE) make generic and move to core project

(DONE - no, but caches now)get mapper and marshaller staticly?

(DONE - fixed in introduce) had to hand edit:
 -client/server type mapping in client-config.wsdd, and castorMapping property to point to classpath location to load mapping file
