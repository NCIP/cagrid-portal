<?xml version="1.0"?>
<project name="build-deploy file" basedir="." default="deployTomcat">
	<property file="deploy.properties"/>
	<property environment="env"/>
	<!-- Tomcat Properties -->
	<property name="tomcat.dir" value="${env.CATALINA_HOME}"/>
	<property name="tomcat.common.lib.dir" value="${tomcat.dir}/common/lib"/>
	<property name="tomcat.deploy.dir" value="${tomcat.dir}/webapps/wsrf/WEB-INF"/>
	<property name="tomcat.deploy.lib.dir" value="${tomcat.deploy.dir}/lib"/>
	<property name="tomcat.wsrf.schema.dir" value="${tomcat.dir}/webapps/wsrf/share/schema"/>
	<!-- Relative path to Tomcat server configuration file-->
	<property name="tomcat.server.xml" value="/conf/server.xml"/>
	<!-- Globus Toolkit Properties -->
	<property name="gt.dir" value="${env.GLOBUS_LOCATION}"/>
	<property name="gt.lib.dir" value="${gt.dir}/lib"/>
	<property name="service.path" value="mobius/mako"/>
	<property name="service.deployment.descriptor" value="${basedir}/server-config.wsdd"/>
	<!-- Configuration files (security, etc.) to be included in the GAR file -->
	<property name="garetc.id" value="garetc" />
	<fileset dir="tmp/etc" id="garetc" />
	<target name="deployTomcat" description="Deploys to CATALINA_HOME">
		<echo message="Deploying service under Tomcat at ${tomcat.dir}"/>
		<!-- Configure Tomcat destination for skeletons -->
		<pathconvert dirsep="_" property="service.deployment.dir.name">
			<path>
				<pathelement path="${service.deployment.path}"/>
			</path>
			<map from="${basedir}" to=""/>
			<map from="/" to=""/>
		</pathconvert>
		<property name="service.deployment.dir"
			value="${tomcat.deploy.dir}/etc/${service.deployment.dir.name}"/>
		<!-- prepare the deployment directory -->
		<mkdir dir="${service.deployment.dir}"/>
		<!-- Copy skeleton files to Tomcat and rename -->
		<copy overwrite="true" toDir="${service.deployment.dir}">
			<fileset dir="${basedir}/etc">
				<include name="*"/>
			</fileset>
		</copy>
		<!--copy over the jars to the lib -->
		<copy overwrite="true" toDir="${tomcat.deploy.lib.dir}">
			<fileset dir="ext/lib">
				<include name="*"/>
			</fileset>
			<fileset dir="lib">
				<include name="*"/>
			</fileset>
			<fileset dir="build/lib">
				<include name="*"/>
			</fileset>
		</copy>
		<!--copy over the schema service files-->
		<copy overwrite="true" toDir="${tomcat.wsrf.schema.dir}/${service.deployment.dir.name}">
			<fileset dir="build/schema/${service.name}">
				<include name="**\*"/>
			</fileset>
		</copy>
		<!-- prepare the server-config file -->
		<mkdir dir="tmp"/>
		<copy overwrite="true" todir="tmp" file="server-config.wsdd"/>
		<!-- replace the config paths in the server deploy file -->
		<replace file="tmp/server-config.wsdd" value="${service.deployment.dir.name}"
			token="SERVICE-INSTANCE-PATH"/>
		<replace file="tmp/server-config.wsdd" value="${service.deployment.path}"
			token="SERVICE-INSTANCE-NAME"/>
		<replace file="tmp/server-config.wsdd" value="${service.deployment.dir}"
			token="FULL-ETC-PATH"/>
		<replace file="tmp/server-config.wsdd" value="etc/${service.deployment.dir.name}"
			token="ETC-PATH"/>
		<copy overwrite="true" toDir="${service.deployment.dir}">
			<fileset dir="tmp">
				<include name="server-config.wsdd"/>
			</fileset>
		</copy>
		<!-- prepare the jndi file -->
		<copy overwrite="true" todir="tmp" file="jndi-config.xml"/>
		<!-- replace the config paths in the server deploy file -->
		<replace file="tmp/jndi-config.xml" value="${service.deployment.dir.name}"
			token="SERVICE-INSTANCE-PATH"/>
		<replace file="tmp/jndi-config.xml" value="${service.deployment.path}"
			token="SERVICE-INSTANCE-NAME"/>
		<replace file="tmp/jndi-config.xml" value="etc/${service.deployment.dir.name}"
			token="ETC-PATH"/>
		<copy overwrite="true" toDir="${service.deployment.dir}">
			<fileset dir="tmp">
				<include name="jndi-config.xml"/>
			</fileset>
		</copy>
		<!-- prepare the server configuration file -->
		<copy overwrite="true" todir="tmp" file="etc/gme-globus-config.xml"/>
		<!-- replace the config paths in the server config file -->
		<replace file="tmp/gme-globus-config.xml" value="${service.deployment.dir.name}"
			token="SERVICE-INSTANCE-PATH"/>
		<replace file="tmp/gme-globus-config.xml" value="${service.deployment.path}"
			token="SERVICE-INSTANCE-NAME"/>
		<replace file="tmp/gme-globus-config.xml" value="etc/${service.deployment.dir.name}"
			token="ETC-PATH"/>
		<copy overwrite="true" toDir="${service.deployment.dir}">
			<fileset dir="tmp">
				<include name="gme-globus-config.xml"/>
			</fileset>
		</copy>
		<!--<delete dir="tmp" />-->
	</target>
	<!-- make deployment configured gar -->
	<target name="createDeploymentGar" depends="all">
		<property name="service.deployment.dir.name" value="${service.name}"/>
		<property name="service.deployment.dir"
			value="${globus.location}/etc/${service.deployment.dir.name}"/>
		<copy todir="${build.lib.dir}">
			<fileset dir="${basedir}/lib">
				<include name="*.jar"/>
			</fileset>
			<fileset dir="${ext.lib.dir}">
				<include name="*.jar"/>
			</fileset>
		</copy>
		<!-- prepare the server-config file -->
		<mkdir dir="tmp"/>
		<copy overwrite="true" todir="tmp" file="server-config.wsdd"/>
		<!-- replace the config paths in the server deploy file -->
		<replace file="tmp/server-config.wsdd" value="${service.deployment.dir.name}"
			token="SERVICE-INSTANCE-PATH"/>
		<replace file="tmp/server-config.wsdd" value="${service.deployment.path}"
			token="SERVICE-INSTANCE-NAME"/>
		<replace file="tmp/server-config.wsdd" value="${service.deployment.dir}"
			token="FULL-ETC-PATH"/>
		<replace file="tmp/server-config.wsdd" value="etc/${service.deployment.dir.name}"
			token="ETC-PATH"/>
		<!-- prepare the jndi file -->
		<copy overwrite="true" todir="tmp" filtering="true" file="jndi-config.xml"/>
		<!-- replace the config paths in the server deploy file -->
		<replace file="tmp/jndi-config.xml" value="${service.deployment.dir.name}"
			token="SERVICE-INSTANCE-PATH"/>
		<replace file="tmp/jndi-config.xml" value="${service.deployment.path}"
			token="SERVICE-INSTANCE-NAME"/>
		<replace file="tmp/jndi-config.xml" value="etc/${service.deployment.dir.name}"
			token="ETC-PATH"/>
		<copy overwrite="true" todir="tmp/etc" >
			<fileset dir="${basedir}/etc">
				<include name="**/*"/>
			</fileset>
		</copy>
		<replace file="tmp/etc/gme-globus-config.xml" value="${service.deployment.dir.name}"
			token="SERVICE-INSTANCE-PATH"/>
		<replace file="tmp/etc/gme-globus-config.xml" value="${service.deployment.path}"
			token="SERVICE-INSTANCE-NAME"/>
		<replace file="tmp/etc/gme-globus-config.xml" value="etc/${service.deployment.dir.name}"
			token="ETC-PATH"/>
		<!-- make the gar file -->
		<ant antfile="${build.packages}" target="makeGar">
			<property name="garserverdeployment.file" value="${basedir}/tmp/server-config.wsdd"/>
			<property name="garjndiconfigdeployment.file" value="${basedir}/tmp/jndi-config.xml"/>
			<property name="garclientdeployment.file" value="${basedir}/client-config.wsdd"/>
			<property name="garclientserverdeployment.file" value="${basedir}/client-server.wsdd"/>
			<reference refid="${garjars.id}"/>
			<reference refid="${garschema.id}"/>
			<reference refid="${garetc.id}"/>
		</ant>
		<delete dir="tmp"/>
	</target>
	<!-- deploy a gar to globus -->
	<target name="deployGlobus" depends="createDeploymentGar"
		description="Deploys a gar to GLOBUS_LOCATION (to set the services properties file set the
		ant command line variable -Dservice.properties.file)">
		<echo message="Deploying server to Globus Container"/>
		<java classname="org.globus.bootstrap.AntBootstrap" fork="yes" failonerror="true">
			<jvmarg value="-DGLOBUS_LOCATION=${globus.location}"/>
			<jvmarg value="-Djava.endorsed.dirs=${globus.location}/endorsed"/>
			<sysproperty key="GLOBUS_LOCATION" value="${globus.location}"/>
			<sysproperty key="ANT_HOME" value="${ant.home}"/>
			<arg value="org.globus.tools.gar.DeployGar"/>
			<arg value="${gar.name}"/>
			<classpath>
				<fileset dir="${globus.location}/lib">
					<include name="*.jar"/>
				</fileset>
				<fileset dir="${ant.library.dir}">
					<include name="*.jar"/>
				</fileset>
			</classpath>
		</java>
		<delete dir="${gar.name}"/>
		<!-- deploy the gar -->
	</target>
</project>
