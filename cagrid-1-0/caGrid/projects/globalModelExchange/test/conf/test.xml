<!-- ======================================================================= -->
<!-- GlobalModelExchange Test build file                                     -->
<!-- ======================================================================= -->
<project name="gme_tests_harness" basedir=".">
    <!-- Setting this to true causes the tests to stop as soon as something fails -->
    <property name="test.failfast" value="false" />

    <target name="set-full-test-defaults">
        <property name="run.unit.tests" value="true" />
        <property name="run.system.tests" value="true" />
        <property name="create.test.report" value="true" />
    </target>
    <target name="set-unit-test-defaults">
        <property name="run.unit.tests" value="true" />
        <property name="run.system.tests" value="false" />
        <property name="create.test.report" value="true" />
    </target>
    <target name="set-system-test-defaults">
        <property name="run.unit.tests" value="false" />
        <property name="run.system.tests" value="true" />
        <property name="create.test.report" value="true" />
    </target>

    <target name="unitTest" depends="set-unit-test-defaults,test" description="Unit tests the project completely, generating a report." />
    <target name="systemTest" depends="set-system-test-defaults,test" description="System tests the project completely, generating a report." />
    <target name="fullTest" depends="set-full-test-defaults,test" description="Completely tests the project (system and unit tests), generating a report." />

    <!-- ============================================================================ -->
    <!-- Calls unit and system test for each project and aggregates the log resutls   -->
    <!-- ============================================================================ -->
    <target name="test" depends="checkGlobus,set-unit-test-defaults">
        <echo message="Test results dir: ${junit.results.dir}" />
        <!-- Clean out old logs first -->
        <delete failonerror="false">
            <fileset dir="${junit.results.dir}">
                <include name="*" />
            </fileset>
        </delete>
        <mkdir dir="${junit.results.dir}" />


        <!-- Call Unit Tests -->
        <if>
            <equals arg1="${run.unit.tests}" arg2="true" />
            <then>
                <trycatch property="test.failed.message">
                    <try>
                        <runtarget target="unit-test" />
                    </try>
                    <catch>
                        <property name="test.failed" value="true" />
                    </catch>
                </trycatch>
            </then>
            <else>
                <echo message="Skipping unit tests." />
            </else>
        </if>


        <!-- Call System Tests -->
        <if>
            <equals arg1="${run.system.tests}" arg2="true" />
            <then>
                <trycatch property="test.failed.message">
                    <try>
                        <runtarget target="system-test" />
                    </try>
                    <catch>
                        <property name="test.failed" value="true" />
                    </catch>
                </trycatch>
            </then>
            <else>
                <echo message="Skipping system tests." />
            </else>
        </if>


        <!-- Try to create a report -->
        <if>
            <equals arg1="${create.test.report}" arg2="true" />
            <then>
                <trycatch property="test.report.failed.message">
                    <try>
                        <mkdir dir="${junit.results.dir}/report" />
                        <junitreport todir="${junit.results.dir}">
                            <fileset dir="${junit.results.dir}">
                                <include name="TEST-*.xml" />
                            </fileset>
                            <report format="frames" todir="${junit.results.dir}/report" />
                        </junitreport>
                        <echo message="Created test report in ${junit.results.dir}/report" />
                    </try>
                    <catch>
                        <echo message="Test Report creation failed (${test.report.failed.message})!" />
                    </catch>
                </trycatch>
            </then>
            <else>
                <echo message="Skipping test report creation." />
            </else>
        </if>

        <fail message="Tests failed! ${test.failed.message} Consult the logs for details." if="test.failed" />
    </target>

    <target name="unit-test">
        <junit dir="${basedir}" haltonerror="${test.failfast}" haltonfailure="${test.failfast}" printsummary="yes" errorproperty="unit.test.failed" failureproperty="unit.test.failed" forkmode="once">
            <jvmarg value="-Dbuild.dir=${build.dest}" />
            <sysproperty key="build.dir" value="${build.dest}" />
            <classpath refid="test.run.classpath" />
            <formatter type="xml" />
            <batchtest fork="yes" todir="${junit.results.dir}">
                <fileset dir="${unit.test.src.dir}">
                    <include name="**/Test*.java" />
                    <include name="**/*TestCase.java" />
                </fileset>
            </batchtest>
        </junit>
        <fail message="Unit Tests failed! Consult the logs for details." if="unit.test.failed" />
    </target>
    <target name="system-test">
        <junit dir="${basedir}" haltonerror="${test.failfast}" haltonfailure="${test.failfast}" printsummary="yes" errorproperty="system.test.failed" failureproperty="system.test.failed" forkmode="once">
            <jvmarg value="-Dbuild.dir=${build.dest}" />
            <sysproperty key="build.dir" value="${build.dest}" />
            <classpath refid="test.run.classpath" />
            <formatter type="xml" />
            <batchtest fork="yes" todir="${junit.results.dir}">
                <fileset dir="${system.test.src.dir}">
                    <include name="**/Test*.java" />
                    <include name="**/*TestCase.java" />
                </fileset>
            </batchtest>
        </junit>

        <fail message="System Tests failed! Consult the logs for details." if="system.test.failed" />
    </target>

    <target name="createTestDatabase">
        <ant dir="${torque.dir}" antfile="build-torque.xml" target="sql" />
    </target>
</project>