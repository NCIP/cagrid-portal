<?xml version="1.0"?>
<project name="Developer Modified Build File" basedir=".">
	<!-- ============================================================== -->
	<!-- This file is designed to allow the developer to extend the     -->
	<!-- build process without having to edit the master build.xml      -->
	<!-- file. DO NOT REMOVE ANY TARGETS                                -->
	<!-- ============================================================== -->


	<!-- ============================================================== -->
	<!-- Place any other properties you will need here                  -->
	<!-- ============================================================== -->

	<property environment="env" />
	<property file="${basedir}/project.properties" />
	<property file="${basedir}/build.properties" />

	<property name="jar.prefix" value="caGrid-GlobalModelExchange2" />
	<property name="jar.suffix" value="${project.version}.jar" />

	<property name="common.jar.name" value="${jar.prefix}-common-${jar.suffix}" />
	<property name="client.jar.name" value="${jar.prefix}-client-${jar.suffix}" />
	<property name="service.jar.name" value="${jar.prefix}-service-${jar.suffix}" />
	<property name="stubs.jar.name" value="${jar.prefix}-stubs-${jar.suffix}" />
	<property name="test.jar.name" value="${jar.prefix}-tests-${jar.suffix}" />

	<property name="ext.dir" location="${basedir}/ext" />
	<property name="ext.dependencies.dir" location="${ext.dir}/dependencies" />
	<property name="ext.targetgrid.dir" location="${ext.dir}/target_grid" />
	<property name="ext.lib" location="${ext.dependencies.dir}/service/jars" />
	<property name="ext.test.lib" value="${ext.dependencies.dir}/test/jars" />

	<property name="test.dir" value="test" />
	<property name="test.src.dir" value="${test.dir}/src" />
	<property name="unit.test.src.dir" value="${test.dir}/unit/src" />
	<property name="system.test.src.dir" value="${test.dir}/system/src" />

	<property name="test.lib.dir" value="${test.dir}/lib" />
	<property name="test.log.dir" value="test/logs" />
	<property name="junit.results.dir" value="${test.log.dir}/junit" />

	<property name="force.config.replace" value="false" />
	<property name="torque.dir" value="resources/torque-gen-3.3-RC1" />

	<import file="${test.dir}/conf/test.xml" />

	<!-- ============================================================== -->
	<!-- Create any extended Classpaths here                            -->
	<!-- ============================================================== -->
	<target name="defineExtendedClasspaths">
		<path id="base.extended.classpath">
			<fileset dir="${ext.lib}">
				<include name="*.jar" />
			</fileset>
		</path>
		<path id="service.build.extended.classpath">
		</path>
		<path id="service.run.extended.classpath">
		</path>
		<path id="test.build.extended.classpath">
			<fileset dir="${ext.test.lib}">
				<include name="*.jar" />
			</fileset>
		</path>
		<path id="test.run.extended.classpath">
		</path>
		<path id="run.extended.classpath">
		</path>

		<path id="tasks.run.extended.classpath">
			<fileset dir="${ext.lib}">
				<include name="caGrid-core*.jar" />
				<include name="jdom*.jar" />
			</fileset>
		</path>
	</target>


	<!-- ============================================================== -->
	<!-- Pre Init Target                                                -->
	<!-- ============================================================== -->
	<target name="preInit">

	</target>

	<!-- ============================================================== -->
	<!-- Post Init Build Target                                         -->
	<!-- ============================================================== -->
	<target name="postInit" depends="create_config_files">

	</target>


	<!-- ============================================================== -->
	<!-- Pre Stubs Target                                               -->
	<!-- ============================================================== -->
	<target name="preStubs">

	</target>

	<!-- ============================================================== -->
	<!-- Post Stubs Build Target                                        -->
	<!-- ============================================================== -->
	<target name="postStubs">

	</target>

	<!-- ============================================================== -->
	<!-- Pre Compile Stubs Build Target                                 -->
	<!-- ============================================================== -->
	<target name="preCompileStubs">

	</target>

	<!-- ============================================================== -->
	<!-- Post Compile Stubs Build Target                                -->
	<!-- ============================================================== -->
	<target name="postCompileStubs">

	</target>

	<!-- ============================================================== -->
	<!-- Pre Jar Stubs Build Target                                     -->
	<!-- ============================================================== -->
	<target name="preJarStubs">

	</target>

	<!-- ============================================================== -->
	<!-- Post Jar Stubs Build Target                                    -->
	<!-- ============================================================== -->
	<target name="postJarStubs">

	</target>

	<!-- ============================================================== -->
	<!-- Pre Compile Build Target                                       -->
	<!-- ============================================================== -->
	<target name="preCompile">

	</target>

	<!-- ============================================================== -->
	<!-- Post Compile Build Target                                       -->
	<!-- ============================================================== -->
	<target name="postCompile">

	</target>

	<!-- ============================================================== -->
	<!-- Pre Jar Build Target                                       -->
	<!-- ============================================================== -->
	<target name="preJar">

	</target>

	<!-- ============================================================== -->
	<!-- Post Jar Build Target                                          -->
	<!-- ============================================================== -->
	<target name="postJar">

	</target>

	<!-- ============================================================== -->
	<!-- Pre Compile Tests Build Target                                 -->
	<!-- ============================================================== -->
	<target name="preCompileTests">

	</target>

	<!-- ============================================================== -->
	<!-- Post Compile Tests Build Target                                -->
	<!-- ============================================================== -->
	<target name="postCompileTests" depends="compileUnitTests,compileSystemTests">

	</target>

	<!-- ============================================================== -->
	<!-- Pre Jar Tests Build Target                                     -->
	<!-- ============================================================== -->
	<target name="preJarTests">

	</target>

	<!-- ============================================================== -->
	<!-- Post Jar Tests Build Target                                    -->
	<!-- ============================================================== -->
	<target name="postJarTests">

	</target>

	<!-- ============================================================== -->
	<!-- Pre Clean Target                                               -->
	<!-- ============================================================== -->
	<target name="preClean">

	</target>

	<!-- ============================================================== -->
	<!-- Post Clean Target                                              -->
	<!-- ============================================================== -->
	<target name="postClean">

	</target>


	<target name="compileUnitTests" depends="compile">
		<javac srcdir="${unit.test.src.dir}" classpathref="test.build.classpath" destdir="${test.build.dest}" debug="${java.debug}" deprecation="${deprecation}" />
	</target>

	<target name="compileSystemTests" depends="compile">
		<javac srcdir="${system.test.src.dir}" classpathref="test.build.classpath" destdir="${test.build.dest}" debug="${java.debug}" deprecation="${deprecation}" />
	</target>


	<target name="configure" description="Configures the project based on settings.">
		<!-- These are the template files we are copying from -->
		<fileset id="templates.fileset" dir="${basedir}">
			<include name="*.template" />
		</fileset>
		<!-- We need to basically reverse the mapper used in the copy to 
	                 identify the target files -->
		<fileset id="template.results.fileset" dir="${basedir}">
			<include name="*" />
			<present targetdir="${basedir}">
				<mapper type="glob" from="*" to="*.template" />
			</present>
		</fileset>

		<!-- First, create any target file that doesn't exist; outofdate doesn't handle this case -->
		<copy todir="${basedir}">
			<fileset dir="${basedir}">
				<include name="*.template" />
				<not>
					<present targetdir="${basedir}">
						<mapper type="glob" from="*.template" to="*" />
					</present>
				</not>
			</fileset>
			<mapper type="glob" from="*.template" to="*" />
			<filterset filtersfile="${ext.targetgrid.dir}/service_urls.properties" />
		</copy>

		<!-- Next, re-template all the files, if either the filter value files or the template files 
	                 are newer than the their targets -->
		<outofdate verbose="true">
			<sourcefiles>
				<pathelement path="${ext.targetgrid.dir}/service_urls.properties" />
				<fileset refid="templates.fileset" />
			</sourcefiles>
			<targetfiles>
				<fileset refid="template.results.fileset" />
			</targetfiles>
			<sequential>
				<copy todir="${basedir}" overwrite="true">
					<fileset refid="templates.fileset" />
					<mapper type="glob" from="*.template" to="*" />
					<filterset filtersfile="${ext.targetgrid.dir}/service_urls.properties" />
				</copy>
			</sequential>
		</outofdate>
	</target>

	<!-- ============================================================== -->
	<!-- Creates conf files from examples                               -->
	<!-- ============================================================== -->
	<target name="create_config_files" description="Creates conf files from examples. Set property
		force.config.replace to true to force replacement.">
		<copy todir="${etc.dir}" overwrite="${force.config.replace}">
			<fileset dir="${etc.dir}">
				<include name="**/*.example" />
			</fileset>
			<mapper type="glob" from="*.example" to="*" />
		</copy>
	</target>

</project>