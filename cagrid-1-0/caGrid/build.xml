<?xml version="1.0"?>

<!-- ================================================================= -->
<!-- caGrid Master build file                                          -->
<!-- ================================================================= -->

<project name="Master" default="all" basedir=".">
	<!-- Give user the chance to override properties -->
	<property environment="env" />
	<property file="build.properties" />

	<!-- Layout info -->
	<property name="projects.dir" location="${basedir}/projects" />
	<property name="test.dir" location="${basedir}/test" />

	<!-- IMPORT THE UTILITIES TARGETS -->
	<property name="antfiles.dir" location="${basedir}/antfiles" />
	<import file="${antfiles.dir}/ant-utilities.xml" />
	<import file="${antfiles.dir}/test-utilities.xml" />
	<import file="${antfiles.dir}/report-utilities.xml" />

	<!-- IMPORT THE TEST TARGET -->
	<import file="${test.dir}/test.xml" />


	<!-- =============================================================== -->
	<!-- Bootstrap the build by setting up the structure and building    -->
	<!-- our custom ant tasks.                                           -->
	<!-- =============================================================== -->
	<target name="prepare">
		<tstamp />
		<delete dir="${antfiles.dir}/build" />
		<mkdir dir="${antfiles.dir}/build" />
		<javac srcdir="${antfiles.dir}/src" destdir="${antfiles.dir}/build" debug="on" deprecation="off" optimize="off">
			<classpath>
				<fileset dir="${ant.library.dir}">
					<include name="ant.jar" />
				</fileset>
			</classpath>
		</javac>

		<typedef name="artifact" classname="gov.nih.nci.cagrid.ant.Artifact" loaderref="artifact">
			<classpath>
				<pathelement location="${antfiles.dir}/build" />
			</classpath>
		</typedef>
		<taskdef name="resolveDependencies" classname="gov.nih.nci.cagrid.ant.ResolveDependencies" loaderref="artifact">
			<classpath>
				<pathelement location="${antfiles.dir}/build" />
			</classpath>
		</taskdef>
	</target>


	<!-- =============================================================== -->
	<!-- Define the build artifacts (created/used by projects) here      -->
	<!--                                                                 -->
	<!-- NOTE:  These should be all of the files necessary to "depend" on-->
	<!-- the project (not just the built files).  Make a separate        -->
	<!-- artifact for groups of files that will probably be copied to    -->
	<!-- separate directoris (e.g. jars and conf files)                  -->
	<!-- =============================================================== -->
	<target name="defineArtifacts" depends="prepare">
		<artifact track="main" type="jars" id="core.jars">
			<antcall target="build-core" />
			<fileset dir="${projects.dir}/core/build/jars">
				<include name="*.jar" />
				<exclude name="*test*.jar" />
			</fileset>
			<fileset dir="${projects.dir}/core/lib">
				<include name="*.jar" />
				<exclude name="*test*.jar" />
			</fileset>
			<fileset dir="${projects.dir}/core/ext/lib">
				<include name="*.jar" />
				<exclude name="*test*.jar" />
			</fileset>
		</artifact>
		<artifact track="main" type="jars" id="mobius.jars">
			<fileset dir="${basedir}/share/lib/mobius">
				<include name="*.jar" />
			</fileset>
		</artifact>
		<artifact track="test" type="jars" id="core.test.jars">
			<antcall target="build-core" />
			<fileset dir="${projects.dir}/core/build/jars">
				<include name="*test*.jar" />
			</fileset>
			<fileset dir="${projects.dir}/core/test/lib">
				<include name="*.jar" />
			</fileset>
		</artifact>
		<artifact track="main" type="jars" id="metadata.jars">
			<antcall target="build-metadata" />
			<fileset dir="${projects.dir}/metadata/build/lib">
				<include name="*.jar" />
				<exclude name="*test*.jar" />
			</fileset>
		</artifact>
		<artifact track="main" type="schemas" id="metadata.schemas">
			<fileset dir="${projects.dir}/metadata/schema">
				<include name="**/*.xsd" />
			</fileset>
		</artifact>
		<artifact track="main" type="mappings" id="metadata.mappings">
			<fileset dir="${projects.dir}/metadata">
				<include name="NStoPkg.properties" />
			</fileset>
		</artifact>
		<artifact track="main" type="resources" id="core.resources">
			<fileset dir="${projects.dir}/core/resources">
				<include name="**" />
			</fileset>
		</artifact>

		<artifact track="main" type="jars" id="opensaml.jars">
			<antcall target="build-opensaml" />
			<fileset dir="${projects.dir}/opensaml/dist">
				<include name="cagrid-opensaml-1.1.jar" />
			</fileset>
		</artifact>

		<artifact track="main" type="jars" id="gridca.jars">
			<antcall target="build-gridca" />
			<fileset dir="${projects.dir}/gridca/build/lib">
				<include name="gridca.jar" />
			</fileset>
		</artifact>

		<artifact track="main" type="jars" id="cadsr.jars">
			<antcall target="build-cadsr" />
			<fileset dir="${projects.dir}/cadsr/build/jars">
				<include name="*.jar" />
				<exclude name="*test*.jar" />
			</fileset>
			<fileset dir="${projects.dir}/cadsr/lib">
				<include name="*.jar" />
			</fileset>
		</artifact>
		
		<artifact track="main" type="jars" id="data.jars">
			<antcall target="build-data"/>
			<fileset dir="${projects.dir}/data/build/lib">
				<include name="*.jar"/>
			</fileset>
		</artifact>
		
		<artifact track="main" type="resources" id="gridca.resources">
			<fileset dir="${projects.dir}/gridca/resources">
				<include name="**" />
			</fileset>
		</artifact>

		<artifact track="endorsed" type="jars" id="opensaml.endorsed">
			<fileset dir="${projects.dir}/opensaml/endorsed">
				<include name="xercesImpl.jar" />
				<include name="xml-apis.jar" />
			</fileset>
		</artifact>

		<artifact track="main" type="jars" id="cql2xpath.jars">
			<antcall target="build-cql2xpath"/>
			<fileset dir="${projects.dir}/cql2xpath/build/lib">
				<include name="*.jar"/>
			</fileset>
		</artifact>
	</target>


	<!-- =============================================================== -->
	<!-- CORE: This cannot have any dependencies on other projects       -->
	<!-- =============================================================== -->
	<target name="build-core" depends="prepare" description="Builds the core">
		<resolveDependencies extdir="${projects.dir}/core/ext">
			<artifact refid="mobius.jars" />
		</resolveDependencies>
		<ant dir="${projects.dir}/core" inheritAll="false" antfile="build.xml" target="all" />
	</target>

	<!-- =============================================================== -->
	<!-- OPENSAML: This cannot have any dependencies on other projects       -->
	<!-- =============================================================== -->

	<target name="build-opensaml" depends="prepare" description="Builds opensaml">
		<ant dir="${projects.dir}/opensaml" inheritAll="false" antfile="build.xml" target="all" />
	</target>


	<!-- =============================================================== -->
	<!-- METADATA: This may only depend on core                          -->
	<!-- =============================================================== -->
	<target name="build-metadata" depends="prepare" description="Builds the common metadata">
		<resolveDependencies extdir="${projects.dir}/metadata/ext">
			<artifact refid="core.jars" />
		</resolveDependencies>
		<ant dir="${projects.dir}/metadata" inheritAll="false" antfile="build.xml" target="jar" />
	</target>


	<!-- =============================================================== -->
	<!-- cadsr:                                                         -->
	<!-- =============================================================== -->
	<target name="build-cadsr" depends="prepare" description="Builds the cadsr project">
		<resolveDependencies extdir="${projects.dir}/cadsr/ext">
			<artifact refid="core.jars" />
		</resolveDependencies>
		<ant dir="${projects.dir}/cadsr" inheritAll="false" antfile="build.xml" target="all" />
	</target>


	<!-- =============================================================== -->
	<!-- Grid CA:                                                         -->
	<!-- =============================================================== -->
	<target name="build-gridca" depends="prepare" description="Builds the gridca project">
		<resolveDependencies extdir="${projects.dir}/gridca/ext">
			<artifact refid="core.jars" />
			<artifact refid="core.test.jars" />
			<artifact refid="core.resources" />
		</resolveDependencies>
		<ant dir="${projects.dir}/gridca" inheritAll="false" antfile="build.xml" target="all" />
	</target>


	<!-- =============================================================== -->
	<!-- DORIAN:                                                         -->
	<!-- =============================================================== -->
	<target name="build-dorian" depends="prepare" description="Builds the dorian project">
		<resolveDependencies extdir="${projects.dir}/dorian/ext">
			<artifact refid="core.jars" />
			<artifact refid="core.test.jars" />
			<artifact refid="core.resources" />
			<artifact refid="gridca.jars" />
			<artifact refid="gridca.resources" />
			<artifact refid="mobius.jars" />
			<artifact refid="opensaml.jars" />
			<artifact refid="opensaml.endorsed" />
		</resolveDependencies>
		<ant dir="${projects.dir}/dorian" inheritAll="false" antfile="build.xml" target="all" />
	</target>


	<!-- =============================================================== -->
	<!-- Grid Trust Service:                                                         -->
	<!-- =============================================================== -->
	<target name="build-gts" depends="prepare" description="Builds the dorian project">
		<resolveDependencies extdir="${projects.dir}/gts/ext">
			<artifact refid="core.jars" />
			<artifact refid="core.test.jars" />
			<artifact refid="core.resources" />
			<artifact refid="gridca.jars" />
			<artifact refid="gridca.resources" />
			<artifact refid="mobius.jars" />
		</resolveDependencies>
		<ant dir="${projects.dir}/gts" inheritAll="false" antfile="build.xml" target="all" />
	</target>



	<!-- =============================================================== -->
	<!-- INTRODUCE:                                                      -->
	<!-- =============================================================== -->
	<target name="build-introduce" depends="prepare" description="Builds Introduce">
		<resolveDependencies extdir="${projects.dir}/introduce/ext">
			<artifact refid="core.jars" />
			<artifact refid="core.test.jars" />
			<artifact refid="core.resources" />
			<artifact refid="mobius.jars" />
			<artifact refid="metadata.jars" />
			<artifact refid="metadata.schemas" />
			<artifact refid="metadata.mappings" />
			<artifact refid="opensaml.jars" />
			<artifact refid="opensaml.endorsed" />
			<artifact refid="gridca.jars" />
			<artifact refid="gridca.resources" />
		</resolveDependencies>
		<ant dir="${projects.dir}/introduce" inheritAll="false" antfile="build.xml" target="all" />
	</target>

	<!-- =============================================================== -->
	<!-- CAGRID GME:                                                     -->
	<!-- =============================================================== -->
	<target name="build-gme" depends="prepare" description="Builds caGrid GME">
		<resolveDependencies extdir="${projects.dir}/gme/ext">
			<artifact refid="core.jars" />
			<artifact refid="core.test.jars" />
			<artifact refid="core.resources" />
			<artifact refid="mobius.jars" />
			<artifact refid="metadata.jars" />
			<artifact refid="metadata.schemas" />
			<artifact refid="metadata.mappings" />
		</resolveDependencies>
		<ant dir="${projects.dir}/gme" inheritAll="false" antfile="build.xml" target="all" />
	</target>
	
	
	<!-- =============================================================== -->
	<!-- CAGRID DataService:                                             -->
	<!-- =============================================================== -->
	<target name="build-data" depends="prepare" description="Builds caGrid Data Services components">
		<ant dir="${projects.dir}/data" inheritAll="false" antfile="build.xml" target="all"/>
	</target>
	
	
	<!-- =============================================================== -->
	<!-- CAGRID Cql2Xpath:                                             -->
	<!-- =============================================================== -->
	<target name="build-cql2xpath" depends="prepare" description="Builds caGrid Cql2Xpath utility">
		<resolveDependencies extdir="${projects.dir}/cql2xpath/ext">
			<artifact refid="core.jars" />
		</resolveDependencies>
		<ant dir="${projects.dir}/cql2xpath" inheritAll="false" antfile="build.xml" target="all"/>
	</target>


	<!-- ============================================================== -->
	<!-- Cleans up generated stuff                                      -->
	<!-- ============================================================== -->
	<target name="clean" description="Cleans all projects.">
		<!--<subant target="clean"  >
			<fileset dir="${projects.dir}" includes="*/build.xml" />
		</subant>-->
		<delete dir="${projects.dir}/core/ext" />
		<ant dir="${projects.dir}/core" inheritAll="false" antfile="build.xml" target="clean" />
		<delete dir="${projects.dir}/metadata/ext" />
		<ant dir="${projects.dir}/metadata" inheritAll="false" antfile="build.xml" target="clean" />
		<delete dir="${projects.dir}/gme/ext" />
		<ant dir="${projects.dir}/gme" inheritAll="false" antfile="build.xml" target="clean" />
		<delete dir="${projects.dir}/introduce/ext" />
		<ant dir="${projects.dir}/introduce" inheritAll="false" antfile="build.xml" target="clean" />
		<delete dir="${projects.dir}/dorian/ext" />
		<ant dir="${projects.dir}/dorian" inheritAll="false" antfile="build.xml" target="clean" />
		<delete dir="${projects.dir}/gridca/ext" />
		<ant dir="${projects.dir}/gridca" inheritAll="false" antfile="build.xml" target="clean" />
		<delete dir="${projects.dir}/cadsr/ext" />
		<ant dir="${projects.dir}/cadsr" inheritAll="false" antfile="build.xml" target="clean" />
		<delete dir="${projects.dir}/opensaml/ext" />
		<ant dir="${projects.dir}/opensaml" inheritAll="false" antfile="build.xml" target="clean" />
		<delete dir="${projects.dir}/cql2xpath/ext" />
		<ant dir="${projects.dir}/cql2xpath" inheritAll="false" antfile="build.xml" target="clean" />
	</target>


	<!-- ============================================================== -->
	<!-- Builds from scratch                                            -->
	<!-- ============================================================== -->
	<condition property="isJDK1.5">
		<equals arg1="${ant.java.version}" arg2="1.5" />
	</condition>

	<echo message="${isJDK1.5}" />
	<target name="all" depends="all_1.5,all_pre_1.5" description="Builds the entire application" />
	<target name="all_1.5_build" if="isJDK1.5" depends="clean, build-core, build-cadsr, build-gridca, build-opensaml, build-metadata, build-cql2xpath, build-gme, build-gts, build-introduce, build-dorian" />
	<target name="all_1.5" if="isJDK1.5">
		<antcall target="all_1.5_build" />
		<echo message="Successfully built all projects." />
	</target>
	<target name="all_pre_1.5_build" unless="isJDK1.5" depends="clean, build-core, build-gridca, build-opensaml, build-metadata, build-gme, build-gts, build-introduce, build-dorian" />
	<target name="all_pre_1.5" unless="isJDK1.5">
		<echo message="=====================================================================================" />
		<echo message="WARNING: When building with a JDK of version &lt; 1.5, not all projects can be built!" />
		<echo message="=====================================================================================" />
		<antcall target="all_pre_1.5_build" />
		<echo message="=====================================================================================" />
		<echo message="WARNING: When building with a JDK of version &lt; 1.5, not all projects can be built!" />
		<echo message="=====================================================================================" />
	</target>

</project>

