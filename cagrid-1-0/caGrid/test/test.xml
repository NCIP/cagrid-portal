<!-- ======================================================================= -->
<!-- caGrid Utilities build file                                             -->
<!-- ======================================================================= -->
<project name="caGrid_tests_harness" basedir=".">
    <property name="test.logs.dir" value="${test.dir}/logs" />
    <property name="junit.results.dir" value="${test.logs.dir}/junit" />

    <!-- Get the HOSTNAME in an os independant way -->
    <property name="env.HOST" value="${env.COMPUTERNAME}" />

    <!-- For your dart client -->
    <property name="dart.buildname" value="${os.name}-${os.arch}-${os.version}-JDK-${java.version}" />
    <property name="dart.site" value="${env.HOST}" />
    <!-- For the dart server-->
    <property name="dart.port" value="8081" />
    <property name="dart.project" value="caGrid-1.0" />
    <property name="dart.server" value="vandelay.bmi.ohio-state.edu" />
    <property name="dart.client.jar" value="${test.lib.dir}/DartClient-1.0.7.jar" />

    <!-- The presence of this property causes the build to fail as soon as test fails. -->
    <!-- <property name="test.failfast" value="true" /> -->


    <!-- =============================================================== -->
    <!-- Configure dart                                                  -->
    <!-- =============================================================== -->
    <target name="createDartTestFiles">
        <!-- Create the BuildName info, if necessary -->
        <filter token="Dart.BuildName" value="${dart.buildname}" />
        <filter token="Dart.Site" value="${dart.site}" />
        <filter token="Dart.Track" value="Continuous" />
        <copy file="${test.dir}/BuildNameTemplate.xml" tofile="${test.logs.dir}/BuildNameContinuous.xml" filtering="true" overwrite="true" />
        <filter token="Dart.Track" value="Nightly" />
        <copy file="${test.dir}/BuildNameTemplate.xml" tofile="${test.logs.dir}/BuildNameNightly.xml" filtering="true" overwrite="true" />
        <filter token="Dart.Track" value="Experimental" />
        <copy file="${test.dir}/BuildNameTemplate.xml" tofile="${test.logs.dir}/BuildNameExperimental.xml" filtering="true" overwrite="true" />
    </target>
    <!-- =============================================================== -->
    <!-- Call test for each project and aggregates the log resutls       -->
    <!-- =============================================================== -->
    <target name="test" depends="prepare,createDartTestFiles" description="Test all the projects.">
        <!-- Clean out old logs first -->
        <delete failonerror="false">
            <fileset dir="${junit.results.dir}">
                <include name="*" />
            </fileset>
        </delete>
        <for list="${testable.projects.list}" parallel="true" param="project.name" trim="true">
            <sequential>
                <echo message="Testing project @{project.name}." />
                <trycatch property="@{project.name}.test.failed.message">
                    <try>
                        <ant inheritall="false" dir="projects/@{project.name}" antfile="build.xml" target="test">
                            <property name="junit.results.dir" value="${junit.results.dir}" />
                        </ant>
                    </try>
                    <catch>
                        <fail message="@{project.name} Tests failed (${@{project.name}.test.failed.message})" if="test.failfast" />
                        <echo message="@{project.name} Tests failed (${@{project.name}.test.failed.message}), proceeding with other tests, but build will fail at completion." />
                        <property name="test.failed" value="true" />
                    </catch>
                </trycatch>
            </sequential>
        </for>
        <fail message="Tests failed! Consult the logs for details." if="test.failed" />
    </target>
    <!-- =============================================================== -->
    <!-- Set the proxy, and publish the results to dart                  -->
    <!-- =============================================================== -->
    <target name="setproxy1" if="env.HTTP_PROXY_PORT">
        <property name="proxyhost" value="${env.HTTP_PROXY}" />
        <property name="proxyport" value="${env.HTTP_PROXY_PORT}" />
        <echo>Set proxy1: proxyhost=${proxyhost} proxyport=${proxyport}</echo>
        <setproxy proxyhost="${proxyhost}" proxyport="${proxyport}" />
    </target>
    <target name="setproxy2" if="proxyport">
        <echo>Set proxy2: proxyhost=${proxyhost} proxyport=${proxyport}</echo>
        <setproxy proxyhost="${proxyhost}" proxyport="${proxyport}" />
    </target>
    <target name="publish" depends="setproxy1, setproxy2">
        <fail unless="dart.logfile" message="Before you attempt to publish to dart, you must set the
			property [dart.logfile] to the location of the log to be sent to dart." />
        <java jar="${dart.client.jar}" failonerror="true" fork="true">
            <arg value="--server" />
            <arg value="${dart.server}" />
            <arg value="--port" />
            <arg value="${dart.port}" />
            <arg value="${dart.project}" />
            <arg value="${dart.logfile}" />
        </java>
    </target>
    <!-- =============================================================== -->
    <!-- Run a dart experimental (currently only submits test results)   -->
    <!-- =============================================================== -->
    <target name="experimental" depends="clean,all" description="Tests all the projects, and 
		publishes results to the testing dashboard.">

        <trycatch>
            <try>
                <runtarget target="test" />
            </try>
            <catch>
                <echo message="Tests failed!  Proceeding to publish results." />
            </catch>
        </trycatch>

        <tstamp>
            <format property="BUILDSTAMP" pattern="yyyy-MM-dd'T'HH:mm:ss.SZ" locale="en" />
            <format property="BUILDFILE" pattern="yyyy-MM-dd'T'HH.mm.ss.SZ" locale="en" />
        </tstamp>
        <echo message="${BUILDSTAMP}" />
        <property name="dart.experimental.log" value="${test.logs.dir}/${BUILDFILE}.xml" />
        <concat destfile="${dart.experimental.log}">
            <header filtering="no">
                <![CDATA[<cruisecontrol>
                <info>
                    <property name="builddate" value="@BUILDSTAMP@"/>
                </info>]]></header>
            <fileset dir="${junit.results.dir}">
                <include name="TEST-*.xml" />
            </fileset>
            <fileset dir="${test.logs.dir}">
                <include name="BuildNameExperimental.xml" />
            </fileset>
            <footer filtering="no">
                <![CDATA[</cruisecontrol>]]></footer>
        </concat>
        <!-- Hackaroo to strip out the xml pragmas (NOTE: this requires a literal exact match) -->
        <replace file="${dart.experimental.log}" summary="true" token="@BUILDSTAMP@" value="${BUILDSTAMP}" />
        <replace file="${dart.experimental.log}" summary="true">
            <replacetoken>
                <![CDATA[<?xml version="1.0" encoding="UTF-8" ?>]]></replacetoken>
        </replace>
        <replace file="${dart.experimental.log}" summary="true">
            <replacetoken>
                <![CDATA[<?xml version="1.0" encoding="utf-8" ?>]]></replacetoken>
        </replace>
        <replace file="${dart.experimental.log}" summary="true">
            <replacetoken>
                <![CDATA[<?xml version="1.0" encoding="UTF-8"?>]]></replacetoken>
        </replace>
        <replace file="${dart.experimental.log}" summary="true">
            <replacetoken>
                <![CDATA[<?xml version="1.0" encoding="utf-8"?>]]></replacetoken>
        </replace>
        <ant target="publish">
            <property name="dart.logfile" value="${dart.experimental.log}" />
        </ant>
    </target>
    <!-- ONLY to be called from cruise control's antpublisher (it passes some properties) -->
    <target name="ccpublish">
        <property name="cc.logfile" location="${logdir}/${logfile}" />
        <echo message="${cc.logfile}" />
        <xslt in="${cc.logfile}" out="${test.logs.dir}/DartSubmission.xml" style="${test.dir}/CC2DART.xsl" />
        <property name="dart.logfile" value="${test.logs.dir}/DartSubmission.xml" />
        <ant target="publish" />
    </target>
</project>