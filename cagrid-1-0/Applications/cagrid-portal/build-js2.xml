<project name="js2">

	<property name="portals.js2.dir" value="portals/js2" />
	<property name="portals.js2.tomcat.dir" value="${user.home}/portal-tomcat"/>
	<property name="portals.js2.tomcat.home" value="${portals.js2.tomcat.dir}/apache-tomcat-5.5.23" />
	<property name="portals.js2.custom.portal.name" value="cagridportal" />
	<property name="portals.js2.maven.properties" value="${user.home}/build.properties" />
	<property name="portals.js2.maven.dir" value="${user.home}/portal-maven"/>
	<property name="portals.js2.autodeploy.user" value="js2deployer" />
	<property name="portals.js2.autodeploy.password" value="js2deployer" />
	<property name="portals.js2.db.url" value="${hibernate.connection.url}" />
	<property name="portals.js2.db.username" value="${hibernate.connection.username}" />
	<property name="portals.js2.db.password" value="${hibernate.connection.password}" />
	<property name="portals.js2.db.driver" value="${hibernate.connection.driver_class}" />
	<property name="portals.js2.db.driver.path" value="${basedir}/${db.jdbc.driver.jar}" />

	<property name="portals.js2.custom.portal.home" value="${basedir}/${portals.js2.dir}/custom/${portals.js2.custom.portal.name}" />
	<property name="portals.js2.autodeploy.dir" value="${portals.js2.tomcat.home}/webapps/${portals.js2.custom.portal.name}/WEB-INF/deploy" />

	<property name="portals.js2.pages.dir" value="${portals.js2.tomcat.home}/webapps/${portals.js2.custom.portal.name}/WEB-INF/pages" />

	<target name="js2:test-tomcat">
		<condition property="portals.js2.tomcat.available">
			<available file="${portals.js2.tomcat.home}" type="dir" />
		</condition>
	</target>

	<target name="js2:set-maven-home">
		<if>
			<isset property="env.MAVEN_HOME" />
			<then>
				<property name="portals.js2.maven.home" value="${env.MAVEN_HOME}" />
			</then>
			<else>
				<property name="portals.js2.maven.home" value="${portals.js2.maven.dir}/maven-1.0.2" />
			</else>
		</if>
		<echo>
			Set portals.js2.maven.home = ${portals.js2.maven.home}
		</echo>
	</target>

	<target name="js2:check-maven" unless="portals.js2.maven.available" depends="js2:set-maven-home,js2:test-maven">
		<fail>Maven is not installed</fail>
	</target>

	<target name="js2:test-maven" depends="js2:set-maven-home">

		<echo>Checking if ${portals.js2.maven.home} exists.</echo>

		<condition property="portals.js2.maven.available">
			<available file="${portals.js2.maven.home}" type="dir" />
		</condition>

		<echo>
			portals.js2.maven.available=${portals.js2.maven.available}
		</echo>
	</target>

	<target name="js2:install-tomcat" unless="portals.js2.tomcat.available" depends="js2:test-tomcat">
		<mkdir dir="${portals.js2.tomcat.dir}" />
		<get src="http://archive.apache.org/dist/tomcat/tomcat-5/v5.5.23/bin/apache-tomcat-5.5.23.zip" dest="${portals.js2.tomcat.dir}/apache-tomcat-5.5.23.zip" verbose="on" />
		<unzip src="${portals.js2.tomcat.dir}/apache-tomcat-5.5.23.zip" dest="${portals.js2.tomcat.dir}" />
	</target>

	<target name="js2:install-maven" depends="js2:set-maven-home">
		<mkdir dir="${portals.js2.maven.dir}" />
		<get src="http://apache.mirroring.de/maven/binaries/maven-1.0.2.zip" dest="${portals.js2.maven.dir}/maven-1.0.2.zip" verbose="on" />
		<unzip src="${portals.js2.maven.dir}/maven-1.0.2.zip" dest="${portals.js2.maven.dir}" />

		<copy file="${portals.js2.dir}/tools/maven/install.sh.template" tofile="${portals.js2.dir}/tools/maven/install.sh">
			<filterset>
				<filter token="MAVEN_HOME" value="${portals.js2.maven.home}" />
				<filter token="USER_HOME" value="${user.home}" />
			</filterset>
		</copy>

		<copy file="${portals.js2.dir}/tools/maven/install.bat.template" tofile="${portals.js2.dir}/tools/maven/install.bat">
			<filterset>
				<filter token="MAVEN_HOME" value="${portals.js2.maven.home}" />
				<filter token="USER_HOME" value="${user.home}" />
			</filterset>
		</copy>

		<if>
			<os family="windows" />
			<then>
				<exec executable="${portals.js2.dir}/tools/maven/install.bat" />
			</then>
			<else>
				<exec executable="sh">
					<arg value="${portals.js2.dir}/tools/maven/install.sh" />
				</exec>
			</else>
		</if>
	</target>

	<target name="js2:configure-tomcat" depends="js2:install-tomcat">
		<antcall target="js2:copy-tomcat-users-xml" />
		<antcall target="js2:configure-root-context-xml" />
		<copy file="${db.jdbc.driver.jar}" todir="${portals.js2.tomcat.home}/common/lib" />
	</target>

	<target name="js2:copy-tomcat-users-xml">
		<copy file="${portals.js2.dir}/etc/tomcat-users.xml" tofile="${portals.js2.tomcat.home}/conf/tomcat-users.xml" overwrite="true">
			<filterset>
				<filter token="AUTODEPLOY_USER" value="${portals.js2.autodeploy.user}" />
				<filter token="AUTODEPLOY_PASSWORD" value="${portals.js2.autodeploy.password}" />
			</filterset>
		</copy>
	</target>

	<target name="js2:test-windows">
		<condition property="is.windows">
			<os family="windows" />
		</condition>
	</target>

	<target name="js2:configure-root-context-xml" if="portals.js2.is.windows" depends="js2:test-windows">
		<property name="config.file" value="${portals.js2.tomcat.home}/conf/context.xml" />
		<xmltask source="${config.file}" dest="${config.file}">
			<attr attr="antiJARLocking" value="true" path="/Context" />
		</xmltask>
	</target>

	<target name="js2:check-portal-deployed">
		<condition property="portals.js2.portal.deployed">
			<available file="${portals.js2.tomcat.home}/webapps/${portals.js2.custom.portal.name}" type="dir" />
		</condition>
	</target>

	<!-- Configure Maven properties -->
	<target name="js2:setup-portal" unless="portals.js2.portal.deployed" depends="js2:configure-tomcat,js2:check-maven,js2:check-portal-deployed">

		<propertyfile file="${portals.js2.maven.properties}">
			<entry key="org.apache.jetspeed.portal.home" value="${portals.js2.custom.portal.home}" />
			<entry key="org.apache.jetspeed.portal.groupId" value="cagrid.org" />
			<entry key="org.apache.jetspeed.portal.artifactId" value="${portals.js2.custom.portal.name}" />
			<entry key="org.apache.jetspeed.portal.name" value="${portals.js2.custom.portal.name}" />
			<entry key="org.apache.jetspeed.portal.currentVersion" value="1.0" />
			<entry key="org.apache.jetspeed.server.home" value="${portals.js2.tomcat.home}/" />
			<entry key="org.apache.jetspeed.server.shared" value="${portals.js2.tomcat.home}/shared/lib/" />
			<entry key="org.apache.jetspeed.deploy.war.dir" value="${portals.js2.tomcat.home}/webapps/" />
			<entry key="org.apache.jetspeed.services.autodeployment.user" value="${portals.js2.autodeploy.user}" />
			<entry key="org.apache.jetspeed.services.autodeployment.password" value="${portals.js2.autodeploy.password}" />
			<entry key="org.apache.jetspeed.catalina.version.major" value="5.5" />
			<entry key="org.apache.jetspeed.production.database.default.name" value="mysql" />
			<entry key="org.apache.jetspeed.production.database.url" value="${portals.js2.db.url}" />
			<entry key="org.apache.jetspeed.production.database.user" value="${portals.js2.db.username}" />
			<entry key="org.apache.jetspeed.production.database.password" value="${portals.js2.db.password}" />
			<entry key="org.apache.jetspeed.production.database.driver" value="${portals.js2.db.driver}" />
			<entry key="org.apache.jetspeed.production.jdbc.drivers.path" value="${portals.js2.db.driver.path}" />
			<entry key="maven.repo.remote" value="http://www.bluesunrise.com/maven/, http://www.ibiblio.org/maven/, http://dist.codehaus.org/, http://cvs.apache.org/repository, http://repo1.maven.org/maven" />
		</propertyfile>

		<if>

			<os family="windows" />
			<then>
				
				<exec executable="cmd.exe">
					<arg value="/c"/>
					<arg value="${portals.js2.maven.home}/maven"/>
					<arg value="-DartifactId=maven-jetspeed2-plugin"/>
					<arg value="-DgroupId=org.apache.portals.jetspeed-2"/>
					<arg value="-Dversion=2.1 plugin:download"/>
				</exec>
				
				<exec executable="cmd.exe">
					<arg value="/c"/>
					<arg value="${portals.js2.maven.home}/maven"/>
					<arg value="j2:portal.genapp.minimal"/>
				</exec>
				
				<exec executable="cmd.exe"
						dir="${portals.js2.custom.portal.home}">
					<arg value="/c"/>
					<arg value="${portals.js2.maven.home}/maven"/>
					<arg value="war:install"/>
				</exec>
				
				<exec executable="cmd.exe"
						dir="${portals.js2.custom.portal.home}">
					<arg value="/c"/>
					<arg value="${portals.js2.maven.home}/maven"/>
					<arg value="j2:minStart"/>
				</exec>
				
			</then>
			<else>

				<copy file="${portals.js2.dir}/tools/maven/setup.sh.template" tofile="${portals.js2.dir}/tools/maven/setup.sh">
					<filterset>
						<filter token="MAVEN_HOME" value="${portals.js2.maven.home}" />
						<filter token="PORTAL_HOME" value="${portals.js2.custom.portal.home}" />
					</filterset>
				</copy>

				<exec executable="sh">
					<arg value="${portals.js2.dir}/tools/maven/setup.sh" />
				</exec>

			</else>

		</if>

		<delete dir="${portals.js2.pages.dir}" />

		<antcall target="js2:deploy-pages" />

	</target>

	<target name="js2:deploy-pages">

		<mkdir dir="${portals.js2.pages.dir}" />
		<copy todir="${portals.js2.pages.dir}" overwrite="true">
			<fileset dir="${portals.js2.dir}/src/pages" />
		</copy>

	</target>

	<target name="js2:deploy-portlets" depends="portlets:war,js2:setup-portal">
		<copy file="${portlets.build.dir}/${portlets.context.name}.war" todir="${portals.js2.autodeploy.dir}" />
	</target>

	<target name="js2:clean">
		<delete dir="${portals.js2.dir}/custom" />
		<delete>
			<fileset dir="${portals.js2.dir}/tools">
				<include name="*.zip"/>
				<include name="maven/*.sh"/>
				<include name="maven/*.bat"/>
			</fileset>
		</delete>
	</target>

</project>