<project>

	<property name="db.dir" value="db" />
	<property name="db.lib.dir" value="${db.dir}/lib" />
	<property name="db.build.dir" value="${db.dir}/build" />
	<property name="db.classes.dir" value="${db.build.dir}/classes" />
	<property name="db.gen.dir" value="${db.build.dir}/gen" />
	<property name="db.src.java.dir" value="${db.dir}/src/java" />

	<property name="db.test.dir" value="db/test" />
	<property name="db.test.lib.dir" value="${db.test.dir}/lib" />
	<property name="db.test.build.dir" value="${db.test.dir}/build" />
	<property name="db.test.classes.dir"
		value="${db.test.build.dir}/classes" />
	<property name="db.test.src.java.dir"
		value="${db.test.dir}/src/java" />

	<property name="db.tools.hibernate.dir"
		value="${db.dir}/tools/hibernatetools" />
	<property name="db.tools.hibernate.config"
		value="${db.tools.hibernate.dir}/hibernate.cfg.xml" />

	<!-- Should the generated DDL include table DROP statements? -->
	<property name="db.drop.tables" value="false" />

	<!-- Should db layer be compiled with debug on? -->
	<property name="db.debug" value="true" />

	<property name="db.profile" value="default" />
	<property name="hibernate.properties"
		value="${db.dir}/etc/${db.profile}.hibernate.properties" />
	<property file="${hibernate.properties}" />

	<property name="db.jdbc.driver.jar"
		value="${db.lib.dir}/mysql/mysql-connector-java-3.1.11.jar" />

	<path id="hibernatetoolslib">
		<fileset dir="${db.dir}/tools/hibernatetools/lib">
			<include name="*.jar" />
		</fileset>
		<fileset dir="${db.lib.dir}/hibernate">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<taskdef name="hibernatetool"
		classname="org.hibernate.tool.ant.HibernateToolTask"
		classpathref="hibernatetoolslib" />

	<target name="db:configure-hibernate-tools">
		<copy
			file="${db.tools.hibernate.dir}/template.hibernate.cfg.xml"
			tofile="${db.tools.hibernate.config}" overwrite="true">
			<filterset>
				<filter token="DB_DRIVER"
					value="${hibernate.connection.driver_class}" />
				<filter token="DB_URL"
					value="${hibernate.connection.url}" />
				<filter token="DB_USERNAME"
					value="${hibernate.connection.username}" />
				<filter token="DB_PASSWORD"
					value="${hibernate.connection.password}" />
				<filter token="DB_DIALECT" value="${hibernate.dialect}" />
			</filterset>
		</copy>
	</target>

	<target name="db:gen-ddl"
		depends="db:configure-hibernate-tools,db:compile">

		<echo>${hibernate.dialect}</echo>

		<mkdir dir="${db.gen.dir}" />
		<hibernatetool destdir="${db.gen.dir}">
			<classpath>
				<pathelement location="${db.tools.hibernate.dir}" />
				<pathelement location="${db.classes.dir}" />
			</classpath>
			<annotationconfiguration
				configurationfile="${db.tools.hibernate.config}" />
			<hbm2ddl export="false" drop="${db.drop.tables}"
				outputfilename="cagrid-portal.ddl" />
		</hibernatetool>
	</target>

	<path id="db.compile.cp">
		<fileset dir="${db.lib.dir}">
			<patternset refid="db.compile.jars" />
		</fileset>
	</path>

	<path id="db.run.cp">
		<path refid="db.compile.cp" />
		<fileset dir="${db.lib.dir}">
			<patternset refid="db.run.jars" />
		</fileset>

		<pathelement location="${db.jdbc.driver.jar}" />
	</path>

	<path id="db.test.compile.cp">
		<path refid="db.compile.cp" />
		<pathelement location="${db.classes.dir}" />
		<fileset dir="${db.test.lib.dir}">
			<include name="junit.jar" />
			<include name="dbunit-2.2.jar" />
		</fileset>
	</path>

	<path id="db.test.run.cp">
		<path refid="db.run.cp" />
		<path refid="db.test.compile.cp" />
		<pathelement location="${db.test.classes.dir}" />
		<pathelement location="${db.test.dir}" />
		<pathelement location="db/test/build/classes" />
	</path>

	<target name="db:compile">
		<mkdir dir="${db.classes.dir}" />
		<javac srcdir="${db.src.java.dir}" destdir="${db.classes.dir}"
			debug="${db.debug}">
			<classpath refid="db.compile.cp" />
		</javac>
	</target>
	
	<target name="db:jar" depends="db:compile">
		<jar basedir="${db.classes.dir}" destfile="${db.build.dir}/cagrid-portal-db.jar"
			includes="**/*.class"/>
	</target>

	<target name="db:compile-test">
		<mkdir dir="${db.test.classes.dir}" />
		<javac srcdir="${db.test.src.java.dir}"
			destdir="${db.test.classes.dir}" debug="true">
			<classpath refid="db.test.compile.cp" />
		</javac>
	</target>

	<target name="db:prepare-test-cp" depends="db:compile-test">
		<copy todir="${db.test.classes.dir}" overwrite="true">
			<fileset dir="${db.dir}/etc">
				<include name="*.properties" />
				<include name="*.xml" />
				<exclude name="*.hibernate.properties" />
			</fileset>
		</copy>

		<copy file="${db.dir}/etc/test.hibernate.properties"
			tofile="${db.test.classes.dir}/hibernate.properties"
			overwrite="true" />
	</target>

	<target name="db:test" depends="db:prepare-test-cp">

		<mkdir dir="${db.test.build.dir}/junit-reports" />
		<junit printsummary="yes" showoutput="true" fork="true">

			<jvmarg value="-Ddata.file.prefix=${data.file.prefix}" />

			<classpath refid="db.test.run.cp" />

			<formatter type="plain" />

			<batchtest todir="${db.test.build.dir}/junit-reports">
				<fileset dir="${db.test.src.java.dir}">
					<include name="**/AddressDaoTest.java" />
					<include name="**/PersonDaoTest.java" />
					<include name="**/GridServiceDaoTest.java" />
					<exclude name="**/Abstract*.java" />
				</fileset>
			</batchtest>

		</junit>
	</target>
	
	<target name="db:load-schema" depends="db:gen-ddl">

		<sql driver="${hibernate.connection.driver_class}"
			url="${hibernate.connection.url}"
			userid="${hibernate.connection.username}"
			password="${hibernate.connection.password}"
			src="${db.gen.dir}/cagrid-portal.ddl">
			<classpath>
				<pathelement location="${db.jdbc.driver.jar}" />
			</classpath>
		</sql>

	</target>


	<target name="db:clean">
		<delete dir="${db.build.dir}" />
		<delete dir="${db.test.build.dir}" />
	</target>
</project>