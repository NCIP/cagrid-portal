<project name="cagrid-browser" default="all" basedir=".">

    <property environment="env"/>

    <property name="project-name" value="cagrid-browser"/>

    <property name="src.dir" value="${basedir}/src"/>
    <property name="lib.dir" value="${basedir}/lib"/>

    <!-- web content -->
    <property name="webcontent.root" value="${basedir}/webcontent"/>
    <property name="web-inf.dir" value="${webcontent.root}/WEB-INF"/>
    <property name="build.classes.dir" value="${web-inf.dir}/classes"/>
    <property name="build.lib.dir" value="${web-inf.dir}/lib"/>

    <property name="globus.dir" location="${env.GLOBUS_LOCATION}"/>
    <property name="globus.lib.dir" location="${globus.dir}/lib"/>

    <!-- ext directories -->
    <property name="ext.dir" value="${basedir}/ext"/>
    <property name="ext.lib.dir" value="${ext.dir}/lib"/>

    <!-- Properties directory -->
    <property name="props.dir" value="${basedir}/properties"/>
	
    <patternset id="globus.jars">
    	
    	<include name="*.jar"/>
    	<!--
        <include name="addressing-1.0.jar"/>
        <include name="axis.jar"/>
        <include name="bootstrap.jar"/>
        <include name="cog-axis.jar"/>
        <include name="cog-jglobus.jar"/>
        <include name="commonj.jar"/>
    	<include name="commons-beanutils.jar"/>
    	<include name="commons-collections-3.0.jar"/>
    	<include name="commons-digester.jar"/>
    	<include name="commons-discovery.jar"/>
        <include name="commons-logging.jar"/>
        <include name="concurrent.jar"/>
        <include name="cryptix-asn1.jar"/>
        <include name="cryptix.jar"/>
        <include name="cryptix32.jar"/>
        <include name="jaxrpc.jar"/>
        <include name="jce-jdk13-125.jar"/>
        <include name="jgss.jar"/>
        <include name="log4j-1.2.8.jar"/>
        <include name="naming-common.jar"/>
        <include name="naming-factory.jar"/>
        <include name="naming-java.jar"/>
        <include name="puretls.jar"/>
        <include name="resolver.jar"/>
        <include name="saaj.jar"/>
        <include name="wsdl4j.jar"/>
        <include name="wsrf_common.jar"/>
        <include name="wsrf_core_stubs.jar"/>
        <include name="wsrf_core.jar"/>
        <include name="wss4j.jar"/>
        <include name="xercesImpl.jar"/>
        <include name="xmlsec.jar"/>
        <include name="xml-apis.jar"/>
        -->
        
    </patternset>


    <target name="setClasspath">
        <path id="build.classpath">
            <fileset dir="${lib.dir}">
                <include name="**/*.jar"></include>
            </fileset>
            <fileset dir="${ext.lib.dir}">
                <include name="**/*.jar"></include>
            </fileset>
            <fileset dir="${globus.lib.dir}">
                <include name="**/*.jar"/>
            </fileset>
        </path>
    </target>

    <target name="checkTomcat" depends="setTomcat">
        <condition property="tomcat.not.found">
            <or>
                <not>
                    <isset property="tomcat.dir"/>
                </not>
                <equals arg1="${tomcat.dir}" arg2=""/>
            </or>
        </condition>
        <fail message="Tomcat directory is not set in either CATALINA_HOME or tomcat.dir" if="tomcat.not.found"/>
        <echo message="Tomcat: ${tomcat.dir}"/>
    </target>


    <target name="setTomcat" if="env.CATALINA_HOME">
        <property name="tomcat.dir" value="${env.CATALINA_HOME}"/>
        <property name="tomcat.webapp.dir" value="${tomcat.dir}/webapps/${project-name}"/>

        <property name="tomcat.webapp.web.inf" value="${tomcat.webapp.dir}/WEB-INF"/>
        <property name="tomcat.webapp.lib" value="${tomcat.webapp.web.inf}/lib"/>
        <property name="tomcat.webapp.classes" value="${tomcat.webapp.web.inf}/classes"/>
    </target>


    <target name="clean" description="Clean the current build">
        <delete dir="${build.classes.dir}"/>
        <delete dir="${build.lib.dir}"/>
    </target>


    <target name="prepare">
        <!--create build directories-->
        <mkdir dir="${build.classes.dir}"/>
        <mkdir dir="${build.lib.dir}"/>
        <tstamp/>
    </target>


    <target name="compile" depends="setClasspath,prepare">
        <javac srcdir="${src.dir}" destdir="${build.classes.dir}" debug="true">
            <classpath refid="build.classpath"/>
        </javac>
    </target>

    <target name="copyResources">
        <!--copy required library files-->
        <copy todir="${build.lib.dir}" overwrite="true">
            <fileset dir="${lib.dir}">
                <include name="**/*.jar"></include>
            </fileset>
            <fileset dir="${ext.lib.dir}">
                <include name="**/*.jar"></include>
            </fileset>
            <fileset dir="${globus.lib.dir}">
            	<patternset refid="globus.jars"/>
            </fileset>
        </copy>

        <copy todir="${build.classes.dir}" overwrite="true">
            <fileset dir="${props.dir}">
                <include name="*.properties"/>
                <include name="*.wsdd"/>
            </fileset>
        </copy>
    </target>

    <target name="copywebapp" depends="checkTomcat">
        <copy todir="${tomcat.webapp.dir}" overwrite="true">
            <fileset dir="${webcontent.root}"></fileset>
        </copy>
    </target>

    <target name="buildLocal" depends="clean,compile,copyResources"
            description="Will build portal locally and not deploy to tomcat">
        <echo message="Building ${project-name} locally."/>
        <echo message="Use deploy target to deploy the webapp to Tomcat"/>
    </target>

    <!-- default target will deploy app in $CATALINA_HOME/webapps/${project.name} -->
    <target name="deployWebapp" depends="unDeploy,buildLocal,copywebapp" description="Deploy cagrid-browser">
    </target>


    <target name="unDeploy" description="Delete current webapp" depends="checkTomcat">
        <delete dir="${tomcat.webapp.dir}"/>
    </target>
	
	<target name="war" depends="buildLocal">
		<jar destfile="cagrid-browser.war" basedir="${webcontent.root}"/>
	</target>

    <target name="all" depends="buildLocal" description="Default target. WIll build locally">
        <echo message="Not to be called Directltly."/>
        <echo message="Please use the deployWebapp targets to deploy app or buildLocal to do a local build"/>
    </target>

</project>