<?xml version="1.0" encoding="UTF-8"?>
<!--Sample XML file generated by XMLSpy v2005 rel. 3 Manav Kher(http://www.altova.com)-->
<xsd:schema xmlns:tns="http://nci.nih.gov/caBIG/XMLQuerySchema" xmlns:xsd="http://www.w3.org/2001/XMLSchema" targetNamespace="http://nci.nih.gov/caBIG/XMLQuerySchema" elementFormDefault="qualified" attributeFormDefault="unqualified">

	<xsd:element name="caBIGXMLQuery">
		<xsd:annotation>
			<xsd:documentation>caBIG data resource XML query language schema.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="Target" type="tns:Target" minOccurs="1" maxOccurs="1"/>
			</xsd:sequence>
					<xsd:attribute name="name" type="xsd:string" use="required"/>
		</xsd:complexType>
	</xsd:element>
	
		<xsd:complexType name="Target">
		<xsd:annotation>
			<xsd:documentation>This is the query target.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="Group" type="tns:Group" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="Objects" type="tns:Objects" minOccurs="1" maxOccurs="1"/>
		</xsd:sequence>
					<xsd:attribute name="name" type="xsd:string" use="required"/>
	</xsd:complexType>
	
	<xsd:complexType name="Objects">
		<xsd:annotation>
			<xsd:documentation>Classes of objects to be queried.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="Objects" type="tns:Objects" minOccurs="0"/>
			<xsd:element name="Group" type="tns:Group" minOccurs="0"/>
			<xsd:element name="Property" type="tns:Property" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="name" type="xsd:string" use="required"/>
	</xsd:complexType>


	<xsd:complexType name="Group">
		<xsd:annotation>
			<xsd:documentation>Binary joint of two conditions</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="Objects" type="tns:Objects" minOccurs="2" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="name" type="xsd:string" use="required"/>
		<xsd:attribute name="LogicRelation" type="tns:LogicalOperator"/>
	</xsd:complexType>

	
	<xsd:simpleType name="Predicate">
		<xsd:annotation>
			<xsd:documentation>
Currnetly there are only two kinds, "equal" and "like". It is extensible. </xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="equal"/>
			<xsd:enumeration value="like"/>
		</xsd:restriction>
	</xsd:simpleType>
	
	
	<xsd:complexType name="Property">
		<xsd:annotation>
			<xsd:documentation>conditon.element</xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="name" type="xsd:string"/>
		<xsd:attribute name="predicate" type="tns:Predicate" default="equal"/>
		<xsd:attribute name="value" type="xsd:string"/>
	</xsd:complexType>

	<xsd:simpleType name="LogicalOperator">
		<xsd:annotation>
			<xsd:documentation>Logical operators "AND" and "OR". This is extensible.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="AND"/>
			<xsd:enumeration value="OR"/>
		</xsd:restriction>
	</xsd:simpleType>
	

	 
</xsd:schema>
