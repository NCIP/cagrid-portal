
The CVS trunk will be where active development occurs, and we will create a branch to maintain the release.
Users/Developers wanting to checkout the "release" will use a provided tag.

The release will have a "release engineer" who is responsible for the steps below, and should review all commits
(and reject any in appropriate changes) to the release branch.  Any planned development on the branch should
first be oked by the release engineer.

In the current process ( 1.2; not true in the past), only the "caGrid" module is being formally released.
However, all "release" tags and branches should be performed against the full repository.
For example, while the system/integration tests (tests module), are not release, they are runagainst a given release and so must be branched with the core release.  

RELEASE PROCESS
====================
----- prepare the release branch -----
send email to the development mailing list announcing a version control freeze
tag a branch root from the cagrid-1-0 dir of an up to date checkout of HEAD  (cvs tag caGrid-1_2_release_root)
create a branch based on the branch root tag   (cvs tag -b -r caGrid-1_2_release_root caGrid-1_2_release)

----- prepare the release candidate -----
get a working checkout of the release branch in a new directory (cvs -d:ext:{GFORGE_USERNAME}@cbiocvs2.nci.nih.gov:/share/content/gforge/cagrid-1-0 co -P -r caGrid-1_2_release -d caGrid-1.2-release cagrid-1-0)
do fixing or cleaning needed on the branch (setting versions, default target grids, etc)
setup automated builds/tests for the branch
tag a release candidate on our checkout of the branch (cvs tag caGrid-1_2_release_rc1)

-----  make a release candidate ----- 
create the release from a cvs export  (cvs -d:ext:anonymous@cbiocvs2.nci.nih.gov:/share/content/gforge/cagrid-1-0 export -r caGrid-1_2_release_rc1 -d {dir for checkout} cagrid-1-0)
  -password is anonymous
zip up, or whatever is needed for the release, the directory created {dir for checkout}

----- address any issues with the candidate -----
*** if bug fixes
  commit the fixes to our local branch checkout (cvs commit)
  tag a bug fix tag  (cvs tag caGrid-1_2_release_rc1_bugfix1)
  merge bug fix into trunk as appropriate
    from a HEAD checkout:
      get up to date  (cvs update)
      merge in the bug fix  (cvs update -j caGrid-1_2_release_rc1 -j caGrid-1_2_release_rc1_bugfix1)
      fix any merge issues, and obviously test
      commit the fix to HEAD (cvs commit)
  rinse and repeat... tag a new release candidate  (cvs tag caGrid-1_2_release_rc2)

-----  finalize the release (after validation of last RC; this should just be retagging the last RC as the final)-----
tag the release on the branch (cvs tag caGrid-1_2_release_final)
create the release from a cvs export  (cvs -d:ext:anonymous@cbiocvs2.nci.nih.gov:/share/content/gforge/cagrid-1-0 export -r caGrid-1_2_release_final -d {dir for checkout} cagrid-1-0)
zip up, or whatever is needed for the release, the directory created {dir for checkout}

----- prepare the trunk for new development -----
*fix items in the HEAD (e.g. project versions) to indicate it is the next release (when next release is known) 



INSTALLER RELEASE
====================

Create file release on gforge

----- get checkouts -----
mkdir <directory for release>
cd <directory for release>
cvs -d :ext:anonymous@cbiocvs2.nci.nih.gov:/share/content/gforge/cagrid-1-0 export -r <release tag> cagrid-1-0/caGrid

----- create caGrid source release -----
cd cagrid-1-0
zip -r caGrid-1.2.zip caGrid
mv  caGrid-1.2.zip <directory for release>
md5sum <directory for release>/caGrid-1.2.zip > <directory for release>/caGrid-1.2.zip.md5sum
cd caGrid
ant all

----- upload caGrid release -----
Upload to gforge, <directory for release>/caGrid-1.2.zip 
Copy the URL to this release for use in the installer below, refer to this as <CAGRID URL>
Copy the md5 value from caGrid-1.2.zip.md5sum, and refer to this as <CAGRID MD5>
Obtain URL of where the installer properties (cagrid.installer.properties) will be stored, refer to this as <PROPS URL>

----- create installer release -----
cd projects/installer
#NOTE: if you cannot provide these values yet, you can use placeholders, and then edit: <directory for release>/cagrid.installer.properties
#  the download.properties.url is the only property value that is actually built into the created installer zip
#  so it is strongly encouraged you know the value of that before hand (as to change it you must edit the value
#  in the download.properties file, inside the caGrid-installer-1.2.jar, inside the caGrid-1.2.zip
ant -Ddownload.properties.url=<PROPS URL> \
  -Dcagrid.download.url=<CAGRID URL>/caGrid-1.2.zip \
  -Dcagrid.md5.checksum=<CAGRID MD5> \
  clean dist-installer
mv build/caGrid-1.2-installer.zip <directory for release>
mv build/cagrid.installer.properties <directory for release>

----- upload installer -----
Verify correctness of <directory for release>/cagrid.installer.properties
Upload <directory for release>/cagrid.installer.properties to <PROPS URL>
Upload <directory for release>/caGrid-1.2-installer.zip to gforge


