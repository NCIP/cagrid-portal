<?xml version="1.0"?>
<!-- ================================================================= -->
<!-- caGrid Tests build file                                           -->
<!-- ================================================================= -->

<project name="cagrid-1.0-tests" default="tests-all" basedir=".">
    <dirname property="cagrid-1.0-tests.basedir" file="${ant.file.cagrid-1.0-tests}" />

    <!-- Give user the chance to override properties -->
    <property environment="env" />
    <property file="build.properties" />

    <!-- Layout info -->
    <property name="cagrid.dir" location="../caGrid" />
    <property name="cagrid.antfiles.dir" location="${cagrid.dir}/antfiles" />
    <property name="tests.projects.dir" location="${cagrid-1.0-tests.basedir}/projects" />
    <property name="tests.test.dir" location="${cagrid-1.0-tests.basedir}/test" />

    <!-- ================================================================================ -->
    <!--                          DEFINE THE SUB PROJECTS                                 -->
    <!-- ================================================================================ -->
    <!-- The name should be the path relative from projects.dir.  Its strongly encouraged you use a flat layout -->
    <property name="tests.projects.list" value="echo,cqlprocessors,coretests,workflow-services" />

    <!-- configuring (repurposing) the caGrid build -->
    <property name="unit.testable.projects.list" value="" />
    <property name="system.testable.projects.list" value="cqlprocessors,coretests" />


    <!-- IMPORT THE UTILITIES TARGETS -->
    <import file="${cagrid.dir}/build.xml" />
    <import file="${cagrid-1.0-tests.basedir}/antfiles/artifacts.xml" />


    <!-- =============================================================== -->
    <!-- echo                                                            -->
    <!-- =============================================================== -->
    <target name="build-echo" depends="prepare" description="Builds echo">
        <ant dir="${tests.projects.dir}/echo" inheritAll="false" antfile="build.xml" target="all" />
    </target>

    <target name="build-workflow-services" description="Builds echo">
        <ant dir="${tests.projects.dir}/workflow-services" inheritAll="false" antfile="build.xml" target="all" />
    </target>


    <!-- =============================================================== -->
    <!-- echo                                                            -->
    <!-- =============================================================== -->
    <target name="build-cqlprocessors" depends="prepare" description="Builds cqlprocessors">
        <resolveDependencies extdir="${tests.projects.dir}/cqlprocessors/ext">
            <artifact refid="common.test.jars" />
            <artifact refid="test.coverage.jars" />
            <artifact refid="core.jars" />
            <artifact refid="data.jars" />
        </resolveDependencies>
        <ant dir="${tests.projects.dir}/cqlprocessors" inheritAll="false" antfile="build.xml" target="all" />
    </target>

    <!-- =============================================================== -->
    <!-- coretests                                                       -->
    <!-- =============================================================== -->
    <target name="build-coretests" depends="prepare" description="Builds coretests">
        <resolveDependencies extdir="${tests.projects.dir}/coretests/ext">
            <artifact refid="echo.jars" />
            <artifact refid="cqlprocessors.jars" />
            <artifact refid="dorian.jars" />
            <artifact refid="gridca.jars" />
            <artifact refid="opensaml.jars" />
            <artifact refid="opensaml.endorsed" />
            <artifact refid="common.test.jars" />
            <artifact refid="test.coverage.jars" />
            <artifact refid="cadsr.jars" />
            <artifact refid="discovery.jars" />
            <artifact refid="core.jars" />
            <artifact refid="introduce.jars" />
            <artifact refid="gme.globus.client.jars" />
            <artifact refid="security.metadata.jars" />
            <artifact refid="mds.jars" />
            <artifact refid="core.test.jars" />
            <artifact refid="common.metadata.jars" />
            <artifact refid="data.metadata.jars" />
            <artifact refid="metadatautils.jars" />
            <artifact refid="caCORE.jars" />
            <artifact refid="graph.jars" />
            <artifact refid="authentication.service.client.jars" />
            <artifact refid="gridgrouper.jars" />
            <artifact refid="gridgrouper.client.jars" />
            <artifact refid="evs.jars" />
        </resolveDependencies>
        <delete failonerror="false">
            <fileset dir="${tests.projects.dir}/coretests/test/resources/services/BasicDataService/lib">
                <include name="*.jar" />
            </fileset>
        </delete>
        <resolveDependencies extdir="${tests.projects.dir}/coretests/test/resources/services/BasicDataService">
            <artifact refid="cqlprocessors.jars" />
        </resolveDependencies>
        <ant dir="${tests.projects.dir}/coretests" inheritAll="false" antfile="build.xml" target="all" />
    </target>


    <!-- ============================================================== -->
    <!-- Cleans up generated stuff                                      -->
    <!-- ============================================================== -->
    <target name="tests-clean" depends="prepare" description="Cleans all projects.">
        <for list="${tests.projects.list}" parallel="true" param="project.name" trim="true">
            <sequential>
                <echo message="Cleaning project @{project.name}." />
                <delete dir="${tests.projects.dir}/@{project.name}/ext" />
                <ant dir="${tests.projects.dir}/@{project.name}" inheritAll="false" antfile="build.xml" target="clean" />
            </sequential>
        </for>

        <for list="${tests.cleanable.projects.list}" parallel="true" param="project.name" trim="true">
            <sequential>
                <echo message="Cleaning artifacts from project @{project.name}." />
                <ant dir="${tests.projects.dir}/@{project.name}" inheritAll="false" antfile="build.xml" target="clean-artifacts" />
            </sequential>
        </for>

        <delete failonerror="false">
            <fileset dir="${junit.results.dir}">
                <include name="*" />
            </fileset>
        </delete>
    </target>


    <!-- ============================================================== -->
    <!-- Builds from scratch                                            -->
    <!-- ============================================================== -->
    <target name="tests-all" depends="prepare, tests-clean" description="Builds the entire application">
        <for list="${tests.projects.list}" parallel="false" param="project.name" trim="true">
            <sequential>
                <echo message="Building project @{project.name}." />
                <runtarget target="build-@{project.name}" />
                <echo message="Built project @{project.name}." />
            </sequential>
        </for>
    </target>
</project>
