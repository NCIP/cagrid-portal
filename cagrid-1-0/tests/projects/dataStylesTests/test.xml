<!-- ======================================================================= -->
<!-- caGrid Data Services test build file                                    -->
<!-- ======================================================================= -->
<project name="caGrid-data_tests_harness" basedir=".">
	
	<!-- should all testing stop on the first error or failure encountered? -->
	<property name="halt.on.error" value="false" />
	<!-- message when tests fail -->
	<property name="failed.message" value="Tests failed! Check test reports." />
	<!-- tells the service container factories to assign ports in testing mode -->
	<property name="testing.port.assignment.mode" value="true" />
	<!-- tells data tests the base directory in which to create data services -->
	<property name="temp.test.service.dir" value="${basedir}/test_services"/>
	
	<target name="prepareClasspaths">
		<path id="all.test.classpath">
			<pathelement path="${classes.dir}" />
			<pathelement path="${stubs.dest}" />
			<path refid="test.run.classpath" />
			<fileset dir="${jar.dir}">
				<include name="**/*.jar"/>
			</fileset>
		</path>
	</target>
	
	
	<target name="defineForTask">
		<taskdef resource="net/sf/antcontrib/antlib.xml">
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="ant-contrib*.jar" />
				</fileset>
			</classpath>
		</taskdef>
	</target>
	

	<target name="test" depends="testStyles" description="Runs style tests">
		<for list="${data.service.styles}" parallel="false" param="style.name" trim="true">
			<sequential>
				<fail message="Data Service Style @{style.name} ${failed.message}" if="@{style.name}.style.test.failed" />
			</sequential>
		</for>
	</target>
	

	<target name="testStyles" depends="defineForTask, prepareClasspaths" description="Tests service styles">
		<mkdir dir="${junit.results.dir}" />
		<for list="${data.service.styles}" parallel="false" param="style.name" trim="true">
			<sequential>
				<echo message="Testing service style @{style.name}" />
				<var name="style.test.lib.file" value="${build.jars.dir}/${project.jar.prefix}style${cagrid.master.jar.separator}tests${cagrid.master.jar.separator}@{style.name}.jar" />
				<junit dir="${introduce.dir}" printsummary="yes" haltonerror="${halt.on.error}" haltonfailure="${halt.on.error}" errorproperty="@{style.name}.style.test.failed" failureproperty="@{style.name}.style.test.failed" showoutput="true" fork="yes" forkmode="once">
					<sysproperty key="introduce.base.dir" value="${introduce.dir}" />
					<sysproperty key="build.dir" value="${test.core.classes.dir}" />
					<sysproperty key="temp.test.service.dir" value="${temp.test.service.dir}"/>
					<classpath refid="all.test.classpath" />
					<classpath>
						<pathelement path="${test.core.classes.dir}" />
					</classpath>
					<classpath>
						<pathelement path="${style.test.lib.file}" />
						<pathelement path="${build.dir}/@{style.name}/classes" />
					</classpath>
					<formatter type="xml" />
					<test if="testcase" name="${testcase}" fork="no" todir="${junit.results.dir}" />
					<batchtest unless="testcase" fork="yes" todir="${junit.results.dir}">
						<fileset dir="${src.dir}/@{style.name}">
							<include name="**/*TestCase.java" />
							<include name="**/*Story.java" />
						</fileset>
					</batchtest>
				</junit>
			</sequential>
		</for>
	</target>
</project>
