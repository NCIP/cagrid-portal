<?xml version="1.0"?>
<!-- ================================================================= -->
<!-- caGrid 1.1 sdk query equivalence test build file                  -->
<!-- ================================================================= -->
<project name="caGrid-tests-sdkQueryEquivalence" default="all" basedir=".">
	<!-- Environment -->
	<property environment="env" />
	<property file="${basedir}/build.properties" />
	<property file="${basedir}/project.properties" />
	<property name="globus.dir" location="${env.GLOBUS_LOCATION}" />

	<!-- Information -->
	<property name="project.name" value="${ant.project.name}" />
	<property name="java.source" value="1.5" />

	<property name="src.dir" value="${basedir}/src/java" />
	<property name="build.dir" value="${basedir}/build" />
	<property name="javadoc.dir" value="${build.dir}/javadoc" />
	<property name="classes.dir" value="${build.dir}/classes" />
	<property name="jar.dir" value="${build.dir}/lib" />
	<property name="project.jarfile" value="${jar.dir}/${project.name}-${project.version}.jar" />
	<property name="lib.dir" value="${basedir}/lib" />
	<property name="ext.test.lib.dir" location="${basedir}/ext/dependencies/test/jars" />

	<!-- testing stuff -->
	<property name="test.dir" location="${basedir}/test" />
	<property name="test.src.dir" location="${test.dir}/src/java" />
	<property name="test.classes.dir" location="${build.dir}/test/classes" />
	<property name="test.lib.dir" location="${test.dir}/lib" />
	<property name="test.logs.dir" location="${test.dir}/logs" />
	<property name="test.project.jar" location="${jar.dir}/${project.name}-tests-${project.version}.jar" />

	<import file="test/test.xml" />

	<!-- =============================================================== -->
	<!-- The Build Classpath                                             -->
	<!-- =============================================================== -->
	<path id="build.classpath">
		<pathelement path="${stubs.dest}" />
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${globus.dir}/lib">
			<include name="**/*.jar" />
		</fileset>
	</path>


	<!-- =============================================================== -->
	<!-- The Run Classpath                                                   -->
	<!-- =============================================================== -->
	<path id="run.classpath">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${globus.dir}/lib">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<!-- =============================================================== -->
	<!-- The Test Classpath                                              -->
	<!-- =============================================================== -->
	<path id="test.classpath">
		<pathelement path="${classes.dir}" />
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${test.lib.dir}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${ext.test.lib.dir}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${globus.dir}/lib">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${ant.library.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>


	<!-- =============================================================== -->
	<!-- Prepares the build directory                                    -->
	<!-- =============================================================== -->
	<target name="prepare">
		<tstamp />
		<mkdir dir="${build.dir}" />
	</target>


	<!-- =============================================================== -->
	<!-- Compiles the source code                                        -->
	<!-- =============================================================== -->
	<target name="compile" depends="prepare" description="compiles.">
		<mkdir dir="${classes.dir}" />
		<javac srcdir="${src.dir}" destdir="${classes.dir}" source="${java.source}" debug="on" deprecation="off" optimize="off">
			<classpath refid="build.classpath" />
		</javac>
	</target>

	<!-- =============================================================== -->
	<!-- Compiles the test source code                                        -->
	<!-- =============================================================== -->
	<target name="compile-tests" depends="prepare" description="compiles.">
		<mkdir dir="${test.classes.dir}" />
		<javac srcdir="${test.src.dir}" destdir="${test.classes.dir}" source="${java.source}" debug="on" deprecation="off" optimize="off">
			<classpath refid="test.classpath" />
		</javac>
	</target>


	<!-- ============================================================== -->
	<!-- Cleans up generated stuff                                      -->
	<!-- ============================================================== -->
	<target name="clean" depends="" description="Removes generated files.">
		<delete dir="${build.dir}" />
	</target>


	<!-- ============================================================== -->
	<!-- Creates the test jar files                                          -->
	<!-- ============================================================== -->
	<target name="jar" depends="compile" description="Builds the Jar Files">
		<mkdir dir="${jar.dir}" />
		<jar jarfile="${project.jarfile}" basedir="${classes.dir}">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
			</manifest>
		</jar>
	</target>

	<!-- ============================================================== -->
	<!-- Creates the jar files                                          -->
	<!-- ============================================================== -->
	<target name="jar-tests" depends="compile-tests" description="Builds the Jar Files">
		<mkdir dir="${jar.dir}" />
		<jar jarfile="${test.project.jar}" basedir="${test.classes.dir}">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
			</manifest>
		</jar>
	</target>

	<!-- =================================================================== -->
	<!-- Builds Code Docuementation                                          -->
	<!-- =================================================================== -->
	<target name="javadoc" depends="compile" description="Creates the API documentation.">
		<javadoc packagenames="*" destdir="${javadoc.dir}" author="true" version="true" use="true" windowtitle="${project.name} API">
			<sourcepath>
				<pathelement path="${src.dir}" />
			</sourcepath>

			<classpath>
				<path refid="build.classpath" />
			</classpath>

			<tag name="todo" scope="all" description="To do:" />
			<tag name="created" scope="all" description="Created On:" />
		</javadoc>
	</target>


	<!-- ============================================================== -->
	<!-- Builds from scratch                                                -->
	<!-- ============================================================== -->
	<target name="all" description="Builds the entire application" depends="jar,jar-tests" />
</project>

