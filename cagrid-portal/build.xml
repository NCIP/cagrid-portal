<?xml version="1.0"?>

<project name="cagrid-portal" basedir="." default="all"
         xmlns:ivy="antlib:org.apache.ivy.ant">

    <property name="build.dir" value="${basedir}/build"/>
    <property name="projects.dir" value="${basedir}"/>
    <property name="ivy.dir" value="${basedir}/ivy"/>

    <property name="antfiles.dir" value="${basedir}/antfiles"/>

    <import file="${ivy.dir}/ivy-targets.xml"/>
    <import file="${antfiles.dir}/build-test.xml"/>
    <import file="${antfiles.dir}/build-report.xml"/>

    <target name="prepare" depends="prepare-ant-tasks, ivy:load">
        <tstamp/>
    </target>

    <target name="build-projects-list" depends="prepare">
        <ivy:buildlist reference="ivy.projects.list" ivyfilepath="ivy.xml" skipbuildwithoutivy="true">
            <fileset dir="${basedir}">
                <include name="*/ivy-build.xml"/>
            </fileset>
        </ivy:buildlist>
    </target>

    <target name="input-project-name">
        <input addproperty="single.project.name" message="Please enter the project name:"/>
    </target>

    <target name="check-project-name">
        <fail unless="single.project.name" message="The expected property, 'single.project.name' was not defined!"/>
        <condition property="single.project.name.invalid">
            <or>
                <equals arg1="${single.project.name}" arg2="" trim="true"/>
                <and>
                    <not>
                        <available file="${projects.dir}/${single.project.name}" type="dir"/>
                    </not>
                </and>
            </or>
        </condition>
        <fail if="single.project.name.invalid"
              message="The expected property, 'single.project.name' was not defined as a valid project name!  The value was: [${single.project.name}]"/>
    </target>


    <target name="build-project" depends="prepare,input-project-name,check-project-name"
            description="Build a single project">

        <echo message="Building ${single.project.name}, and all its dependencies (as necessary)."/>

        <ivy:buildlist reference="single.ivy.project.list"
                       root="portal-${single.project.name}"
                       ivyfilepath="ivy.xml" skipbuildwithoutivy="true">
            <fileset dir="${projects.dir}">
                <include name="*/ivy-build.xml"/>
            </fileset>
        </ivy:buildlist>

        <echo message="Computed build order is: ${ivy.sorted.modules}"/>
        <subant target="ivy:publish" buildpathref="single.ivy.project.list">
            <property name="target.grid" value="${aggr.trust.target.grid}"/>
        </subant>

    </target>

    <target name="clean-projects" depends="build-projects-list,test:clean,reports:clean"
            description="Will only clean the projects. Will NOT clean the ivy cache">
        <for parallel="false" param="project.buildfile" trim="true">
            <path refid="ivy.projects.list"/>
            <sequential>
                <dirname file="@{project.buildfile}" property="@{project.buildfile}.dir"/>
                <ant inheritAll="false" dir="${@{project.buildfile}.dir}"
                     antfile="@{project.buildfile}" target="ivy:clean">
                </ant>
            </sequential>
        </for>
    </target>

    <target name="clean" depends="clean-projects"
            description="Clean dependency management">
        <delete dir="${ivy.integration.repository.dir}"/>
        <ivy:cleancache/>
    </target>


    <target name="config-trust" depends="prepare">
        <trycatch>
            <try>
                <ant target="config-trust"
                     dir="${projects.dir}/aggr"/>
            </try>
            <catch>
                <fail message="Please build the project first or run 'ant all'"/>
            </catch>
        </trycatch>
    </target>

    <target name="liferay:deploy-portlets" depends="prepare"
            description="Deploy customizations(themes,security,la to liferay Portal">
        <trycatch property="errorMsg">
            <try>
                <ant target="deploy-all"
                     dir="${projects.dir}/portals" antfile="build-liferay-${liferay.server.type}.xml"/>
            </try>
            <catch>
                <fail message="Please build the project first or run 'ant all': ${errorMsg}"/>
            </catch>
        </trycatch>
    </target>

    <target name="liferay:deploy-theme" depends="prepare"
            description="Deploy customizations(themes,security,la to liferay Portal">
        <trycatch property="errorMsg">
            <try>
                <ant target="deploy-theme"
                     dir="${projects.dir}/portals" antfile="build-liferay-${liferay.server.type}.xml"/>
            </try>
            <catch>
                <fail message="Please build the project first or run 'ant all': ${errorMsg}"/>
            </catch>
        </trycatch>
    </target>

    <target name="liferay:deploy-layouts" depends="prepare"
            description="Deploy customizations(themes,security,la to liferay Portal">
        <trycatch property="errorMsg">
            <try>
                <ant target="deploy-layouts"
                     dir="${projects.dir}/portals" antfile="build-liferay-${liferay.server.type}.xml"/>
            </try>
            <catch>
                <fail message="Please build the project first or run 'ant all': ${errorMsg}"/>
            </catch>
        </trycatch>
    </target>

    <target name="liferay:deploy-authn" depends="prepare" description="Deploy the authentication module to Liferay">
        <trycatch property="errorMsg">
            <try>
                <ant target="deploy-authn"
                     dir="${projects.dir}/portals" inheritall="false"
                     antfile="build-liferay-${liferay.server.type}.xml"/>
            </try>
            <catch>
                <fail message="Please build the project first or run 'ant all': ${errorMsg}"/>
            </catch>
        </trycatch>
    </target>

    <target name="cagrid:deploy-portlets" depends="prepare"
            description="Deploy all caGrid Portlets to the Portlet server">
        <ant inheritall="false" target="deploy-portlets"
             dir="${projects.dir}/portlets">
        </ant>
    </target>

    <target name="cagrid:deploy-portal-search" depends="prepare"
            description="Deploy the caGrid Portal search engine(SOLR)">
        <ant inheritall="false" target="solr:deploy-solr-home"
             dir="${projects.dir}/portal-search">
        </ant>

        <ant inheritall="false" target="deploy-search-war"
             dir="${projects.dir}/portals" antfile="build-liferay-${liferay.server.type}.xml">
        </ant>
    </target>

    <target name="deploy-all-portlets" depends="prepare" description="Deploy all caGrid Portlets">
        <antcall target="cagrid:deploy-portlets"/>
        <antcall target="liferay:deploy-portlets"/>
        <antcall target="cagrid:deploy-portal-search"/>
    </target>

    <target name="install-liferay" depends="prepare" description="Install the Liferay Portal.">
        <echo message="Server Type: ${server.type}"/>
        <ant inheritall="true" target="${liferay.server.type}:install-liferay"
             dir="${projects.dir}/portals" antfile="build-liferay-${liferay.server.type}.xml">
        </ant>
    </target>

    <target name="install" depends="prepare"
            description="Install caGrid Portal">
        <trycatch property="errorMsg">
            <try>
                <antcall target="config-trust"/>
                <antcall target="update-schema"/>
                <antcall target="load-workspaces"/>
                <antcall target="install-liferay"/>
                <antcall target="liferay:deploy-portlets"/>
                <antcall target="cagrid:deploy-portlets"/>
                <antcall target="cagrid:deploy-portal-search"/>
            </try>
            <catch>
                <fail message="Please build the project first or run 'ant all': ${errorMsg}"/>
            </catch>
        </trycatch>
    </target>

    <target name="update-schema" depends="prepare" description="Will upgrade the Portal database and apply all changes">
        <ant inheritall="false" target="liquibase.updateDB"
             dir="${projects.dir}/db">
        </ant>
    </target>

    <target name="load-schema" depends="prepare" unless="skip.schema"
            description="Create the Portal Application Database.">
        <ant inheritall="false" target="load-schema"
             dir="${projects.dir}/db">
        </ant>
    </target>

    <target name="load-workspaces" depends="prepare" description="Load the caBIG workspaces">
        <ant inheritall="false" target="run-load-workspaces"
             dir="${projects.dir}/aggr">
        </ant>
    </target>

    <target name="load-metadata" depends="prepare" description="Load the service metadata">
        <ant inheritall="false" target="run-loadmeta"
             dir="${projects.dir}/aggr">
        </ant>
    </target>

    <target name="load-data" depends="prepare">
        <antcall target="load-workspaces"/>
        <antcall target="load-metadata"/>
    </target>


    <target name="run-trust" depends="config-trust" description="Sync with caGrid GTS service">
        <ant inheritall="false" target="run-trust"
             dir="${projects.dir}/aggr">
        </ant>
    </target>

    <target name="report-svcs-with-status" depends="prepare"
            description="Will generate a list of services with the given status.">
        <ant inheritall="false" target="report-svcs-with-status"
             dir="${projects.dir}/aggr">
        </ant>
    </target>

    <target name="build-all" depends="build-projects-list"
            description="Do dependency management">

        <for parallel="false" param="project.buildfile" trim="true">
            <path refid="ivy.projects.list"/>
            <sequential>
                <dirname file="@{project.buildfile}" property="@{project.buildfile}.dir"/>
                <ant inheritAll="false" dir="${@{project.buildfile}.dir}"
                     antfile="@{project.buildfile}" target="ivy:publish">
                    <property name="target.grid" value="${aggr.trust.target.grid}"/>
                </ant>
            </sequential>
        </for>
    </target>

    <target name="all" depends="clean,build-all" description="Build the Portal project."/>

    <!--for automatated build-->
    <target name="test" depends="all, test:test" description="Run all unit tests for the project."/>
    <target name="reports" depends="all, reports:reports" description="Generate reports for the project."/>


    <target name="deploy-web-fast" depends="prepare">

        <if>
            <equals arg1="${liferay.server.type}" arg2="tomcat"/>
            <then>
                <if>
                    <available file="${liferay.install.dir}/${tomcat.server.name}/temp/0-cagridportlets" type="dir"/>
                    <then>
                        <property name="portlets.temp.dir"
                                  value="${liferay.install.dir}/${tomcat.server.name}/temp/0-cagridportlets"/>
                    </then>
                    <elseif>
                        <available file="${liferay.install.dir}/${tomcat.server.name}/temp/1-cagridportlets"
                                   type="dir"/>
                        <then>
                            <property name="portlets.temp.dir"
                                      value="${liferay.install.dir}/${tomcat.server.name}/temp/1-cagridportlets"/>
                        </then>
                    </elseif>
                    <elseif>
                        <available file="${liferay.install.dir}/${tomcat.server.name}/temp/2-cagridportlets"
                                   type="dir"/>
                        <then>
                            <property name="portlets.temp.dir"
                                      value="${liferay.install.dir}/${tomcat.server.name}/temp/2-cagridportlets"/>
                        </then>
                    </elseif>
                    <else>
                        <property name="portlets.temp.dir"
                                  value="${liferay.install.dir}/${tomcat.server.name}/webapps/cagridportlets"/>
                    </else>
                </if>

                <tstamp/>
                <copy todir="${portlets.temp.dir}" overwrite="${do.overwrite}">
                    <fileset dir="portlets/src/war">
                        <include name="**/*.css"/>
                        <include name="**/*.dtd"/>
                        <include name="**/*.gif"/>
                        <include name="**/*.jpg"/>
                        <include name="**/*.js"/>
                        <include name="**/*.jsp"/>
                        <include name="**/*.jspf"/>
                        <include name="**/*.png"/>
                        <include name="**/*.tld"/>
                        <include name="**/*.vm"/>
                        <include name="**/*.tag"/>
                    </fileset>
                </copy>

            </then>
        </if>
    </target>


</project>