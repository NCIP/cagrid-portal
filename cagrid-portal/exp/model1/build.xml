<project name="model1" default="db:compile">
	
    <property name="target.env" value="local"/>
    <property name="build.ext.properties" value="build-${target.env}.properties"/>
    <property file="${build.ext.properties}"/>
    <property file="build.properties"/>
    <property environment="env"/>
    <property name="ant.home" value="${env.ANT_HOME}"/>
    <property name="tools.ant.lib" value="tools/ant/lib"/>

    <path id="xmltaskdef.cp">
        <pathelement location="${tools.ant.lib}/xmltask-v1.14.jar"/>
    </path>

    <taskdef name="xmltask"
             classname="com.oopsconsultancy.xmltask.ant.XmlTask"
             classpathref="xmltaskdef.cp"/>

    <taskdef resource="net/sf/antcontrib/antlib.xml">
        <classpath>
            <fileset dir="${tools.ant.lib}">
                <include name="ant-contrib*.jar"/>
            </fileset>
        </classpath>
    </taskdef>	

    <property name="db.dir" value="."/>
    <property name="db.lib.dir" value="${db.dir}/lib"/>
    <property name="db.build.dir" value="${db.dir}/build"/>
    <property name="db.classes.dir" value="${db.build.dir}/classes"/>
    <property name="db.gen.dir" value="${db.build.dir}/gen"/>
    <property name="db.src.java.dir" value="${db.dir}/src/java"/>

    <property name="db.test.dir" value="test"/>
    <property name="db.test.lib.dir" value="${db.test.dir}/lib"/>
    <property name="db.test.build.dir" value="${db.test.dir}/build"/>
    <property name="db.test.classes.dir"
              value="${db.test.build.dir}/classes"/>
    <property name="db.test.src.java.dir"
              value="${db.test.dir}/src/java"/>

    <property name="db.tools.hibernate.dir"
              value="${db.dir}/tools/hibernatetools"/>
    <property name="db.tools.hibernate.config"
              value="${db.tools.hibernate.dir}/hibernate.cfg.xml"/>

    <!-- Should the generated DDL include table DROP statements? -->
    <property name="db.drop.tables" value="false"/>

    <!-- Should db layer be compiled with debug on? -->
    <property name="db.debug" value="true"/>

    <property file="${hibernate.properties}"/>

    <property name="db.jdbc.driver.jar"
              value="${db.lib.dir}/mysql-connector-java-3.1.11.jar"/>

    <path id="hibernatetoolslib">
        <fileset dir="${db.dir}/tools/hibernatetools/lib">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="${db.lib.dir}">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <path id="log4j.cp">
        <fileset dir="${db.lib.dir}/hibernate">
            <include name="**/log4j*.jar"/>
        </fileset>
    </path>

    <taskdef name="hibernatetool"
             classname="org.hibernate.tool.ant.HibernateToolTask"
             classpathref="hibernatetoolslib"/>

    <target name="configure-hibernate-tools">

        <copy
                file="${db.tools.hibernate.dir}/template.hibernate.cfg.xml"
                tofile="${db.tools.hibernate.config}" overwrite="true">
            <filterset>
                <filter token="DB_URL"
                        value="${db.url}"/>
                <filter token="DB_USERNAME"
                        value="${db.username}"/>
                <filter token="DB_PASSWORD"
                        value="${db.password}"/>
                <filter token="DB_DRIVER"
                        value="${db.driver}"/>
                <filter token="DB_DIALECT"
                        value="${db.dialect}"/>

            </filterset>
        </copy>
        <delete file="${db.tools.hibernate.dir}/temp.xml"/>
        <xmltask source="${db.dir}/etc/applicationContext-db.xml">
            <call path="/*[local-name()='beans']/*[local-name()='bean' and @id='sessionFactory']/*[local-name()='property' and @name='annotatedClasses']/*[local-name()='list']/*[local-name()='value']">
                <param name="classname" path="normalize-space(text())"/>
                <actions>
                    <concat destfile="${db.tools.hibernate.dir}/temp.xml" append="true"><![CDATA[<mapping class="@{classname}"/>
]]></concat>
                </actions>
            </call>
        </xmltask>
        <xmltask source="${db.tools.hibernate.config}" dest="${db.tools.hibernate.config}" preservetype="true">
            <xmlcatalog refid="portal.catalog"/>
            <insert path="/hibernate-configuration/session-factory" file="${db.tools.hibernate.dir}/temp.xml"/>
        </xmltask>
        <delete file="${db.tools.hibernate.dir}/temp.xml"/>
    </target>

    <target name="gen-ddl"
            depends="configure-hibernate-tools,compile">

        <mkdir dir="${db.gen.dir}"/>
        <hibernatetool destdir="${db.gen.dir}">
            <classpath>
                <pathelement location="${db.tools.hibernate.dir}"/>
                <pathelement location="${db.classes.dir}"/>
            </classpath>
            <annotationconfiguration
                    configurationfile="${db.tools.hibernate.config}"/>
            <hbm2ddl export="false" drop="${db.drop.tables}"
                     outputfilename="model1.ddl"/>
        </hibernatetool>
    </target>

    <path id="db.compile.cp">
        <fileset dir="${db.lib.dir}">
            <patternset refid="db.compile.jars"/>
        </fileset>
    </path>

    <path id="db.run.cp">
        <path refid="db.compile.cp"/>
        <fileset dir="${db.lib.dir}">
            <patternset refid="db.run.jars"/>
        </fileset>

        <pathelement location="${db.jdbc.driver.jar}"/>
    </path>

    <path id="db.test.compile.cp">
        <path refid="db.compile.cp"/>
        <pathelement location="${db.classes.dir}"/>
        <fileset dir="${db.test.lib.dir}">
            <include name="*.jar"/>
        </fileset>
    </path>

    <path id="db.test.run.cp">
        <path refid="db.run.cp"/>
        <path refid="db.test.compile.cp"/>
        <pathelement location="${db.test.classes.dir}"/>
        <pathelement location="${db.test.dir}"/>
        <pathelement location="${db.dir}/test/build/classes"/>
        <pathelement location="${db.dir}/test/etc"/>
        <fileset dir="${db.test.lib.dir}">
            <include name="*.jar"/>
        </fileset>
    </path>

    <target name="compile">
        <mkdir dir="${db.classes.dir}"/>
        <javac srcdir="${db.src.java.dir}" destdir="${db.classes.dir}"
               debug="${db.debug}">
            <classpath refid="db.compile.cp"/>
        </javac>
    </target>

    <target name="jar" depends="compile">
        <jar basedir="${db.classes.dir}" destfile="${db.build.dir}/model1-dao.jar"
             includes="**/dao/**/*.class"/>
        <jar basedir="${db.classes.dir}" destfile="${db.build.dir}/model1-domain.jar"
             includes="**/domain/**/*.class"/>
    </target>

    <target name="compile-test" depends="compile">
        <mkdir dir="${db.test.classes.dir}"/>
        <javac srcdir="${db.test.src.java.dir}"
               destdir="${db.test.classes.dir}" debug="true">
            <classpath refid="db.test.compile.cp"/>
        </javac>
    </target>
	
	<target name="jar-testdb" depends="compile-test">
	        <jar basedir="${db.test.classes.dir}" destfile="${db.build.dir}/testdb.jar"
	             includes="model1/TestDB.class"/>
	    </target>

    <target name="prepare-test-cp" depends="compile-test">
        <copy todir="${db.test.classes.dir}" overwrite="true">
            <fileset dir="${db.dir}/etc">
                <include name="*.properties"/>
                <include name="*.xml"/>
            </fileset>
        </copy>

    </target>

    <target name="test" depends="compile, prepare-test-cp">

        <mkdir dir="${db.test.build.dir}/junit-reports"/>
        <junit printsummary="yes" showoutput="true" fork="true">

            <classpath refid="db.test.run.cp"/>

            <classpath>
                <pathelement location="${db.dir}/test/etc"/>
            </classpath>

            <formatter type="xml"/>

            <batchtest todir="${db.test.build.dir}/junit-reports">
                <fileset dir="${db.test.src.java.dir}">
                	<include name="**/*Test.java"/>
                    <exclude name="**/Abstract*.java"/>
                </fileset>
            </batchtest>

        </junit>
    </target>

    <target name="load-schema" depends="gen-ddl">

        <sql driver="${db.driver}"
             url="${db.url}"
             userid="${db.username}"
             password="${db.password}"
             src="${db.gen.dir}/model1.ddl">
            <classpath>
                <pathelement location="${db.jdbc.driver.jar}"/>
            </classpath>
        </sql>

    </target>

    <target name="clean">
        <delete dir="${db.build.dir}"/>
        <delete dir="${db.test.build.dir}"/>
    </target>
	
    <xmlcatalog id="portal.catalog">
        <dtd
                publicId="-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
                location="./tools/ant/resources/web-app_2_3.dtd"/>
        <dtd
                publicId="-//Liferay//DTD Display 4.0.0//EN"
                location="./tools/ant/resources/liferay-display_4_0_0.dtd"/>
        <dtd
                publicId="-//JBoss//DTD JBOSS Security Config 3.0//EN"
                location="./tools/ant/resources/security_config.dtd"/>
        <dtd
                publicId="-//Hibernate/Hibernate Configuration DTD 3.0//EN"
                location="./tools/ant/resources/hibernate-configuration-3.0.dtd"/>

    </xmlcatalog>
	
	<patternset id="db.compile.jars">
	        <include name="*.jar"/>
	    </patternset>

	    <patternset id="db.run.jars">
	    	<include name="*.jar"/>
	    </patternset>	

</project>